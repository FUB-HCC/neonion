[
  {
    "fields": {
      "updated": "2015-05-12T16:14:49.564Z",
      "name": "John F. Kennedy \u2013 Wikipedia.html",
      "created": "2015-05-12T16:14:49.564Z",
      "raw_data": "",
      "origin_url": null,
      "content_type": "text/html"
    },
    "model": "documents.file",
    "pk": 1
  },
  {
    "fields": {
      "updated": "2015-05-12T16:18:25.633Z",
      "name": "Plato - Wikipedia.html",
      "created": "2015-05-12T16:18:25.633Z",
      "raw_data": "",
      "origin_url": null,
      "content_type": "text/html"
    },
    "model": "documents.file",
    "pk": 2
  },
  {
    "fields": {
      "updated": "2015-05-14T09:01:45.588Z",
      "name": "Max Planck - Wikipedia.html",
      "created": "2015-05-14T09:01:45.588Z",
      "raw_data": "PHA+PGI+TWF4IEthcmwgRXJuc3QgTHVkd2lnIFBsYW5jazwvYj4sIEZSU1sxXSAoL3BsyZHLkMWLay87WzJdIEdlcm1hbjogW3BsYcWLa107IEFwcmlsIDIzLCAxODU4IOKAkyBPY3RvYmVyIDQsIDE5NDcpIHdhcyBhIEdlcm1hbiB0aGVvcmV0aWNhbCBwaHlzaWNpc3Qgd2hvIG9yaWdpbmF0ZWQgcXVhbnR1bSB0aGVvcnksIHdoaWNoIHdvbiBoaW0gdGhlIE5vYmVsIFByaXplIGluIFBoeXNpY3MgaW4gMTkxOC5bM108L3A+Cgo8cD5QbGFuY2sgbWFkZSBtYW55IGNvbnRyaWJ1dGlvbnMgdG8gdGhlb3JldGljYWwgcGh5c2ljcywgYnV0IGhpcyBmYW1lIGFzIGEgcGh5c2ljaXN0IHJlc3RzIHByaW1hcmlseSBvbiBoaXMgcm9sZSBhcyBhbiBvcmlnaW5hdG9yIG9mIHRoZSBxdWFudHVtIHRoZW9yeS4gSG93ZXZlciwgaGlzIG5hbWUgaXMgYWxzbyBrbm93biBvbiBhIGJyb2FkZXIgYWNhZGVtaWMgYmFzaXMsIHRocm91Z2ggdGhlIHJlbmFtaW5nIGluIDE5NDggb2YgdGhlIEdlcm1hbiBzY2llbnRpZmljIGluc3RpdHV0aW9uLCB0aGUgS2Fpc2VyIFdpbGhlbG0gU29jaWV0eSAob2Ygd2hpY2ggaGUgd2FzIHR3aWNlIHByZXNpZGVudCksIGFzIHRoZSBNYXggUGxhbmNrIFNvY2lldHkgKE1QUykuIFRoZSBNUFMgbm93IGluY2x1ZGVzIDgzIGluc3RpdHV0aW9ucyByZXByZXNlbnRpbmcgYSB3aWRlIHJhbmdlIG9mIHNjaWVudGlmaWMgZGlyZWN0aW9ucy48L3A+Cgo8cD5NYXggUGxhbmNrJ3MgcXVhbnR1bSB0aGVvcnkgcmV2b2x1dGlvbml6ZWQgaHVtYW4gdW5kZXJzdGFuZGluZyBvZiBhdG9taWMgYW5kIHN1YmF0b21pYyBwcm9jZXNzZXMsIGp1c3QgYXMgQWxiZXJ0IEVpbnN0ZWlu4oCZcyB0aGVvcnkgb2YgcmVsYXRpdml0eSByZXZvbHV0aW9uaXplZCB0aGUgdW5kZXJzdGFuZGluZyBvZiBzcGFjZSBhbmQgdGltZS4gVG9nZXRoZXIgdGhleSBjb25zdGl0dXRlIHRoZSBmdW5kYW1lbnRhbCB0aGVvcmllcyBvZiAyMHRoLWNlbnR1cnkgcGh5c2ljcy48L3A+Cgo8aDE+RWFybHkgbGlmZSBhbmQgY2FyZWVyPC9oMT4KCjxwPlBsYW5jayBjYW1lIGZyb20gYSB0cmFkaXRpb25hbCwgaW50ZWxsZWN0dWFsIGZhbWlseS4gSGlzIHBhdGVybmFsIGdyZWF0LWdyYW5kZmF0aGVyIGFuZCBncmFuZGZhdGhlciB3ZXJlIGJvdGggdGhlb2xvZ3kgcHJvZmVzc29ycyBpbiBHw7Z0dGluZ2VuOyBoaXMgZmF0aGVyIHdhcyBhIGxhdyBwcm9mZXNzb3IgaW4gS2llbCBhbmQgTXVuaWNoLjwvcD4KCjxwPlBsYW5jayB3YXMgYm9ybiBpbiBLaWVsLCBIb2xzdGVpbiwgdG8gSm9oYW5uIEp1bGl1cyBXaWxoZWxtIFBsYW5jayBhbmQgaGlzIHNlY29uZCB3aWZlLCBFbW1hIFBhdHppZy4gSGUgd2FzIGJhcHRpc2VkIHdpdGggdGhlIG5hbWUgb2YgS2FybCBFcm5zdCBMdWR3aWcgTWFyeCBQbGFuY2s7IG9mIGhpcyBnaXZlbiBuYW1lcywgTWFyeCAoYSBub3cgb2Jzb2xldGUgdmFyaWFudCBvZiBNYXJrdXMgb3IgbWF5YmUgc2ltcGx5IGFuIGVycm9yIGZvciBNYXgsIHdoaWNoIGlzIGFjdHVhbGx5IHNob3J0IGZvciBNYXhpbWlsaWFuKSB3YXMgaW5kaWNhdGVkIGFzIHRoZSBwcmltYXJ5IG5hbWUuWzRdIEhvd2V2ZXIsIGJ5IHRoZSBhZ2Ugb2YgdGVuIGhlIHNpZ25lZCB3aXRoIHRoZSBuYW1lIE1heCBhbmQgdXNlZCB0aGlzIGZvciB0aGUgcmVzdCBvZiBoaXMgbGlmZS5bNV08L3A+Cgo8cD5IZSB3YXMgdGhlIDZ0aCBjaGlsZCBpbiB0aGUgZmFtaWx5LCB0aG91Z2ggdHdvIG9mIGhpcyBzaWJsaW5ncyB3ZXJlIGZyb20gaGlzIGZhdGhlcidzIGZpcnN0IG1hcnJpYWdlLiBBbW9uZyBoaXMgZWFybGllc3QgbWVtb3JpZXMgd2FzIHRoZSBtYXJjaGluZyBvZiBQcnVzc2lhbiBhbmQgQXVzdHJpYW4gdHJvb3BzIGludG8gS2llbCBkdXJpbmcgdGhlIFNlY29uZCBTY2hsZXN3aWcgV2FyIGluIDE4NjQuIEluIDE4NjcgdGhlIGZhbWlseSBtb3ZlZCB0byBNdW5pY2gsIGFuZCBQbGFuY2sgZW5yb2xsZWQgaW4gdGhlIE1heGltaWxpYW5zIGd5bW5hc2l1bSBzY2hvb2wsIHdoZXJlIGhlIGNhbWUgdW5kZXIgdGhlIHR1dGVsYWdlIG9mIEhlcm1hbm4gTcO8bGxlciwgYSBtYXRoZW1hdGljaWFuIHdobyB0b29rIGFuIGludGVyZXN0IGluIHRoZSB5b3V0aCwgYW5kIHRhdWdodCBoaW0gYXN0cm9ub215IGFuZCBtZWNoYW5pY3MgYXMgd2VsbCBhcyBtYXRoZW1hdGljcy4gSXQgd2FzIGZyb20gTcO8bGxlciB0aGF0IFBsYW5jayBmaXJzdCBsZWFybmVkIHRoZSBwcmluY2lwbGUgb2YgY29uc2VydmF0aW9uIG9mIGVuZXJneS4gUGxhbmNrIGdyYWR1YXRlZCBlYXJseSwgYXQgYWdlIDE3Lls2XSBUaGlzIGlzIGhvdyBQbGFuY2sgZmlyc3QgY2FtZSBpbiBjb250YWN0IHdpdGggdGhlIGZpZWxkIG9mIHBoeXNpY3MuPC9wPgoKPHA+UGxhbmNrIHdhcyBnaWZ0ZWQgd2hlbiBpdCBjYW1lIHRvIG11c2ljLiBIZSB0b29rIHNpbmdpbmcgbGVzc29ucyBhbmQgcGxheWVkIHBpYW5vLCBvcmdhbiBhbmQgY2VsbG8sIGFuZCBjb21wb3NlZCBzb25ncyBhbmQgb3BlcmFzLiBIb3dldmVyLCBpbnN0ZWFkIG9mIG11c2ljIGhlIGNob3NlIHRvIHN0dWR5IHBoeXNpY3MuPC9wPgoKPHA+VGhlIE11bmljaCBwaHlzaWNzIHByb2Zlc3NvciBQaGlsaXBwIHZvbiBKb2xseSBhZHZpc2VkIFBsYW5jayBhZ2FpbnN0IGdvaW5nIGludG8gcGh5c2ljcywgc2F5aW5nLCAiaW4gdGhpcyBmaWVsZCwgYWxtb3N0IGV2ZXJ5dGhpbmcgaXMgYWxyZWFkeSBkaXNjb3ZlcmVkLCBhbmQgYWxsIHRoYXQgcmVtYWlucyBpcyB0byBmaWxsIGEgZmV3IGhvbGVzLiJbN10gUGxhbmNrIHJlcGxpZWQgdGhhdCBoZSBkaWQgbm90IHdpc2ggdG8gZGlzY292ZXIgbmV3IHRoaW5ncywgYnV0IG9ubHkgdG8gdW5kZXJzdGFuZCB0aGUga25vd24gZnVuZGFtZW50YWxzIG9mIHRoZSBmaWVsZCwgYW5kIHNvIGJlZ2FuIGhpcyBzdHVkaWVzIGluIDE4NzQgYXQgdGhlIFVuaXZlcnNpdHkgb2YgTXVuaWNoLiBVbmRlciBKb2xseSdzIHN1cGVydmlzaW9uLCBQbGFuY2sgcGVyZm9ybWVkIHRoZSBvbmx5IGV4cGVyaW1lbnRzIG9mIGhpcyBzY2llbnRpZmljIGNhcmVlciwgc3R1ZHlpbmcgdGhlIGRpZmZ1c2lvbiBvZiBoeWRyb2dlbiB0aHJvdWdoIGhlYXRlZCBwbGF0aW51bSwgYnV0IHRyYW5zZmVycmVkIHRvIHRoZW9yZXRpY2FsIHBoeXNpY3MuPC9wPgoKPHA+SW4gMTg3NyBoZSB3ZW50IHRvIEJlcmxpbiBmb3IgYSB5ZWFyIG9mIHN0dWR5IHdpdGggcGh5c2ljaXN0cyBIZXJtYW5uIHZvbiBIZWxtaG9sdHogYW5kIEd1c3RhdiBLaXJjaGhvZmYgYW5kIG1hdGhlbWF0aWNpYW4gS2FybCBXZWllcnN0cmFzcy4gSGUgd3JvdGUgdGhhdCBIZWxtaG9sdHogd2FzIG5ldmVyIHF1aXRlIHByZXBhcmVkLCBzcG9rZSBzbG93bHksIG1pc2NhbGN1bGF0ZWQgZW5kbGVzc2x5LCBhbmQgYm9yZWQgaGlzIGxpc3RlbmVycywgd2hpbGUgS2lyY2hob2ZmIHNwb2tlIGluIGNhcmVmdWxseSBwcmVwYXJlZCBsZWN0dXJlcyB3aGljaCB3ZXJlIGRyeSBhbmQgbW9ub3Rvbm91cy4gSGUgc29vbiBiZWNhbWUgY2xvc2UgZnJpZW5kcyB3aXRoIEhlbG1ob2x0ei4gV2hpbGUgdGhlcmUgaGUgdW5kZXJ0b29rIGEgcHJvZ3JhbSBvZiBtb3N0bHkgc2VsZi1zdHVkeSBvZiBDbGF1c2l1cydzIHdyaXRpbmdzLCB3aGljaCBsZWQgaGltIHRvIGNob29zZSBoZWF0IHRoZW9yeSBhcyBoaXMgZmllbGQuPC9wPgoKPHA+SW4gT2N0b2JlciAxODc4IFBsYW5jayBwYXNzZWQgaGlzIHF1YWxpZnlpbmcgZXhhbXMgYW5kIGluIEZlYnJ1YXJ5IDE4NzkgZGVmZW5kZWQgaGlzIGRpc3NlcnRhdGlvbiwgw5xiZXIgZGVuIHp3ZWl0ZW4gSGF1cHRzYXR6IGRlciBtZWNoYW5pc2NoZW4gV8Okcm1ldGhlb3JpZSAoT24gdGhlIHNlY29uZCBsYXcgb2YgdGhlcm1vZHluYW1pY3MpLiBIZSBicmllZmx5IHRhdWdodCBtYXRoZW1hdGljcyBhbmQgcGh5c2ljcyBhdCBoaXMgZm9ybWVyIHNjaG9vbCBpbiBNdW5pY2guPC9wPgoKPHA+SW4gSnVuZSAxODgwLCBoZSBwcmVzZW50ZWQgaGlzIGhhYmlsaXRhdGlvbiB0aGVzaXMsIEdsZWljaGdld2ljaHRzenVzdMOkbmRlIGlzb3Ryb3BlciBLw7ZycGVyIGluIHZlcnNjaGllZGVuZW4gVGVtcGVyYXR1cmVuIChFcXVpbGlicml1bSBzdGF0ZXMgb2YgaXNvdHJvcGljIGJvZGllcyBhdCBkaWZmZXJlbnQgdGVtcGVyYXR1cmVzKS48L3A+Cgo8aDI+QWNhZGVtaWMgY2FyZWVyPC9oMj4KCjxwPldpdGggdGhlIGNvbXBsZXRpb24gb2YgaGlzIGhhYmlsaXRhdGlvbiB0aGVzaXMsIFBsYW5jayBiZWNhbWUgYW4gdW5wYWlkIHByaXZhdGUgbGVjdHVyZXIgaW4gTXVuaWNoLCB3YWl0aW5nIHVudGlsIGhlIHdhcyBvZmZlcmVkIGFuIGFjYWRlbWljIHBvc2l0aW9uLiBBbHRob3VnaCBoZSB3YXMgaW5pdGlhbGx5IGlnbm9yZWQgYnkgdGhlIGFjYWRlbWljIGNvbW11bml0eSwgaGUgZnVydGhlcmVkIGhpcyB3b3JrIG9uIHRoZSBmaWVsZCBvZiBoZWF0IHRoZW9yeSBhbmQgZGlzY292ZXJlZCBvbmUgYWZ0ZXIgYW5vdGhlciB0aGUgc2FtZSB0aGVybW9keW5hbWljYWwgZm9ybWFsaXNtIGFzIEdpYmJzIHdpdGhvdXQgcmVhbGl6aW5nIGl0LiBDbGF1c2l1cydzIGlkZWFzIG9uIGVudHJvcHkgb2NjdXBpZWQgYSBjZW50cmFsIHJvbGUgaW4gaGlzIHdvcmsuPC9wPgoKPHA+SW4gQXByaWwgMTg4NSB0aGUgVW5pdmVyc2l0eSBvZiBLaWVsIGFwcG9pbnRlZCBQbGFuY2sgYXMgYXNzb2NpYXRlIHByb2Zlc3NvciBvZiB0aGVvcmV0aWNhbCBwaHlzaWNzLiBGdXJ0aGVyIHdvcmsgb24gZW50cm9weSBhbmQgaXRzIHRyZWF0bWVudCwgZXNwZWNpYWxseSBhcyBhcHBsaWVkIGluIHBoeXNpY2FsIGNoZW1pc3RyeSwgZm9sbG93ZWQuIEhlIHB1Ymxpc2hlZCBoaXMgVHJlYXRpc2Ugb24gVGhlcm1vZHluYW1pY3MgaW4gMTg5Ny5bOF0gSGUgcHJvcG9zZWQgYSB0aGVybW9keW5hbWljIGJhc2lzIGZvciBTdmFudGUgQXJyaGVuaXVzJ3MgdGhlb3J5IG9mIGVsZWN0cm9seXRpYyBkaXNzb2NpYXRpb24uPC9wPgoKPHA+V2l0aGluIGZvdXIgeWVhcnMgaGUgd2FzIG5hbWVkIHRoZSBzdWNjZXNzb3IgdG8gS2lyY2hob2ZmJ3MgcG9zaXRpb24gYXQgdGhlIFVuaXZlcnNpdHkgb2YgQmVybGluIOKAlCBwcmVzdW1hYmx5IHRoYW5rcyB0byBIZWxtaG9sdHoncyBpbnRlcmNlc3Npb24g4oCUIGFuZCBieSAxODkyIGJlY2FtZSBhIGZ1bGwgcHJvZmVzc29yLiBJbiAxOTA3IFBsYW5jayB3YXMgb2ZmZXJlZCBCb2x0em1hbm4ncyBwb3NpdGlvbiBpbiBWaWVubmEsIGJ1dCB0dXJuZWQgaXQgZG93biB0byBzdGF5IGluIEJlcmxpbi4gRHVyaW5nIDE5MDksIGFzIFVuaXZlcnNpdHkgb2YgQmVybGluIHByb2Zlc3NvciwgaGUgd2FzIGludml0ZWQgdG8gYmVjb21lIHRoZSBFcm5lc3QgS2VtcHRvbiBBZGFtcyBMZWN0dXJlciBpbiBUaGVvcmV0aWNhbCBQaHlzaWNzIGF0IENvbHVtYmlhIFVuaXZlcnNpdHkgaW4gTmV3IFlvcmsgQ2l0eS4gQSBzZXJpZXMgb2YgaGlzIGxlY3R1cmVzIHdlcmUgdHJhbnNsYXRlZCBhbmQgY28tcHVibGlzaGVkIGJ5IENvbHVtYmlhIFVuaXZlcnNpdHkgcHJvZmVzc29yIEEuIFAuIFdpbGxzLls5XSBIZSByZXRpcmVkIGZyb20gQmVybGluIG9uIEphbnVhcnkgMTAsIDE5MjYsIGFuZCB3YXMgc3VjY2VlZGVkIGJ5IEVyd2luIFNjaHLDtmRpbmdlci48L3A+Cgo8aDI+RmFtaWx5PC9oMj4KCjxwPkluIE1hcmNoIDE4ODcgUGxhbmNrIG1hcnJpZWQgTWFyaWUgTWVyY2sgKDE4NjHigJMxOTA5KSwgc2lzdGVyIG9mIGEgc2Nob29sIGZlbGxvdywgYW5kIG1vdmVkIHdpdGggaGVyIGludG8gYSBzdWJsZXQgYXBhcnRtZW50IGluIEtpZWwuIFRoZXkgaGFkIGZvdXIgY2hpbGRyZW46IEthcmwgKDE4ODjigJMxOTE2KSwgdGhlIHR3aW5zIEVtbWEgKDE4ODnigJMxOTE5KSBhbmQgR3JldGUgKDE4ODnigJMxOTE3KSwgYW5kIEVyd2luICgxODkz4oCTMTk0NSkuPC9wPgoKPHA+QWZ0ZXIgdGhlIGFwYXJ0bWVudCBpbiBCZXJsaW4sIHRoZSBQbGFuY2sgZmFtaWx5IGxpdmVkIGluIGEgdmlsbGEgaW4gQmVybGluLUdydW5ld2FsZCwgV2FuZ2VuaGVpbXN0cmFzc2UgMjEuIFNldmVyYWwgb3RoZXIgcHJvZmVzc29ycyBvZiBCZXJsaW4gVW5pdmVyc2l0eSBsaXZlZCBuZWFyYnksIGFtb25nIHRoZW0gdGhlb2xvZ2lhbiBBZG9sZiB2b24gSGFybmFjaywgd2hvIGJlY2FtZSBhIGNsb3NlIGZyaWVuZCBvZiBQbGFuY2suIFNvb24gdGhlIFBsYW5jayBob21lIGJlY2FtZSBhIHNvY2lhbCBhbmQgY3VsdHVyYWwgY2VudHJlLiBOdW1lcm91cyB3ZWxsLWtub3duIHNjaWVudGlzdHMsIHN1Y2ggYXMgQWxiZXJ0IEVpbnN0ZWluLCBPdHRvIEhhaG4gYW5kIExpc2UgTWVpdG5lciB3ZXJlIGZyZXF1ZW50IHZpc2l0b3JzLiBUaGUgdHJhZGl0aW9uIG9mIGpvaW50bHkgcGVyZm9ybWluZyBtdXNpYyBoYWQgYWxyZWFkeSBiZWVuIGVzdGFibGlzaGVkIGluIHRoZSBob21lIG9mIEhlbG1ob2x0ei48L3A+Cgo8cD5BZnRlciBzZXZlcmFsIGhhcHB5IHllYXJzLCBpbiBKdWx5IDE5MDkgTWFyaWUgUGxhbmNrIGRpZWQsIHBvc3NpYmx5IGZyb20gdHViZXJjdWxvc2lzLiBJbiBNYXJjaCAxOTExIFBsYW5jayBtYXJyaWVkIGhpcyBzZWNvbmQgd2lmZSwgTWFyZ2Egdm9uIEhvZXNzbGluICgxODgy4oCTMTk0OCk7IGluIERlY2VtYmVyIGhpcyBmaWZ0aCBjaGlsZCBIZXJtYW5uIHdhcyBib3JuLjwvcD4KCjxwPkR1cmluZyB0aGUgRmlyc3QgV29ybGQgV2FyIFBsYW5jaydzIHNlY29uZCBzb24gRXJ3aW4gd2FzIHRha2VuIHByaXNvbmVyIGJ5IHRoZSBGcmVuY2ggaW4gMTkxNCwgd2hpbGUgaGlzIG9sZGVzdCBzb24gS2FybCB3YXMga2lsbGVkIGluIGFjdGlvbiBhdCBWZXJkdW4uIEdyZXRlIGRpZWQgaW4gMTkxNyB3aGlsZSBnaXZpbmcgYmlydGggdG8gaGVyIGZpcnN0IGNoaWxkLiBIZXIgc2lzdGVyIGRpZWQgdGhlIHNhbWUgd2F5IHR3byB5ZWFycyBsYXRlciwgYWZ0ZXIgaGF2aW5nIG1hcnJpZWQgR3JldGUncyB3aWRvd2VyLiBCb3RoIGdyYW5kZGF1Z2h0ZXJzIHN1cnZpdmVkIGFuZCB3ZXJlIG5hbWVkIGFmdGVyIHRoZWlyIG1vdGhlcnMuIFBsYW5jayBlbmR1cmVkIHRoZXNlIGxvc3NlcyBzdG9pY2FsbHkuPC9wPgoKPHA+SW4gSmFudWFyeSAxOTQ1LCBFcndpbiwgdG8gd2hvbSBoZSBoYWQgYmVlbiBwYXJ0aWN1bGFybHkgY2xvc2UsIHdhcyBzZW50ZW5jZWQgdG8gZGVhdGggYnkgdGhlIE5hemkgVm9sa3NnZXJpY2h0c2hvZiBiZWNhdXNlIG9mIGhpcyBwYXJ0aWNpcGF0aW9uIGluIHRoZSBmYWlsZWQgYXR0ZW1wdCB0byBhc3Nhc3NpbmF0ZSBIaXRsZXIgaW4gSnVseSAxOTQ0LiBFcndpbiB3YXMgZXhlY3V0ZWQgb24gMjMgSmFudWFyeSAxOTQ1LlsxMF08L3A+Cgo8cD5XaXZlczogTWFyaWUgTWVyY2sgKG0uIDE4ODcpLCBNYXJnYSB2b24gSG9lc3NsaW4gKG0uIDE5MTEpPC9wPgo8cD5DaGlsZHJlbjogS2FybCAoMTg4OOKAkzE5MTYpLCB0d2lucyBFbW1hICgxODg54oCTMTkxOSkgYW5kIEdyZXRlICgxODg54oCTMTkxNyksIEVyd2luICgxODkz4oCTMTk0NSksIEhlcm1hbm4gKDE5MTHigJMxOTU0KTwvcD4KCjxoMj5Qcm9mZXNzb3IgYXQgQmVybGluIFVuaXZlcnNpdHk8L2gyPgoKPHA+SW4gQmVybGluLCBQbGFuY2sgam9pbmVkIHRoZSBsb2NhbCBQaHlzaWNhbCBTb2NpZXR5LiBIZSBsYXRlciB3cm90ZSBhYm91dCB0aGlzIHRpbWU6ICJJbiB0aG9zZSBkYXlzIEkgd2FzIGVzc2VudGlhbGx5IHRoZSBvbmx5IHRoZW9yZXRpY2FsIHBoeXNpY2lzdCB0aGVyZSwgd2hlbmNlIHRoaW5ncyB3ZXJlIG5vdCBzbyBlYXN5IGZvciBtZSwgYmVjYXVzZSBJIHN0YXJ0ZWQgbWVudGlvbmluZyBlbnRyb3B5LCBidXQgdGhpcyB3YXMgbm90IHF1aXRlIGZhc2hpb25hYmxlLCBzaW5jZSBpdCB3YXMgcmVnYXJkZWQgYXMgYSBtYXRoZW1hdGljYWwgc3Bvb2siLlsxMV0gVGhhbmtzIHRvIGhpcyBpbml0aWF0aXZlLCB0aGUgdmFyaW91cyBsb2NhbCBQaHlzaWNhbCBTb2NpZXRpZXMgb2YgR2VybWFueSBtZXJnZWQgaW4gMTg5OCB0byBmb3JtIHRoZSBHZXJtYW4gUGh5c2ljYWwgU29jaWV0eSAoRGV1dHNjaGUgUGh5c2lrYWxpc2NoZSBHZXNlbGxzY2hhZnQsIERQRyk7IGZyb20gMTkwNSB0byAxOTA5IFBsYW5jayB3YXMgdGhlIHByZXNpZGVudC48L3A+Cgo8cD5QbGFuY2sgc3RhcnRlZCBhIHNpeC1zZW1lc3RlciBjb3Vyc2Ugb2YgbGVjdHVyZXMgb24gdGhlb3JldGljYWwgcGh5c2ljcywgImRyeSwgc29tZXdoYXQgaW1wZXJzb25hbCIgYWNjb3JkaW5nIHRvIExpc2UgTWVpdG5lciwgInVzaW5nIG5vIG5vdGVzLCBuZXZlciBtYWtpbmcgbWlzdGFrZXMsIG5ldmVyIGZhbHRlcmluZzsgdGhlIGJlc3QgbGVjdHVyZXIgSSBldmVyIGhlYXJkIiBhY2NvcmRpbmcgdG8gYW4gRW5nbGlzaCBwYXJ0aWNpcGFudCwgSmFtZXMgUi4gUGFydGluZ3Rvbiwgd2hvIGNvbnRpbnVlczogIlRoZXJlIHdlcmUgYWx3YXlzIG1hbnkgc3RhbmRpbmcgYXJvdW5kIHRoZSByb29tLiBBcyB0aGUgbGVjdHVyZS1yb29tIHdhcyB3ZWxsIGhlYXRlZCBhbmQgcmF0aGVyIGNsb3NlLCBzb21lIG9mIHRoZSBsaXN0ZW5lcnMgd291bGQgZnJvbSB0aW1lIHRvIHRpbWUgZHJvcCB0byB0aGUgZmxvb3IsIGJ1dCB0aGlzIGRpZCBub3QgZGlzdHVyYiB0aGUgbGVjdHVyZSIuIFBsYW5jayBkaWQgbm90IGVzdGFibGlzaCBhbiBhY3R1YWwgInNjaG9vbCI7IHRoZSBudW1iZXIgb2YgaGlzIGdyYWR1YXRlIHN0dWRlbnRzIHdhcyBvbmx5IGFib3V0IDIwLCBhbW9uZyB0aGVtOjwvcD4KCjx1bD4KICAgIDxsaT4xODk3IE1heCBBYnJhaGFtICgxODc14oCTMTkyMik8L2xpPgogICAgPGxpPjE5MDQgTW9yaXR6IFNjaGxpY2sgKDE4ODLigJMxOTM2KTwvbGk+CiAgICA8bGk+MTkwNiBXYWx0aGVyIE1laXNzbmVyICgxODgy4oCTMTk3NCk8L2xpPgogICAgPGxpPjE5MDYgTWF4IHZvbiBMYXVlICgxODc54oCTMTk2MCk8L2xpPgogICAgPGxpPjE5MDcgRnJpdHogUmVpY2hlICgxODgz4oCTMTk2MCk8L2xpPgogICAgPGxpPjE5MTIgV2FsdGVyIFNjaG90dGt5ICgxODg24oCTMTk3Nik8L2xpPgogICAgPGxpPjE5MTQgV2FsdGhlciBCb3RoZSAoMTg5MeKAkzE5NTcpPC9saT4KICAgIDxsaT5CbGFjay1ib2R5IHJhZGlhdGlvbjwvbGk+CjwvdWw+Cgo8cD5JbiAxODk0IFBsYW5jayB0dXJuZWQgaGlzIGF0dGVudGlvbiB0byB0aGUgcHJvYmxlbSBvZiBibGFjay1ib2R5IHJhZGlhdGlvbi4gSGUgaGFkIGJlZW4gY29tbWlzc2lvbmVkIGJ5IGVsZWN0cmljIGNvbXBhbmllcyB0byBjcmVhdGUgbWF4aW11bSBsaWdodCBmcm9tIGxpZ2h0YnVsYnMgd2l0aCBtaW5pbXVtIGVuZXJneS4gVGhlIHByb2JsZW0gaGFkIGJlZW4gc3RhdGVkIGJ5IEtpcmNoaG9mZiBpbiAxODU5OiAiaG93IGRvZXMgdGhlIGludGVuc2l0eSBvZiB0aGUgZWxlY3Ryb21hZ25ldGljIHJhZGlhdGlvbiBlbWl0dGVkIGJ5IGEgYmxhY2sgYm9keSAoYSBwZXJmZWN0IGFic29yYmVyLCBhbHNvIGtub3duIGFzIGEgY2F2aXR5IHJhZGlhdG9yKSBkZXBlbmQgb24gdGhlIGZyZXF1ZW5jeSBvZiB0aGUgcmFkaWF0aW9uIChpLmUuLCB0aGUgY29sb3Igb2YgdGhlIGxpZ2h0KSBhbmQgdGhlIHRlbXBlcmF0dXJlIG9mIHRoZSBib2R5PyIuIFRoZSBxdWVzdGlvbiBoYWQgYmVlbiBleHBsb3JlZCBleHBlcmltZW50YWxseSwgYnV0IG5vIHRoZW9yZXRpY2FsIHRyZWF0bWVudCBhZ3JlZWQgd2l0aCBleHBlcmltZW50YWwgdmFsdWVzLiBXaWxoZWxtIFdpZW4gcHJvcG9zZWQgV2llbidzIGxhdywgd2hpY2ggY29ycmVjdGx5IHByZWRpY3RlZCB0aGUgYmVoYXZpb3VyIGF0IGhpZ2ggZnJlcXVlbmNpZXMsIGJ1dCBmYWlsZWQgYXQgbG93IGZyZXF1ZW5jaWVzLiBUaGUgUmF5bGVpZ2jigJNKZWFucyBsYXcsIGFub3RoZXIgYXBwcm9hY2ggdG8gdGhlIHByb2JsZW0sIGNyZWF0ZWQgd2hhdCB3YXMgbGF0ZXIga25vd24gYXMgdGhlICJ1bHRyYXZpb2xldCBjYXRhc3Ryb3BoZSIsIGJ1dCBjb250cmFyeSB0byBtYW55IHRleHRib29rcyB0aGlzIHdhcyBub3QgYSBtb3RpdmF0aW9uIGZvciBQbGFuY2suWzEyXTwvcD4KCjxwPlBsYW5jaydzIGZpcnN0IHByb3Bvc2VkIHNvbHV0aW9uIHRvIHRoZSBwcm9ibGVtIGluIDE4OTkgZm9sbG93ZWQgZnJvbSB3aGF0IFBsYW5jayBjYWxsZWQgdGhlICJwcmluY2lwbGUgb2YgZWxlbWVudGFyeSBkaXNvcmRlciIsIHdoaWNoIGFsbG93ZWQgaGltIHRvIGRlcml2ZSBXaWVuJ3MgbGF3IGZyb20gYSBudW1iZXIgb2YgYXNzdW1wdGlvbnMgYWJvdXQgdGhlIGVudHJvcHkgb2YgYW4gaWRlYWwgb3NjaWxsYXRvciwgY3JlYXRpbmcgd2hhdCB3YXMgcmVmZXJyZWQtdG8gYXMgdGhlIFdpZW7igJNQbGFuY2sgbGF3LiBTb29uIGl0IHdhcyBmb3VuZCB0aGF0IGV4cGVyaW1lbnRhbCBldmlkZW5jZSBkaWQgbm90IGNvbmZpcm0gdGhlIG5ldyBsYXcgYXQgYWxsLCB0byBQbGFuY2sncyBmcnVzdHJhdGlvbi4gUGxhbmNrIHJldmlzZWQgaGlzIGFwcHJvYWNoLCBkZXJpdmluZyB0aGUgZmlyc3QgdmVyc2lvbiBvZiB0aGUgZmFtb3VzIFBsYW5jayBibGFjay1ib2R5IHJhZGlhdGlvbiBsYXcsIHdoaWNoIGRlc2NyaWJlZCB0aGUgZXhwZXJpbWVudGFsbHkgb2JzZXJ2ZWQgYmxhY2stYm9keSBzcGVjdHJ1bSB3ZWxsLiBJdCB3YXMgZmlyc3QgcHJvcG9zZWQgaW4gYSBtZWV0aW5nIG9mIHRoZSBEUEcgb24gT2N0b2JlciAxOSwgMTkwMCBhbmQgcHVibGlzaGVkIGluIDE5MDEuIFRoaXMgZmlyc3QgZGVyaXZhdGlvbiBkaWQgbm90IGluY2x1ZGUgZW5lcmd5IHF1YW50aXNhdGlvbiwgYW5kIGRpZCBub3QgdXNlIHN0YXRpc3RpY2FsIG1lY2hhbmljcywgdG8gd2hpY2ggaGUgaGVsZCBhbiBhdmVyc2lvbi4gSW4gTm92ZW1iZXIgMTkwMCwgUGxhbmNrIHJldmlzZWQgdGhpcyBmaXJzdCBhcHByb2FjaCwgcmVseWluZyBvbiBCb2x0em1hbm4ncyBzdGF0aXN0aWNhbCBpbnRlcnByZXRhdGlvbiBvZiB0aGUgc2Vjb25kIGxhdyBvZiB0aGVybW9keW5hbWljcyBhcyBhIHdheSBvZiBnYWluaW5nIGEgbW9yZSBmdW5kYW1lbnRhbCB1bmRlcnN0YW5kaW5nIG9mIHRoZSBwcmluY2lwbGVzIGJlaGluZCBoaXMgcmFkaWF0aW9uIGxhdy4gQXMgUGxhbmNrIHdhcyBkZWVwbHkgc3VzcGljaW91cyBvZiB0aGUgcGhpbG9zb3BoaWNhbCBhbmQgcGh5c2ljYWwgaW1wbGljYXRpb25zIG9mIHN1Y2ggYW4gaW50ZXJwcmV0YXRpb24gb2YgQm9sdHptYW5uJ3MgYXBwcm9hY2gsIGhpcyByZWNvdXJzZSB0byB0aGVtIHdhcywgYXMgaGUgbGF0ZXIgcHV0IGl0LCAiYW4gYWN0IG9mIGRlc3BhaXIgLi4uIEkgd2FzIHJlYWR5IHRvIHNhY3JpZmljZSBhbnkgb2YgbXkgcHJldmlvdXMgY29udmljdGlvbnMgYWJvdXQgcGh5c2ljcy4iWzEyXTwvcD4KCjxwPlRoZSBjZW50cmFsIGFzc3VtcHRpb24gYmVoaW5kIGhpcyBuZXcgZGVyaXZhdGlvbiwgcHJlc2VudGVkIHRvIHRoZSBEUEcgb24gMTQgRGVjZW1iZXIgMTkwMCwgd2FzIHRoZSBzdXBwb3NpdGlvbiwgbm93IGtub3duIGFzIHRoZSBQbGFuY2sgcG9zdHVsYXRlLCB0aGF0IGVsZWN0cm9tYWduZXRpYyBlbmVyZ3kgY291bGQgYmUgZW1pdHRlZCBvbmx5IGluIHF1YW50aXplZCBmb3JtLCBpbiBvdGhlciB3b3JkcywgdGhlIGVuZXJneSBjb3VsZCBvbmx5IGJlIGEgbXVsdGlwbGUgb2YgYW4gZWxlbWVudGFyeSB1bml0IEUgPSBoIFxudSwgd2hlcmUgaCBpcyBQbGFuY2sncyBjb25zdGFudCwgYWxzbyBrbm93biBhcyBQbGFuY2sncyBhY3Rpb24gcXVhbnR1bSAoaW50cm9kdWNlZCBhbHJlYWR5IGluIDE4OTkpLCBhbmQgXG51ICh0aGUgR3JlZWsgbGV0dGVyIG51LCBub3QgdGhlIFJvbWFuIGxldHRlciB2KSBpcyB0aGUgZnJlcXVlbmN5IG9mIHRoZSByYWRpYXRpb24uIE5vdGUgdGhhdCB0aGUgZWxlbWVudGFyeSB1bml0cyBvZiBlbmVyZ3kgZGlzY3Vzc2VkIGhlcmUgYXJlIHJlcHJlc2VudGVkIGJ5IGggXG51IGFuZCBub3Qgc2ltcGx5IGJ5IGguIFBoeXNpY2lzdHMgbm93IGNhbGwgdGhlc2UgcXVhbnRhIHBob3RvbnMsIGFuZCBhIHBob3RvbiBvZiBmcmVxdWVuY3kgXG51IHdpbGwgaGF2ZSBpdHMgb3duIHNwZWNpZmljIGFuZCB1bmlxdWUgZW5lcmd5LiBUaGUgdG90YWwgZW5lcmd5IGF0IHRoYXQgZnJlcXVlbmN5IGlzIHRoZW4gZXF1YWwgdG8gaCBcbnUgbXVsdGlwbGllZCBieSB0aGUgbnVtYmVyIG9mIHBob3RvbnMgYXQgdGhhdCBmcmVxdWVuY3kuPC9wPgoKPHA+QXQgZmlyc3QgUGxhbmNrIGNvbnNpZGVyZWQgdGhhdCBxdWFudGlzYXRpb24gd2FzIG9ubHkgImEgcHVyZWx5IGZvcm1hbCBhc3N1bXB0aW9uIC4uLiBhY3R1YWxseSBJIGRpZCBub3QgdGhpbmsgbXVjaCBhYm91dCBpdC4uLiI7IG5vd2FkYXlzIHRoaXMgYXNzdW1wdGlvbiwgaW5jb21wYXRpYmxlIHdpdGggY2xhc3NpY2FsIHBoeXNpY3MsIGlzIHJlZ2FyZGVkIGFzIHRoZSBiaXJ0aCBvZiBxdWFudHVtIHBoeXNpY3MgYW5kIHRoZSBncmVhdGVzdCBpbnRlbGxlY3R1YWwgYWNjb21wbGlzaG1lbnQgb2YgUGxhbmNrJ3MgY2FyZWVyIChMdWR3aWcgQm9sdHptYW5uIGhhZCBiZWVuIGRpc2N1c3NpbmcgaW4gYSB0aGVvcmV0aWNhbCBwYXBlciBpbiAxODc3IHRoZSBwb3NzaWJpbGl0eSB0aGF0IHRoZSBlbmVyZ3kgc3RhdGVzIG9mIGEgcGh5c2ljYWwgc3lzdGVtIGNvdWxkIGJlIGRpc2NyZXRlKS4gVGhlIGRpc2NvdmVyeSBvZiBQbGFuY2sncyBjb25zdGFudCBlbmFibGVkIGhpbSB0byBkZWZpbmUgYSBuZXcgdW5pdmVyc2FsIHNldCBvZiBwaHlzaWNhbCB1bml0cyAoc3VjaCBhcyB0aGUgUGxhbmNrIGxlbmd0aCBhbmQgdGhlIFBsYW5jayBtYXNzKSwgYWxsIGJhc2VkIG9uIGZ1bmRhbWVudGFsIHBoeXNpY2FsIGNvbnN0YW50cyB1cG9uIHdoaWNoIG11Y2ggb2YgcXVhbnR1bSB0aGVvcnkgaXMgYmFzZWQuIEluIHJlY29nbml0aW9uIG9mIFBsYW5jaydzIGZ1bmRhbWVudGFsIGNvbnRyaWJ1dGlvbiB0byBhIG5ldyBicmFuY2ggb2YgcGh5c2ljcywgaGUgd2FzIGF3YXJkZWQgdGhlIE5vYmVsIFByaXplIGluIFBoeXNpY3MgaW4gMTkxOC5bMTNdPC9wPgoKPHA+U3Vic2VxdWVudGx5LCBQbGFuY2sgdHJpZWQgdG8gZ3Jhc3AgdGhlIG1lYW5pbmcgb2YgZW5lcmd5IHF1YW50YSwgYnV0IHRvIG5vIGF2YWlsLiAiTXkgdW5hdmFpbGluZyBhdHRlbXB0cyB0byBzb21laG93IHJlaW50ZWdyYXRlIHRoZSBhY3Rpb24gcXVhbnR1bSBpbnRvIGNsYXNzaWNhbCB0aGVvcnkgZXh0ZW5kZWQgb3ZlciBzZXZlcmFsIHllYXJzIGFuZCBjYXVzZWQgbWUgbXVjaCB0cm91YmxlLiIgRXZlbiBzZXZlcmFsIHllYXJzIGxhdGVyLCBvdGhlciBwaHlzaWNpc3RzIGxpa2UgUmF5bGVpZ2gsIEplYW5zLCBhbmQgTG9yZW50eiBzZXQgUGxhbmNrJ3MgY29uc3RhbnQgdG8gemVybyBpbiBvcmRlciB0byBhbGlnbiB3aXRoIGNsYXNzaWNhbCBwaHlzaWNzLCBidXQgUGxhbmNrIGtuZXcgd2VsbCB0aGF0IHRoaXMgY29uc3RhbnQgaGFkIGEgcHJlY2lzZSBub256ZXJvIHZhbHVlLiAiSSBhbSB1bmFibGUgdG8gdW5kZXJzdGFuZCBKZWFucycgc3R1YmJvcm5uZXNzIOKAlCBoZSBpcyBhbiBleGFtcGxlIG9mIGEgdGhlb3JldGljaWFuIGFzIHNob3VsZCBuZXZlciBiZSBleGlzdGluZywgdGhlIHNhbWUgYXMgSGVnZWwgd2FzIGZvciBwaGlsb3NvcGh5LiBTbyBtdWNoIHRoZSB3b3JzZSBmb3IgdGhlIGZhY3RzIGlmIHRoZXkgZG9uJ3QgZml0LiJbMTRdPC9wPgoKPHA+TWF4IEJvcm4gd3JvdGUgYWJvdXQgUGxhbmNrOiAiSGUgd2FzLCBieSBuYXR1cmUsIGEgY29uc2VydmF0aXZlIG1pbmQ7IGhlIGhhZCBub3RoaW5nIG9mIHRoZSByZXZvbHV0aW9uYXJ5IGFuZCB3YXMgdGhvcm91Z2hseSBza2VwdGljYWwgYWJvdXQgc3BlY3VsYXRpb25zLiBZZXQgaGlzIGJlbGllZiBpbiB0aGUgY29tcGVsbGluZyBmb3JjZSBvZiBsb2dpY2FsIHJlYXNvbmluZyBmcm9tIGZhY3RzIHdhcyBzbyBzdHJvbmcgdGhhdCBoZSBkaWQgbm90IGZsaW5jaCBmcm9tIGFubm91bmNpbmcgdGhlIG1vc3QgcmV2b2x1dGlvbmFyeSBpZGVhIHdoaWNoIGV2ZXIgaGFzIHNoYWtlbiBwaHlzaWNzLiJbMV08L3A+Cgo8aDI+RWluc3RlaW4gYW5kIHRoZSB0aGVvcnkgb2YgcmVsYXRpdml0eTwvaDI+Cgo8cD5JbiAxOTA1LCB0aGUgdGhyZWUgZXBvY2hhbCBwYXBlcnMgb2YgdGhlIGhpdGhlcnRvIGNvbXBsZXRlbHkgdW5rbm93biBBbGJlcnQgRWluc3RlaW4gd2VyZSBwdWJsaXNoZWQgaW4gdGhlIGpvdXJuYWwgQW5uYWxlbiBkZXIgUGh5c2lrLiBQbGFuY2sgd2FzIGFtb25nIHRoZSBmZXcgd2hvIGltbWVkaWF0ZWx5IHJlY29nbml6ZWQgdGhlIHNpZ25pZmljYW5jZSBvZiB0aGUgc3BlY2lhbCB0aGVvcnkgb2YgcmVsYXRpdml0eS4gVGhhbmtzIHRvIGhpcyBpbmZsdWVuY2UsIHRoaXMgdGhlb3J5IHdhcyBzb29uIHdpZGVseSBhY2NlcHRlZCBpbiBHZXJtYW55LiBQbGFuY2sgYWxzbyBjb250cmlidXRlZCBjb25zaWRlcmFibHkgdG8gZXh0ZW5kIHRoZSBzcGVjaWFsIHRoZW9yeSBvZiByZWxhdGl2aXR5LiBGb3IgZXhhbXBsZSwgaGUgcmVjYXN0IHRoZSB0aGVvcnkgaW4gdGVybXMgb2YgY2xhc3NpY2FsIGFjdGlvbi5bMTVdPC9wPgoKPHA+RWluc3RlaW4ncyBoeXBvdGhlc2lzIG9mIGxpZ2h0IHF1YW50YSAocGhvdG9ucyksIGJhc2VkIG9uIFBoaWxpcHAgTGVuYXJkJ3MgMTkwMiBkaXNjb3Zlcnkgb2YgdGhlIHBob3RvZWxlY3RyaWMgZWZmZWN0LCB3YXMgaW5pdGlhbGx5IHJlamVjdGVkIGJ5IFBsYW5jay4gSGUgd2FzIHVud2lsbGluZyB0byBkaXNjYXJkIGNvbXBsZXRlbHkgTWF4d2VsbCdzIHRoZW9yeSBvZiBlbGVjdHJvZHluYW1pY3MuICJUaGUgdGhlb3J5IG9mIGxpZ2h0IHdvdWxkIGJlIHRocm93biBiYWNrIG5vdCBieSBkZWNhZGVzLCBidXQgYnkgY2VudHVyaWVzLCBpbnRvIHRoZSBhZ2Ugd2hlbiBDaHJpc3RpYW4gSHV5Z2VucyBkYXJlZCB0byBmaWdodCBhZ2FpbnN0IHRoZSBtaWdodHkgZW1pc3Npb24gdGhlb3J5IG9mIElzYWFjIE5ld3RvbiAuLi4iPC9wPgoKPHA+SW4gMTkxMCwgRWluc3RlaW4gcG9pbnRlZCBvdXQgdGhlIGFub21hbG91cyBiZWhhdmlvciBvZiBzcGVjaWZpYyBoZWF0IGF0IGxvdyB0ZW1wZXJhdHVyZXMgYXMgYW5vdGhlciBleGFtcGxlIG9mIGEgcGhlbm9tZW5vbiB3aGljaCBkZWZpZXMgZXhwbGFuYXRpb24gYnkgY2xhc3NpY2FsIHBoeXNpY3MuIFBsYW5jayBhbmQgTmVybnN0LCBzZWVraW5nIHRvIGNsYXJpZnkgdGhlIGluY3JlYXNpbmcgbnVtYmVyIG9mIGNvbnRyYWRpY3Rpb25zLCBvcmdhbml6ZWQgdGhlIEZpcnN0IFNvbHZheSBDb25mZXJlbmNlIChCcnVzc2VscyAxOTExKS4gQXQgdGhpcyBtZWV0aW5nIEVpbnN0ZWluIHdhcyBhYmxlIHRvIGNvbnZpbmNlIFBsYW5jay48L3A+Cgo8cD5NZWFud2hpbGUsIFBsYW5jayBoYWQgYmVlbiBhcHBvaW50ZWQgZGVhbiBvZiBCZXJsaW4gVW5pdmVyc2l0eSwgd2hlcmVieSBpdCB3YXMgcG9zc2libGUgZm9yIGhpbSB0byBjYWxsIEVpbnN0ZWluIHRvIEJlcmxpbiBhbmQgZXN0YWJsaXNoIGEgbmV3IHByb2Zlc3NvcnNoaXAgZm9yIGhpbSAoMTkxNCkuIFNvb24gdGhlIHR3byBzY2llbnRpc3RzIGJlY2FtZSBjbG9zZSBmcmllbmRzIGFuZCBtZXQgZnJlcXVlbnRseSB0byBwbGF5IG11c2ljIHRvZ2V0aGVyLjwvcD4KCjxoMj5Xb3JsZCBXYXIgSTwvaDI+Cgo8cD5BdCB0aGUgb25zZXQgb2YgdGhlIEZpcnN0IFdvcmxkIFdhciBQbGFuY2sgZW5kb3JzZWQgdGhlIGdlbmVyYWwgZXhjaXRlbWVudCBvZiB0aGUgcHVibGljLCB3cml0aW5nIHRoYXQsICJCZXNpZGVzIG11Y2ggdGhhdCBpcyBob3JyaWJsZSwgdGhlcmUgaXMgYWxzbyBtdWNoIHRoYXQgaXMgdW5leHBlY3RlZGx5IGdyZWF0IGFuZCBiZWF1dGlmdWw6IHRoZSBzbW9vdGggc29sdXRpb24gb2YgdGhlIG1vc3QgZGlmZmljdWx0IGRvbWVzdGljIHBvbGl0aWNhbCBwcm9ibGVtcyBieSB0aGUgdW5pZmljYXRpb24gb2YgYWxsIHBhcnRpZXMgKGFuZCkgLi4uIHRoZSBleHRvbGxpbmcgb2YgZXZlcnl0aGluZyBnb29kIGFuZCBub2JsZS4iWzE2XVsxN108L3A+Cgo8cD5Ob25ldGhlbGVzcywgUGxhbmNrIHJlZnJhaW5lZCBmcm9tIHRoZSBleHRyZW1lcyBvZiBuYXRpb25hbGlzbS4gSW4gMTkxNSwgYXQgYSB0aW1lIHdoZW4gSXRhbHkgd2FzIGFib3V0IHRvIGpvaW4gdGhlIEFsbGllZCBQb3dlcnMsIGhlIHZvdGVkIHN1Y2Nlc3NmdWxseSBmb3IgYSBzY2llbnRpZmljIHBhcGVyIGZyb20gSXRhbHksIHdoaWNoIHJlY2VpdmVkIGEgcHJpemUgZnJvbSB0aGUgUHJ1c3NpYW4gQWNhZGVteSBvZiBTY2llbmNlcywgd2hlcmUgUGxhbmNrIHdhcyBvbmUgb2YgZm91ciBwZXJtYW5lbnQgcHJlc2lkZW50cy48L3A+Cgo8cD5QbGFuY2sgYWxzbyBzaWduZWQgdGhlIGluZmFtb3VzICJNYW5pZmVzdG8gb2YgdGhlIDkzIGludGVsbGVjdHVhbHMiLCBhIHBhbXBobGV0IG9mIHBvbGVtaWMgd2FyIHByb3BhZ2FuZGEgKHdoaWxlIEVpbnN0ZWluIHJldGFpbmVkIGEgc3RyaWN0bHkgcGFjaWZpc3RpYyBhdHRpdHVkZSB3aGljaCBhbG1vc3QgbGVkIHRvIGhpcyBpbXByaXNvbm1lbnQsIGJlaW5nIHNwYXJlZCBieSBoaXMgU3dpc3MgY2l0aXplbnNoaXApLiBCdXQgaW4gMTkxNSBQbGFuY2ssIGFmdGVyIHNldmVyYWwgbWVldGluZ3Mgd2l0aCBEdXRjaCBwaHlzaWNpc3QgTG9yZW50eiwgcmV2b2tlZCBwYXJ0cyBvZiB0aGUgTWFuaWZlc3RvLiBUaGVuIGluIDE5MTYgaGUgc2lnbmVkIGEgZGVjbGFyYXRpb24gYWdhaW5zdCBHZXJtYW4gYW5uZXhhdGlvbmlzbS48L3A+Cgo8aDI+UG9zdCBXYXIgYW5kIFdlaW1hciBSZXB1YmxpYzwvaDI+Cgo8cD5JbiB0aGUgdHVyYnVsZW50IHBvc3Qtd2FyIHllYXJzLCBQbGFuY2ssIG5vdyB0aGUgaGlnaGVzdCBhdXRob3JpdHkgb2YgR2VybWFuIHBoeXNpY3MsIGlzc3VlZCB0aGUgc2xvZ2FuICJwZXJzZXZlcmUgYW5kIGNvbnRpbnVlIHdvcmtpbmciIHRvIGhpcyBjb2xsZWFndWVzLjwvcD4KCjxwPkluIE9jdG9iZXIgMTkyMCBoZSBhbmQgRnJpdHogSGFiZXIgZXN0YWJsaXNoZWQgdGhlIE5vdGdlbWVpbnNjaGFmdCBkZXIgRGV1dHNjaGVuIFdpc3NlbnNjaGFmdCAoRW1lcmdlbmN5IE9yZ2FuaXphdGlvbiBvZiBHZXJtYW4gU2NpZW5jZSksIGFpbWVkIGF0IHByb3ZpZGluZyBmaW5hbmNpYWwgc3VwcG9ydCBmb3Igc2NpZW50aWZpYyByZXNlYXJjaC4gQSBjb25zaWRlcmFibGUgcG9ydGlvbiBvZiB0aGUgbW9uZXlzIHRoZSBvcmdhbml6YXRpb24gd291bGQgZGlzdHJpYnV0ZSB3ZXJlIHJhaXNlZCBhYnJvYWQuPC9wPgoKPHA+UGxhbmNrIGFsc28gaGVsZCBsZWFkaW5nIHBvc2l0aW9ucyBhdCBCZXJsaW4gVW5pdmVyc2l0eSwgdGhlIFBydXNzaWFuIEFjYWRlbXkgb2YgU2NpZW5jZXMsIHRoZSBHZXJtYW4gUGh5c2ljYWwgU29jaWV0eSBhbmQgdGhlIEthaXNlciBXaWxoZWxtIFNvY2lldHkgKHdoaWNoIGluIDE5NDggYmVjYW1lIHRoZSBNYXggUGxhbmNrIFNvY2lldHkpLiBEdXJpbmcgdGhpcyB0aW1lIGVjb25vbWljIGNvbmRpdGlvbnMgaW4gR2VybWFueSB3ZXJlIHN1Y2ggdGhhdCBoZSB3YXMgaGFyZGx5IGFibGUgdG8gY29uZHVjdCByZXNlYXJjaC48L3A+Cgo8cD5EdXJpbmcgdGhlIGludGVyd2FyIHBlcmlvZCwgUGxhbmNrIGJlY2FtZSBhIG1lbWJlciBvZiB0aGUgRGV1dHNjaGUgVm9sa3MtUGFydGVpIChHZXJtYW4gUGVvcGxlJ3MgUGFydHkpLCB0aGUgcGFydHkgb2YgTm9iZWwgUGVhY2UgUHJpemUgbGF1cmVhdGUgR3VzdGF2IFN0cmVzZW1hbm4sIHdoaWNoIGFzcGlyZWQgdG8gbGliZXJhbCBhaW1zIGZvciBkb21lc3RpYyBwb2xpY3kgYW5kIHJhdGhlciByZXZpc2lvbmlzdGljIGFpbXMgZm9yIGludGVybmF0aW9uYWwgcG9saXRpY3MuPC9wPgoKPHA+UGxhbmNrIGRpc2FncmVlZCB3aXRoIHRoZSBpbnRyb2R1Y3Rpb24gb2YgdW5pdmVyc2FsIHN1ZmZyYWdlIGFuZCBsYXRlciBleHByZXNzZWQgdGhlIHZpZXcgdGhhdCB0aGUgTmF6aSBkaWN0YXRvcnNoaXAgcmVzdWx0ZWQgZnJvbSAidGhlIGFzY2VudCBvZiB0aGUgcnVsZSBvZiB0aGUgY3Jvd2RzIi5bMThdPC9wPgoKPGgyPlF1YW50dW0gbWVjaGFuaWNzPC9oMj4KCjxwPkF0IHRoZSBlbmQgb2YgdGhlIDE5MjBzIEJvaHIsIEhlaXNlbmJlcmcgYW5kIFBhdWxpIGhhZCB3b3JrZWQgb3V0IHRoZSBDb3BlbmhhZ2VuIGludGVycHJldGF0aW9uIG9mIHF1YW50dW0gbWVjaGFuaWNzLCBidXQgaXQgd2FzIHJlamVjdGVkIGJ5IFBsYW5jaywgYW5kIGJ5IFNjaHLDtmRpbmdlciwgTGF1ZSwgYW5kIEVpbnN0ZWluIGFzIHdlbGwuIFBsYW5jayBleHBlY3RlZCB0aGF0IHdhdmUgbWVjaGFuaWNzIHdvdWxkIHNvb24gcmVuZGVyIHF1YW50dW0gdGhlb3J54oCUaGlzIG93biBjaGlsZOKAlHVubmVjZXNzYXJ5LiBUaGlzIHdhcyBub3QgdG8gYmUgdGhlIGNhc2UsIGhvd2V2ZXIuIEZ1cnRoZXIgd29yayBvbmx5IGNlbWVudGVkIHF1YW50dW0gdGhlb3J5LCBldmVuIGFnYWluc3QgaGlzIGFuZCBFaW5zdGVpbidzIHBoaWxvc29waGljYWwgcmV2dWxzaW9ucy4gUGxhbmNrIGV4cGVyaWVuY2VkIHRoZSB0cnV0aCBvZiBoaXMgb3duIGVhcmxpZXIgb2JzZXJ2YXRpb24gZnJvbSBoaXMgc3RydWdnbGUgd2l0aCB0aGUgb2xkZXIgdmlld3MgaW4gaGlzIHlvdW5nZXIgeWVhcnM6ICJBIG5ldyBzY2llbnRpZmljIHRydXRoIGRvZXMgbm90IHRyaXVtcGggYnkgY29udmluY2luZyBpdHMgb3Bwb25lbnRzIGFuZCBtYWtpbmcgdGhlbSBzZWUgdGhlIGxpZ2h0LCBidXQgcmF0aGVyIGJlY2F1c2UgaXRzIG9wcG9uZW50cyBldmVudHVhbGx5IGRpZSwgYW5kIGEgbmV3IGdlbmVyYXRpb24gZ3Jvd3MgdXAgdGhhdCBpcyBmYW1pbGlhciB3aXRoIGl0LiJbMTldPC9wPgoKPGgyPk5hemkgZGljdGF0b3JzaGlwIGFuZCB0aGUgU2Vjb25kIFdvcmxkIFdhcjwvaDI+Cgo8cD5XaGVuIHRoZSBOYXppcyBzZWl6ZWQgcG93ZXIgaW4gMTkzMywgUGxhbmNrIHdhcyA3NC4gSGUgd2l0bmVzc2VkIG1hbnkgSmV3aXNoIGZyaWVuZHMgYW5kIGNvbGxlYWd1ZXMgZXhwZWxsZWQgZnJvbSB0aGVpciBwb3NpdGlvbnMgYW5kIGh1bWlsaWF0ZWQsIGFuZCBodW5kcmVkcyBvZiBzY2llbnRpc3RzIGVtaWdyYXRlZCBmcm9tIEdlcm1hbnkuIEFnYWluIGhlIHRyaWVkIHRoZSAicGVyc2V2ZXJlIGFuZCBjb250aW51ZSB3b3JraW5nIiBzbG9nYW4gYW5kIGFza2VkIHNjaWVudGlzdHMgd2hvIHdlcmUgY29uc2lkZXJpbmcgZW1pZ3JhdGlvbiB0byByZW1haW4gaW4gR2VybWFueS4gSGUgaG9wZWQgdGhlIGNyaXNpcyB3b3VsZCBhYmF0ZSBzb29uIGFuZCB0aGUgcG9saXRpY2FsIHNpdHVhdGlvbiB3b3VsZCBpbXByb3ZlLjwvcD4KCjxwPk90dG8gSGFobiBhc2tlZCBQbGFuY2sgdG8gZ2F0aGVyIHdlbGwta25vd24gR2VybWFuIHByb2Zlc3NvcnMgaW4gb3JkZXIgdG8gaXNzdWUgYSBwdWJsaWMgcHJvY2xhbWF0aW9uIGFnYWluc3QgdGhlIHRyZWF0bWVudCBvZiBKZXdpc2ggcHJvZmVzc29ycywgYnV0IFBsYW5jayByZXBsaWVkLCAiSWYgeW91IGFyZSBhYmxlIHRvIGdhdGhlciB0b2RheSAzMCBzdWNoIGdlbnRsZW1lbiwgdGhlbiB0b21vcnJvdyAxNTAgb3RoZXJzIHdpbGwgY29tZSBhbmQgc3BlYWsgYWdhaW5zdCBpdCwgYmVjYXVzZSB0aGV5IGFyZSBlYWdlciB0byB0YWtlIG92ZXIgdGhlIHBvc2l0aW9ucyBvZiB0aGUgb3RoZXJzLiJbMjBdIFVuZGVyIFBsYW5jaydzIGxlYWRlcnNoaXAsIHRoZSBLYWlzZXIgV2lsaGVsbSBTb2NpZXR5IChLV0cpIGF2b2lkZWQgb3BlbiBjb25mbGljdCB3aXRoIHRoZSBOYXppIHJlZ2ltZSwgZXhjZXB0IGNvbmNlcm5pbmcgRnJpdHogSGFiZXIuIFBsYW5jayB0cmllZCB0byBkaXNjdXNzIHRoZSBpc3N1ZSB3aXRoIEFkb2xmIEhpdGxlciBidXQgd2FzIHVuc3VjY2Vzc2Z1bC4gSW4gdGhlIGZvbGxvd2luZyB5ZWFyLCAxOTM0LCBIYWJlciBkaWVkIGluIGV4aWxlLjwvcD4KCjxwPk9uZSB5ZWFyIGxhdGVyLCBQbGFuY2ssIGhhdmluZyBiZWVuIHRoZSBwcmVzaWRlbnQgb2YgdGhlIEtXRyBzaW5jZSAxOTMwLCBvcmdhbml6ZWQgaW4gYSBzb21ld2hhdCBwcm92b2NhdGl2ZSBzdHlsZSBhbiBvZmZpY2lhbCBjb21tZW1vcmF0aXZlIG1lZXRpbmcgZm9yIEhhYmVyLiBIZSBhbHNvIHN1Y2NlZWRlZCBpbiBzZWNyZXRseSBlbmFibGluZyBhIG51bWJlciBvZiBKZXdpc2ggc2NpZW50aXN0cyB0byBjb250aW51ZSB3b3JraW5nIGluIGluc3RpdHV0ZXMgb2YgdGhlIEtXRyBmb3Igc2V2ZXJhbCB5ZWFycy4gSW4gMTkzNiwgaGlzIHRlcm0gYXMgcHJlc2lkZW50IG9mIHRoZSBLV0cgZW5kZWQsIGFuZCB0aGUgTmF6aSBnb3Zlcm5tZW50IHByZXNzdXJlZCBoaW0gdG8gcmVmcmFpbiBmcm9tIHNlZWtpbmcgYW5vdGhlciB0ZXJtLjwvcD4KCjxwPkFzIHRoZSBwb2xpdGljYWwgY2xpbWF0ZSBpbiBHZXJtYW55IGdyYWR1YWxseSBiZWNhbWUgbW9yZSBob3N0aWxlLCBKb2hhbm5lcyBTdGFyaywgcHJvbWluZW50IGV4cG9uZW50IG9mIERldXRzY2hlIFBoeXNpayAoIkdlcm1hbiBQaHlzaWNzIiwgYWxzbyBjYWxsZWQgIkFyeWFuIFBoeXNpY3MiKSBhdHRhY2tlZCBQbGFuY2ssIFNvbW1lcmZlbGQgYW5kIEhlaXNlbmJlcmcgZm9yIGNvbnRpbnVpbmcgdG8gdGVhY2ggdGhlIHRoZW9yaWVzIG9mIEVpbnN0ZWluLCBjYWxsaW5nIHRoZW0gIndoaXRlIEpld3MiLiBUaGUgIkhhdXB0YW10IFdpc3NlbnNjaGFmdCIgKE5hemkgZ292ZXJubWVudCBvZmZpY2UgZm9yIHNjaWVuY2UpIHN0YXJ0ZWQgYW4gaW52ZXN0aWdhdGlvbiBvZiBQbGFuY2sncyBhbmNlc3RyeSwgY2xhaW1pbmcgdGhhdCBoZSB3YXMgIjEvMTYgSmV3aXNoIjsgaG93ZXZlciwgUGxhbmNrIGhpbXNlbGYgZGVuaWVkIHRoaXMuWzIxXTwvcD4KCjxwPkluIDE5MzgsIFBsYW5jayBjZWxlYnJhdGVkIGhpcyA4MHRoIGJpcnRoZGF5LiBUaGUgRFBHIGhlbGQgYSBjZWxlYnJhdGlvbiwgZHVyaW5nIHdoaWNoIHRoZSBNYXgtUGxhbmNrIG1lZGFsIChmb3VuZGVkIGFzIHRoZSBoaWdoZXN0IG1lZGFsIGJ5IHRoZSBEUEcgaW4gMTkyOCkgd2FzIGF3YXJkZWQgdG8gRnJlbmNoIHBoeXNpY2lzdCBMb3VpcyBkZSBCcm9nbGllLiBBdCB0aGUgZW5kIG9mIDE5MzgsIHRoZSBQcnVzc2lhbiBBY2FkZW15IGxvc3QgaXRzIHJlbWFpbmluZyBpbmRlcGVuZGVuY2UgYW5kIHdhcyB0YWtlbiBvdmVyIGJ5IE5hemlzIChHbGVpY2hzY2hhbHR1bmcpLiBQbGFuY2sgcHJvdGVzdGVkIGJ5IHJlc2lnbmluZyBoaXMgcHJlc2lkZW5jeS4gSGUgY29udGludWVkIHRvIHRyYXZlbCBmcmVxdWVudGx5LCBnaXZpbmcgbnVtZXJvdXMgcHVibGljIHRhbGtzLCBzdWNoIGFzIGhpcyB0YWxrIG9uIFJlbGlnaW9uIGFuZCBTY2llbmNlLCBhbmQgZml2ZSB5ZWFycyBsYXRlciBoZSB3YXMgc3VmZmljaWVudGx5IGZpdCB0byBjbGltYiAzLDAwMC1tZXRlciBwZWFrcyBpbiB0aGUgQWxwcy48L3A+Cgo8cD5EdXJpbmcgdGhlIFNlY29uZCBXb3JsZCBXYXIgdGhlIGluY3JlYXNpbmcgbnVtYmVyIG9mIEFsbGllZCBib21iaW5nIG1pc3Npb25zIGFnYWluc3QgQmVybGluIGZvcmNlZCBQbGFuY2sgYW5kIGhpcyB3aWZlIHRvIHRlbXBvcmFyaWx5IGxlYXZlIHRoZSBjaXR5IGFuZCBsaXZlIGluIHRoZSBjb3VudHJ5c2lkZS4gSW4gMTk0MiBoZSB3cm90ZTogIkluIG1lIGFuIGFyZGVudCBkZXNpcmUgaGFzIGdyb3duIHRvIHBlcnNldmVyZSB0aGlzIGNyaXNpcyBhbmQgbGl2ZSBsb25nIGVub3VnaCB0byBiZSBhYmxlIHRvIHdpdG5lc3MgdGhlIHR1cm5pbmcgcG9pbnQsIHRoZSBiZWdpbm5pbmcgb2YgYSBuZXcgcmlzZS4iIEluIEZlYnJ1YXJ5IDE5NDQgaGlzIGhvbWUgaW4gQmVybGluIHdhcyBjb21wbGV0ZWx5IGRlc3Ryb3llZCBieSBhbiBhaXIgcmFpZCwgYW5uaWhpbGF0aW5nIGFsbCBoaXMgc2NpZW50aWZpYyByZWNvcmRzIGFuZCBjb3JyZXNwb25kZW5jZS4gSGlzIHJ1cmFsIHJldHJlYXQgd2FzIHRocmVhdGVuZWQgYnkgdGhlIHJhcGlkIGFkdmFuY2Ugb2YgdGhlIEFsbGllZCBhcm1pZXMgZnJvbSBib3RoIHNpZGVzLiBBZnRlciB0aGUgZW5kIG9mIHRoZSB3YXIgUGxhbmNrLCBoaXMgc2Vjb25kIHdpZmUsIGFuZCBoaXMgc29uIGJ5IGhlciB3ZXJlIGJyb3VnaHQgdG8gYSByZWxhdGl2ZSBpbiBHw7Z0dGluZ2VuLCB3aGVyZSBQbGFuY2sgZGllZCBvbiBPY3RvYmVyIDQsIDE5NDcuPC9wPgoKPHA+UGxhbmNrIGVuZHVyZWQgbWFueSBwZXJzb25hbCB0cmFnZWRpZXMgYWZ0ZXIgdGhlIGFnZSBvZiBmaWZ0eS4gSW4gMTkwOSwgaGlzIGZpcnN0IHdpZmUgZGllZCBhZnRlciAyMiB5ZWFycyBvZiBtYXJyaWFnZSwgbGVhdmluZyBoaW0gd2l0aCB0d28gc29ucyBhbmQgdHdpbiBkYXVnaHRlcnMuIFBsYW5jaydzIG9sZGVyIHNvbiwgS2FybCwgd2FzIGtpbGxlZCBpbiBhY3Rpb24gaW4gMTkxNiBkdXJpbmcgdGhlIEZpcnN0IFdvcmxkIFdhci4gSGlzIGRhdWdodGVyIE1hcmdhcmV0ZSBkaWVkIGluIGNoaWxkYmlydGggaW4gMTkxNyBhbmQgYW5vdGhlciBkYXVnaHRlciwgRW1tYSwgbWFycmllZCBoZXIgbGF0ZSBzaXN0ZXIncyBodXNiYW5kIGFuZCB0aGVuIGFsc28gZGllZCBpbiBjaGlsZGJpcnRoIGluIDE5MTkuIEluIDE5NDUsIFBsYW5jaydzIHlvdW5nZXIgc29uLCBFcndpbiwgd2FzIGFycmVzdGVkIGR1ZSB0byB0aGUgYXR0ZW1wdGVkIGFzc2Fzc2luYXRpb24gb2YgSGl0bGVyIGluIHRoZSBKdWx5IDIwIHBsb3QuIEVyd2luIGNvbnNlcXVlbnRseSBkaWVkIGF0IHRoZSBoYW5kcyBvZiB0aGUgR2VzdGFwbzsgaGlzIGRlYXRoIGRlc3Ryb3llZCBtdWNoIG9mIE1heCBQbGFuY2sncyB3aWxsIHRvIGxpdmUuWzIyXTwvcD4KCjxoMT5SZWxpZ2lvdXMgdmlld3M8L2gxPgoKPHA+UGxhbmNrIHdhcyBhIG1lbWJlciBvZiB0aGUgTHV0aGVyYW4gQ2h1cmNoIGluIEdlcm1hbnkuWzIzXSBIb3dldmVyLCBQbGFuY2sgd2FzIHZlcnkgdG9sZXJhbnQgdG93YXJkcyBhbHRlcm5hdGl2ZSB2aWV3cyBhbmQgcmVsaWdpb25zLlsyNF0gSW4gYSBsZWN0dXJlIGluIDE5MzcgZW50aXRsZWQgIlJlbGlnaW9uIHVuZCBOYXR1cndpc3NlbnNjaGFmdCIgaGUgc3VnZ2VzdGVkIHRoZSBpbXBvcnRhbmNlIG9mIHRoZXNlIHN5bWJvbHMgYW5kIHJpdHVhbHMgcmVsYXRlZCBkaXJlY3RseSB3aXRoIGEgYmVsaWV2ZXIncyBhYmlsaXR5IHRvIHdvcnNoaXAgR29kLCBidXQgdGhhdCBvbmUgbXVzdCBiZSBtaW5kZnVsIHRoYXQgdGhlIHN5bWJvbHMgcHJvdmlkZSBhbiBpbXBlcmZlY3QgaWxsdXN0cmF0aW9uIG9mIGRpdmluaXR5LiBIZSBjcml0aWNpemVkIGF0aGVpc20gZm9yIGJlaW5nIGZvY3VzZWQgb24gdGhlIGRlcmlzaW9uIG9mIHN1Y2ggc3ltYm9scywgd2hpbGUgYXQgdGhlIHNhbWUgdGltZSB3YXJuZWQgb2YgdGhlIG92ZXItZXN0aW1hdGlvbiBvZiB0aGUgaW1wb3J0YW5jZSBvZiBzdWNoIHN5bWJvbHMgYnkgYmVsaWV2ZXJzLlsyNV08L3A+Cgo8cD5NYXggUGxhbmNrIHNhaWQgaW4gMTk0NCwgIkFzIGEgbWFuIHdobyBoYXMgZGV2b3RlZCBoaXMgd2hvbGUgbGlmZSB0byB0aGUgbW9zdCBjbGVhciBoZWFkZWQgc2NpZW5jZSwgdG8gdGhlIHN0dWR5IG9mIG1hdHRlciwgSSBjYW4gdGVsbCB5b3UgYXMgYSByZXN1bHQgb2YgbXkgcmVzZWFyY2ggYWJvdXQgYXRvbXMgdGhpcyBtdWNoOiBUaGVyZSBpcyBubyBtYXR0ZXIgYXMgc3VjaC4gQWxsIG1hdHRlciBvcmlnaW5hdGVzIGFuZCBleGlzdHMgb25seSBieSB2aXJ0dWUgb2YgYSBmb3JjZSB3aGljaCBicmluZ3MgdGhlIHBhcnRpY2xlIG9mIGFuIGF0b20gdG8gdmlicmF0aW9uIGFuZCBob2xkcyB0aGlzIG1vc3QgbWludXRlIHNvbGFyIHN5c3RlbSBvZiB0aGUgYXRvbSB0b2dldGhlci4gV2UgbXVzdCBhc3N1bWUgYmVoaW5kIHRoaXMgZm9yY2UgdGhlIGV4aXN0ZW5jZSBvZiBhIGNvbnNjaW91cyBhbmQgaW50ZWxsaWdlbnQgbWluZC4gVGhpcyBtaW5kIGlzIHRoZSBtYXRyaXggb2YgYWxsIG1hdHRlci4iWzI2XTwvcD4KCjxwPlBsYW5jayByZWdhcmRlZCB0aGUgc2NpZW50aXN0IGFzIGEgbWFuIG9mIGltYWdpbmF0aW9uIGFuZCBmYWl0aCwgImZhaXRoIiBpbnRlcnByZXRlZCBhcyBiZWluZyBzaW1pbGFyIHRvICJoYXZpbmcgYSB3b3JraW5nIGh5cG90aGVzaXMiLiBGb3IgZXhhbXBsZSB0aGUgY2F1c2FsaXR5IHByaW5jaXBsZSBpc24ndCB0cnVlIG9yIGZhbHNlLCBpdCBpcyBhbiBhY3Qgb2YgZmFpdGguIFRoZXJlYnkgUGxhbmNrIG1heSBoYXZlIGluZGljYXRlZCBhIHZpZXcgdGhhdCBwb2ludHMgdG93YXJkIEltcmUgTGFrYXRvcycgcmVzZWFyY2ggcHJvZ3JhbXMgcHJvY2VzcyBkZXNjcmlwdGlvbnMsIHdoZXJlIGZhbHNpZmljYXRpb24gaXMgbW9zdGx5IHRvbGVyYWJsZSwgaW4gZmFpdGggb2YgaXRzIGZ1dHVyZSByZW1vdmFsLlsyNF0gSGUgYWxzbyBzYWlkOiAiQm90aCBSZWxpZ2lvbiBhbmQgc2NpZW5jZSByZXF1aXJlIGEgYmVsaWVmIGluIEdvZC4gRm9yIGJlbGlldmVycywgR29kIGlzIGluIHRoZSBiZWdpbm5pbmcsIGFuZCBmb3IgcGh5c2ljaXN0cyBIZSBpcyBhdCB0aGUgZW5kIG9mIGFsbCBjb25zaWRlcmF0aW9uc+KApiBUbyB0aGUgZm9ybWVyIEhlIGlzIHRoZSBmb3VuZGF0aW9uLCB0byB0aGUgbGF0dGVyLCB0aGUgY3Jvd24gb2YgdGhlIGVkaWZpY2Ugb2YgZXZlcnkgZ2VuZXJhbGl6ZWQgd29ybGQgdmlldyIuWzI3XTwvcD4KCjxwPk9uIHRoZSBvdGhlciBoYW5kLCBQbGFuY2sgd3JvdGUsICIuLi4ndG8gYmVsaWV2ZScgbWVhbnMgJ3RvIHJlY29nbml6ZSBhcyBhIHRydXRoLCcgYW5kIHRoZSBrbm93bGVkZ2Ugb2YgbmF0dXJlLCBjb250aW51YWxseSBhZHZhbmNpbmcgb24gaW5jb250ZXN0YWJseSBzYWZlIHRyYWNrcywgaGFzIG1hZGUgaXQgdXR0ZXJseSBpbXBvc3NpYmxlIGZvciBhIHBlcnNvbiBwb3NzZXNzaW5nIHNvbWUgdHJhaW5pbmcgaW4gbmF0dXJhbCBzY2llbmNlIHRvIHJlY29nbml6ZSBhcyBmb3VuZGVkIG9uIHRydXRoIHRoZSBtYW55IHJlcG9ydHMgb2YgZXh0cmFvcmRpbmFyeSBvY2N1cnJlbmNlcyBjb250cmFkaWN0aW5nIHRoZSBsYXdzIG9mIG5hdHVyZSwgb2YgbWlyYWNsZXMgd2hpY2ggYXJlIHN0aWxsIGNvbW1vbmx5IHJlZ2FyZGVkIGFzIGVzc2VudGlhbCBzdXBwb3J0cyBhbmQgY29uZmlybWF0aW9ucyBvZiByZWxpZ2lvdXMgZG9jdHJpbmVzLCBhbmQgd2hpY2ggZm9ybWVybHkgdXNlZCB0byBiZSBhY2NlcHRlZCBhcyBmYWN0cyBwdXJlIGFuZCBzaW1wbGUsIHdpdGhvdXQgZG91YnQgb3IgY3JpdGljaXNtLiBUaGUgYmVsaWVmIGluIG1pcmFjbGVzIG11c3QgcmV0cmVhdCBzdGVwIGJ5IHN0ZXAgYmVmb3JlIHJlbGVudGxlc3NseSBhbmQgcmVsaWFibHkgcHJvZ3Jlc3Npbmcgc2NpZW5jZSBhbmQgd2UgY2Fubm90IGRvdWJ0IHRoYXQgc29vbmVyIG9yIGxhdGVyIGl0IG11c3QgdmFuaXNoIGNvbXBsZXRlbHkuIlsyOF08L3A+Cgo8cD5MYXRlciBpbiBsaWZlLCBQbGFuY2sncyB2aWV3cyBvbiBHb2Qgd2VyZSB0aGF0IG9mIGEgZGVpc3QuWzI5XSBGb3IgZXhhbXBsZSwgc2l4IG1vbnRocyBiZWZvcmUgaGlzIGRlYXRoIGEgcnVtb3VyIHN0YXJ0ZWQgdGhhdCBQbGFuY2sgaGFkIGNvbnZlcnRlZCB0byBDYXRob2xpY2lzbSwgYnV0IHdoZW4gcXVlc3Rpb25lZCB3aGF0IGhhZCBicm91Z2h0IGhpbSB0byBtYWtlIHRoaXMgc3RlcCwgaGUgZGVjbGFyZWQgdGhhdCwgYWx0aG91Z2ggaGUgaGFkIGFsd2F5cyBiZWVuIGRlZXBseSByZWxpZ2lvdXMsIGhlIGRpZCBub3QgYmVsaWV2ZSAiaW4gYSBwZXJzb25hbCBHb2QsIGxldCBhbG9uZSBhIENocmlzdGlhbiBHb2QuIlszMF08L3A+Cgo8aDE+UHVibGljYXRpb25zPC9oMT4KCjx1bD4KICAgIDxsaT5QbGFuY2ssIE0uICgxOTAwYSkuICLDnGJlciBlaW5lIFZlcmJlc3NlcnVuZyBkZXIgV2llbnNjaGVuIFNwZWt0cmFsZ2xlaWNodW5nIi4gVmVyaGFuZGx1bmdlbiBkZXIgRGV1dHNjaGVuIFBoeXNpa2FsaXNjaGVuIEdlc2VsbHNjaGFmdCAyOiAyMDLigJMyMDQuIFRyYW5zbGF0ZWQgaW4gdGVyIEhhYXIsIEQuICgxOTY3KS4gIk9uIGFuIEltcHJvdmVtZW50IG9mIFdpZW4ncyBFcXVhdGlvbiBmb3IgdGhlIFNwZWN0cnVtIi4gVGhlIE9sZCBRdWFudHVtIFRoZW9yeS4gUGVyZ2Ftb24gUHJlc3MuIHBwLiA3OeKAkzgxLiBMQ0NOIDY2MDI5NjI4LjwvbGk+CiAgICA8bGk+UGxhbmNrLCBNLiAoMTkwMGIpLiAiWnVyIFRoZW9yaWUgZGVzIEdlc2V0emVzIGRlciBFbmVyZ2lldmVydGVpbHVuZyBpbSBOb3JtYWxzcGVrdHJ1bSIuIFZlcmhhbmRsdW5nZW4gZGVyIERldXRzY2hlbiBQaHlzaWthbGlzY2hlbiBHZXNlbGxzY2hhZnQgMjogMjM3LiBUcmFuc2xhdGVkIGluIHRlciBIYWFyLCBELiAoMTk2NykuICJUaGUgT2xkIFF1YW50dW0gVGhlb3J5Ii4gUGVyZ2Ftb24gUHJlc3MuIHAuIDgyLiBMQ0NOIDY2MDI5NjI4LiB8Y2hhcHRlcj0gaWdub3JlZCAoaGVscCk8L2xpPgogICAgPGxpPlBsYW5jaywgTS4gKDE5MDBjKS4gIkVudHJvcGllIHVuZCBUZW1wZXJhdHVyIHN0cmFobGVuZGVyIFfDpHJtZSIgW0VudHJvcHkgYW5kIFRlbXBlcmF0dXJlIG9mIFJhZGlhbnQgSGVhdF0uIEFubmFsZW4gZGVyIFBoeXNpayAzMDYgKDQpOiA3MTnigJM3MzcuIEJpYmNvZGU6MTkwMEFuUC4uLjMwNi4uNzE5UC4gZG9pOjEwLjEwMDIvYW5kcC4xOTAwMzA2MDQxMC48L2xpPgogICAgPGxpPlBsYW5jaywgTS4gKDE5MDBkKS4gIsOcYmVyIGlycmV2ZXJzaWJsZSBTdHJhaGx1bmdzdm9yZ8OkbmdlIiBbT24gSXJyZXZlcnNpYmxlIFJhZGlhdGlvbiBQcm9jZXNzZXNdLiBBbm5hbGVuIGRlciBQaHlzaWsgMzA2ICgxKTogNjnigJMxMjIuIEJpYmNvZGU6MTkwMEFuUC4uLjMwNi4uLjY5UC4gZG9pOjEwLjEwMDIvYW5kcC4xOTAwMzA2MDEwNS48L2xpPgogICAgPGxpPlBsYW5jaywgTS4gKDE5MDEpLiAiw5xiZXIgZGFzIEdlc2V0eiBkZXIgRW5lcmdpZXZlcnRlaWx1bmcgaW0gTm9ybWFsc3Bla3RydW0iLiBBbm5hbGVuIGRlciBQaHlzaWsgMzA5ICgzKTogNTUz4oCTNTYzLiBCaWJjb2RlOjE5MDFBblAuLi4zMDkuLjU1M1AuIGRvaToxMC4xMDAyL2FuZHAuMTkwMTMwOTAzMTAuIFRyYW5zbGF0ZWQgaW4gQW5kbywgSy4gIk9uIHRoZSBMYXcgb2YgRGlzdHJpYnV0aW9uIG9mIEVuZXJneSBpbiB0aGUgTm9ybWFsIFNwZWN0cnVtIi4gUmV0cmlldmVkIDIwMTEtMTAtMTMuPC9saT4KICAgIDxsaT5QbGFuY2ssIE0uICgxOTAzKS4gVHJlYXRpc2Ugb24gVGhlcm1vZHluYW1pY3MuIE9nZywgQS4gKHRyYW5zbC4pLiBMb25kb246IExvbmdtYW5zLCBHcmVlbiAmIENvLiBPTCA3MjQ2NjkxTS48L2xpPgogICAgPGxpPlBsYW5jaywgTS4gKDE5MDYpLiBWb3JsZXN1bmdlbiDDvGJlciBkaWUgVGhlb3JpZSBkZXIgV8Okcm1lc3RyYWhsdW5nLiBMZWlwemlnOiBKLkEuIEJhcnRoLiBMQ0NOIDA3MDA0NTI3LjwvbGk+CiAgICA8bGk+UGxhbmNrLCBNLiAoMTkxNCkuIFRoZSBUaGVvcnkgb2YgSGVhdCBSYWRpYXRpb24uIE1hc2l1cywgTS4gKHRyYW5zbC4pICgybmQgZWQuKS4gUC4gQmxha2lzdG9uJ3MgU29uICYgQ28uIE9MIDcxNTQ2NjFNLjwvbGk+CiAgICA8bGk+UGxhbmNrLCBNLiAoMTkxNSkuIEVpZ2h0IExlY3R1cmVzIG9uIFRoZW9yZXRpY2FsIFBoeXNpY3MuIFdpbGxzLCBBLiBQLiAodHJhbnNsLikuIERvdmVyIFB1YmxpY2F0aW9ucy4gSVNCTiAwLTQ4Ni02OTczMC00LjwvbGk+CiAgICA8bGk+UGxhbmNrLCBNLiAoMTk0MykuICJadXIgR2VzY2hpY2h0ZSBkZXIgQXVmZmluZHVuZyBkZXMgcGh5c2lrYWxpc2NoZW4gV2lya3VuZ3NxdWFudHVtcyIuIE5hdHVyd2lzc2Vuc2NoYWZ0ZW4gMzEgKDE04oCTMTUpOiAxNTPigJMxNTkuIEJpYmNvZGU6MTk0M05XLi4uLi4zMS4uMTUzUC4gZG9pOjEwLjEwMDcvQkYwMTQ3NTczOC48L2xpPgo8L3VsPgo=",
      "origin_url": null,
      "content_type": "text/html"
    },
    "model": "documents.file",
    "pk": 3
  },
  {
    "fields": {
      "updated": "2015-05-14T09:02:01.033Z",
      "name": "The Watergate scandal - Wikipedia.html",
      "created": "2015-05-14T09:02:01.033Z",
      "raw_data": "PHA+VGhlIFdhdGVyZ2F0ZSBzY2FuZGFsIHdhcyBhIG1ham9yIHBvbGl0aWNhbCBzY2FuZGFsIHRoYXQgb2NjdXJyZWQgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgaW4gdGhlIDE5NzBzIGFzIGEgcmVzdWx0IG9mIHRoZSBKdW5lIDE3LCAxOTcyLCBicmVhay1pbiBhdCB0aGUgRGVtb2NyYXRpYyBOYXRpb25hbCBDb21taXR0ZWUgKEROQykgaGVhZHF1YXJ0ZXJzIGF0IHRoZSBXYXRlcmdhdGUgb2ZmaWNlIGNvbXBsZXggaW4gV2FzaGluZ3RvbiwgRC5DLiwgYW5kIHRoZSBOaXhvbiBhZG1pbmlzdHJhdGlvbidzIGF0dGVtcHRlZCBjb3Zlci11cCBvZiBpdHMgaW52b2x2ZW1lbnQuIFdoZW4gdGhlIGNvbnNwaXJhY3kgd2FzIGRpc2NvdmVyZWQgYW5kIGludmVzdGlnYXRlZCBieSB0aGUgVS5TLiBDb25ncmVzcywgdGhlIE5peG9uIGFkbWluaXN0cmF0aW9uJ3MgcmVzaXN0YW5jZSB0byBpdHMgcHJvYmVzIGxlZCB0byBhIGNvbnN0aXR1dGlvbmFsIGNyaXNpcy5bMV0gVGhlIHRlcm0gV2F0ZXJnYXRlIGhhcyBjb21lIHRvIGVuY29tcGFzcyBhbiBhcnJheSBvZiBjbGFuZGVzdGluZSBhbmQgb2Z0ZW4gaWxsZWdhbCBhY3Rpdml0aWVzIHVuZGVydGFrZW4gYnkgbWVtYmVycyBvZiB0aGUgTml4b24gYWRtaW5pc3RyYXRpb24uIFRob3NlIGFjdGl2aXRpZXMgaW5jbHVkZWQgc3VjaCAiZGlydHkgdHJpY2tzIiBhcyBidWdnaW5nIHRoZSBvZmZpY2VzIG9mIHBvbGl0aWNhbCBvcHBvbmVudHMgYW5kIHBlb3BsZSBvZiB3aG9tIE5peG9uIG9yIGhpcyBvZmZpY2lhbHMgd2VyZSBzdXNwaWNpb3VzLiBOaXhvbiBhbmQgaGlzIGNsb3NlIGFpZGVzIG9yZGVyZWQgaGFyYXNzbWVudCBvZiBhY3RpdmlzdCBncm91cHMgYW5kIHBvbGl0aWNhbCBmaWd1cmVzLCB1c2luZyB0aGUgRmVkZXJhbCBCdXJlYXUgb2YgSW52ZXN0aWdhdGlvbiAoRkJJKSwgdGhlIENlbnRyYWwgSW50ZWxsaWdlbmNlIEFnZW5jeSAoQ0lBKSwgYW5kIHRoZSBJbnRlcm5hbCBSZXZlbnVlIFNlcnZpY2UgKElSUykuIFRoZSBzY2FuZGFsIGxlZCB0byB0aGUgZGlzY292ZXJ5IG9mIG11bHRpcGxlIGFidXNlcyBvZiBwb3dlciBieSB0aGUgTml4b24gYWRtaW5pc3RyYXRpb24sIGFydGljbGVzIG9mIGltcGVhY2htZW50LFsyXSBhbmQgdGhlIHJlc2lnbmF0aW9uIG9mIFJpY2hhcmQgTml4b24sIHRoZSBQcmVzaWRlbnQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMsIG9uIEF1Z3VzdCA5LCAxOTc04oCUdGhlIG9ubHkgcmVzaWduYXRpb24gb2YgYSBVLlMuIFByZXNpZGVudCB0byBkYXRlLiBUaGUgc2NhbmRhbCBhbHNvIHJlc3VsdGVkIGluIHRoZSBpbmRpY3RtZW50IG9mIDY5IHBlb3BsZSwgd2l0aCB0cmlhbHMgb3IgcGxlYXMgcmVzdWx0aW5nIGluIDQ4IGJlaW5nIGZvdW5kIGd1aWx0eSBhbmQgaW5jYXJjZXJhdGVkLCBtYW55IG9mIHdob20gd2VyZSBOaXhvbidzIHRvcCBhZG1pbmlzdHJhdGlvbiBvZmZpY2lhbHMuWzNdPC9wPgoKPHA+VGhlIGFmZmFpciBiZWdhbiB3aXRoIHRoZSBhcnJlc3Qgb2YgZml2ZSBtZW4gZm9yIGJyZWFraW5nIGFuZCBlbnRlcmluZyBpbnRvIHRoZSBETkMgaGVhZHF1YXJ0ZXJzIGF0IHRoZSBXYXRlcmdhdGUgY29tcGxleCBvbiBKdW5lIDE3LCAxOTcyLiBUaGUgRkJJIGNvbm5lY3RlZCBjYXNoIGZvdW5kIG9uIHRoZSBidXJnbGFycyB0byBhIHNsdXNoIGZ1bmQgdXNlZCBieSB0aGUgQ29tbWl0dGVlIGZvciB0aGUgUmUtRWxlY3Rpb24gb2YgdGhlIFByZXNpZGVudCAoQ1JQKSwgdGhlIG9mZmljaWFsIG9yZ2FuaXphdGlvbiBvZiBOaXhvbidzIGNhbXBhaWduLls0XVs1XSBJbiBKdWx5IDE5NzMsIGFzIGV2aWRlbmNlIG1vdW50ZWQgYWdhaW5zdCB0aGUgUHJlc2lkZW50J3Mgc3RhZmYsIGluY2x1ZGluZyB0ZXN0aW1vbnkgcHJvdmlkZWQgYnkgZm9ybWVyIHN0YWZmIG1lbWJlcnMgaW4gYW4gaW52ZXN0aWdhdGlvbiBjb25kdWN0ZWQgYnkgdGhlIFNlbmF0ZSBXYXRlcmdhdGUgQ29tbWl0dGVlLCBpdCB3YXMgcmV2ZWFsZWQgdGhhdCBQcmVzaWRlbnQgTml4b24gaGFkIGEgdGFwZS1yZWNvcmRpbmcgc3lzdGVtIGluIGhpcyBvZmZpY2VzIGFuZCB0aGF0IGhlIGhhZCByZWNvcmRlZCBtYW55IGNvbnZlcnNhdGlvbnMuWzZdWzddIEFmdGVyIGEgcHJvdHJhY3RlZCBzZXJpZXMgb2YgYml0dGVyIGNvdXJ0IGJhdHRsZXMsIHRoZSBVLlMuIFN1cHJlbWUgQ291cnQgdW5hbmltb3VzbHkgcnVsZWQgdGhhdCB0aGUgcHJlc2lkZW50IGhhZCB0byBoYW5kIG92ZXIgdGhlIHRhcGVzIHRvIGdvdmVybm1lbnQgaW52ZXN0aWdhdG9yczsgaGUgZXZlbnR1YWxseSBjb21wbGllZC4gUmVjb3JkaW5ncyBmcm9tIHRoZXNlIHRhcGVzIGltcGxpY2F0ZWQgdGhlIHByZXNpZGVudCwgcmV2ZWFsaW5nIGhlIGhhZCBhdHRlbXB0ZWQgdG8gY292ZXIgdXAgdGhlIHF1ZXN0aW9uYWJsZSBnb2luZ3Mtb24gdGhhdCBoYWQgdGFrZW4gcGxhY2UgYWZ0ZXIgdGhlIGJyZWFrLWluLls1XVs4XSBGYWNpbmcgbmVhci1jZXJ0YWluIGltcGVhY2htZW50IGluIHRoZSBIb3VzZSBvZiBSZXByZXNlbnRhdGl2ZXMgYW5kIGVxdWFsbHkgY2VydGFpbiBjb252aWN0aW9uIGJ5IHRoZSBTZW5hdGUsIE5peG9uIHJlc2lnbmVkIHRoZSBwcmVzaWRlbmN5IG9uIEF1Z3VzdCA5LCAxOTc0Lls5XVsxMF0gT24gU2VwdGVtYmVyIDgsIDE5NzQsIGhpcyBzdWNjZXNzb3IsIEdlcmFsZCBGb3JkLCBwYXJkb25lZCBoaW0uPC9wPgoKPHA+VGhlIG5hbWUgIldhdGVyZ2F0ZSIgYW5kIHRoZSBzdWZmaXggIi1nYXRlIiBoYXZlIHNpbmNlIGJlY29tZSBzeW5vbnltb3VzIHdpdGggcG9saXRpY2FsIHNjYW5kYWxzIGluIHRoZSBVbml0ZWQgU3RhdGVzWzExXSBhbmQgaW4gb3RoZXIgRW5nbGlzaC0gYW5kIG5vbi1FbmdsaXNoLXNwZWFraW5nIG5hdGlvbnMgYXMgd2VsbC5bMTJdPC9wPgoKPGgxPldpcmV0YXBwaW5nIG9mIHRoZSBEZW1vY3JhdGljIFBhcnR5J3MgaGVhZHF1YXJ0ZXJzPC9oMT4KCjxwPkluIEphbnVhcnkgMTk3MiwgRy4gR29yZG9uIExpZGR5LCBnZW5lcmFsIGNvdW5zZWwgdG8gdGhlIENvbW1pdHRlZSBmb3IgdGhlIFJlLUVsZWN0aW9uIG9mIHRoZSBQcmVzaWRlbnQgKENSUCksIHByZXNlbnRlZCBhIGNhbXBhaWduIGludGVsbGlnZW5jZSBwbGFuIHRvIENSUCdzIEFjdGluZyBDaGFpcm1hbiBKZWIgU3R1YXJ0IE1hZ3J1ZGVyLCBBdHRvcm5leSBHZW5lcmFsIEpvaG4gTWl0Y2hlbGwsIGFuZCBQcmVzaWRlbnRpYWwgQ291bnNlbCBKb2huIERlYW4sIHRoYXQgaW52b2x2ZWQgZXh0ZW5zaXZlIGlsbGVnYWwgYWN0aXZpdGllcyBhZ2FpbnN0IHRoZSBEZW1vY3JhdGljIFBhcnR5LiBBY2NvcmRpbmcgdG8gRGVhbiwgdGhpcyBtYXJrZWQgInRoZSBvcGVuaW5nIHNjZW5lIG9mIHRoZSB3b3JzdCBwb2xpdGljYWwgc2NhbmRhbCBvZiB0aGUgdHdlbnRpZXRoIGNlbnR1cnkgYW5kIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGVuZCBvZiB0aGUgTml4b24gcHJlc2lkZW5jeSIuWzEzXTwvcD4KCjxwPk1pdGNoZWxsIHZpZXdlZCB0aGUgcGxhbiBhcyB1bnJlYWxpc3RpYywgYnV0IHR3byBtb250aHMgbGF0ZXIgaXMgYWxsZWdlZCB0byBoYXZlIGFwcHJvdmVkIGEgcmVkdWNlZCB2ZXJzaW9uIG9mIHRoZSBwbGFuIHdoaWNoIGludm9sdmVkIGJ1cmdsaW5nIHRoZSBEZW1vY3JhdGljIE5hdGlvbmFsIENvbW1pdHRlZSdzIChETkMpIGhlYWRxdWFydGVycyBhdCB0aGUgV2F0ZXJnYXRlIENvbXBsZXggaW4gV2FzaGluZ3RvbiwgRC5DLiwgb3N0ZW5zaWJseSB0byBwaG90b2dyYXBoIGRvY3VtZW50cyBhbmQgaW5zdGFsbCBsaXN0ZW5pbmcgZGV2aWNlcy4gTGlkZHkgd2FzIG5vbWluYWxseSBpbiBjaGFyZ2Ugb2YgdGhlIG9wZXJhdGlvbiwgYnV0IGhhcyBzaW5jZSBpbnNpc3RlZCB0aGF0IGhlIHdhcyBkdXBlZCBieSBEZWFuIGFuZCBhdCBsZWFzdCB0d28gb2YgaGlzIHN1Ym9yZGluYXRlcy4gVGhlc2UgaW5jbHVkZWQgZm9ybWVyIENJQSBvZmZpY2VycyBFLiBIb3dhcmQgSHVudCBhbmQgSmFtZXMgTWNDb3JkLCB0aGVuLUNSUCBTZWN1cml0eSBDb29yZGluYXRvciAoSm9obiBNaXRjaGVsbCBoYWQgYnkgdGhlbiByZXNpZ25lZCBhcyBBdHRvcm5leSBHZW5lcmFsIHRvIGJlY29tZSBjaGFpcm1hbiBvZiB0aGUgQ1JQKS5bMTRdPC9wPgoKPHA+VHdvIHBob25lcyBpbnNpZGUgdGhlIG9mZmljZXMgb2YgdGhlIEROQyBoZWFkcXVhcnRlcnMgd2VyZSB3aXJldGFwcGVkLiBPbmUgb2YgdGhvc2UgcGhvbmVzIHdhcyB0aGUgcGhvbmUgb2YgUm9iZXJ0IFNwZW5jZXIgT2xpdmVyIHdobyBhdCB0aGUgdGltZSB3YXMgd29ya2luZyBhcyB0aGUgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIHRoZSBBc3NvY2lhdGlvbiBvZiBTdGF0ZSBEZW1vY3JhdGljIENoYWlybWVuIGFuZCB0aGUgb3RoZXIgd2FzIHRoZSBwaG9uZSBvZiBETkMgc2VjcmV0YXJ5IExhcnJ5IE8nQnJpZW4uWzE1XTwvcD4KCjxwPkFmdGVyIHR3byBhdHRlbXB0cyB0byBicmVhayBpbnRvIHRoZSBXYXRlcmdhdGUgQ29tcGxleCBmYWlsZWQgdG8geWllbGQgaW5mb3JtYXRpb24gb2YgdmFsdWUsIHRoZSBvcmRlciBmb3IgeWV0IGFub3RoZXIgYnJlYWstaW4gd2FzIGdpdmVuIHRvIExpZGR5IGJ5IEplYiBNYWdydWRlciwgZWl0aGVyIGFjdGluZyBvbiBoaXMgb3duIG9yIG9uIG9yZGVycyBmcm9tIERlYW4uPC9wPgoKPHA+U2hvcnRseSBhZnRlciBtaWRuaWdodCBvbiBKdW5lIDE3LCAxOTcyLCBGcmFuayBXaWxscywgYSBzZWN1cml0eSBndWFyZCBhdCB0aGUgV2F0ZXJnYXRlIENvbXBsZXgsIG5vdGljZWQgdGFwZSBjb3ZlcmluZyB0aGUgbGF0Y2hlcyBvbiBzb21lIG9mIHRoZSBkb29ycyBpbiB0aGUgY29tcGxleCBsZWFkaW5nIGZyb20gdGhlIHVuZGVyZ3JvdW5kIHBhcmtpbmcgZ2FyYWdlIHRvIHNldmVyYWwgb2ZmaWNlcyAoYWxsb3dpbmcgdGhlIGRvb3JzIHRvIGNsb3NlIGJ1dCByZW1haW4gdW5sb2NrZWQpLiBIZSByZW1vdmVkIHRoZSB0YXBlLCBhbmQgdGhvdWdodCBub3RoaW5nIG9mIGl0LiBIZSByZXR1cm5lZCBhbiBob3VyIGxhdGVyLCBhbmQgaGF2aW5nIGRpc2NvdmVyZWQgdGhhdCBzb21lb25lIGhhZCByZXRhcGVkIHRoZSBsb2NrcywgV2lsbHMgY2FsbGVkIHRoZSBwb2xpY2UuIEZpdmUgbWVuIHdlcmUgZGlzY292ZXJlZCBhbmQgYXJyZXN0ZWQgaW5zaWRlIHRoZSBETkMgb2ZmaWNlLlsxNF0gVGhleSB3ZXJlIFZpcmdpbGlvIEdvbnrDoWxleiwgQmVybmFyZCBCYXJrZXIsIEphbWVzIE1jQ29yZCwgRXVnZW5pbyBNYXJ0w61uZXosIGFuZCBGcmFuayBTdHVyZ2lzLCB3aG8gd2VyZSBjaGFyZ2VkIHdpdGggYXR0ZW1wdGVkIGJ1cmdsYXJ5IGFuZCBhdHRlbXB0ZWQgaW50ZXJjZXB0aW9uIG9mIHRlbGVwaG9uZSBhbmQgb3RoZXIgY29tbXVuaWNhdGlvbnMuIE9uIFNlcHRlbWJlciAxNSwgYSBncmFuZCBqdXJ5IGluZGljdGVkIHRoZW0sIGFzIHdlbGwgYXMgSHVudCBhbmQgTGlkZHksWzE2XSBmb3IgY29uc3BpcmFjeSwgYnVyZ2xhcnksIGFuZCB2aW9sYXRpb24gb2YgZmVkZXJhbCB3aXJldGFwcGluZyBsYXdzLiBUaGUgZml2ZSBidXJnbGFycyB3aG8gYnJva2UgaW50byB0aGUgb2ZmaWNlIHdlcmUgdHJpZWQgYnkgSnVkZ2UgSm9obiBTaXJpY2EgYW5kIHdlcmUgY29udmljdGVkIG9uIEphbnVhcnkgMzAsIDE5NzMuWzE3XTwvcD4KCjxoMT5Db3ZlcnVwIGFuZCBpdHMgdW5yYXZlbGluZzwvaDE+Cgo8aDI+SW5pdGlhbCBjb3ZlcnVwPC9oMj4KCjxwPldpdGhpbiBob3VycyBvZiB0aGUgYnVyZ2xhcnMnIGFycmVzdCwgdGhlIEZCSSBkaXNjb3ZlcmVkIHRoZSBuYW1lIG9mIEUuIEhvd2FyZCBIdW50IGluIHRoZSBhZGRyZXNzIGJvb2tzIG9mIEJhcmtlciBhbmQgTWFydMOtbmV6LiBOaXhvbiBhZG1pbmlzdHJhdGlvbiBvZmZpY2lhbHMgd2VyZSBjb25jZXJuZWQgYmVjYXVzZSBIdW50IGFuZCBMaWRkeSB3ZXJlIGFsc28gaW52b2x2ZWQgaW4gYW5vdGhlciBzZWNyZXQgYWN0aXZpdHksIGtub3duIGFzIHRoZSBXaGl0ZSBIb3VzZSBQbHVtYmVycywgd2hpY2ggd2FzIHNldCB1cCB0byBzdG9wIHNlY3VyaXR5ICJsZWFrcyIgYW5kIHRvIGludmVzdGlnYXRlIG90aGVyIHNlbnNpdGl2ZSBzZWN1cml0eSBtYXR0ZXJzLiBEZWFuIHdvdWxkIGxhdGVyIHRlc3RpZnkgaGUgd2FzIG9yZGVyZWQgYnkgdG9wIE5peG9uIGFpZGUgSm9obiBFaHJsaWNobWFuIHRvICJkZWVwIHNpeCIgdGhlIGNvbnRlbnRzIG9mIEhvd2FyZCBIdW50J3MgV2hpdGUgSG91c2Ugc2FmZS4gRWhybGljaG1hbiBzdWJzZXF1ZW50bHkgZGVuaWVkIHRoYXQgYW5kLCBpbiB0aGUgZW5kLCB0aGUgZXZpZGVuY2UgZnJvbSBIdW50J3Mgc2FmZSB3YXMgZGVzdHJveWVkIChpbiBzZXBhcmF0ZSBvcGVyYXRpb25zKSBieSBEZWFuIGFuZCB0aGUgRkJJJ3MgQWN0aW5nIERpcmVjdG9yLCBMLiBQYXRyaWNrIEdyYXkuPC9wPgoKPHA+Tml4b24ncyBvd24gcmVhY3Rpb24gdG8gdGhlIGJyZWFrLWluLCBhdCBsZWFzdCBpbml0aWFsbHksIHdhcyBvbmUgb2Ygc2tlcHRpY2lzbS4gV2F0ZXJnYXRlIHByb3NlY3V0b3IgSmFtZXMgTmVhbCB3YXMgc3VyZSBOaXhvbiBoYWQgbm90IGtub3duIGluIGFkdmFuY2Ugb2YgdGhlIGJyZWFrLWluLiBBcyBldmlkZW5jZSwgaGUgY2l0ZWQgYSBKdW5lIDIzIHRhcGVkIGNvbnZlcnNhdGlvbiBiZXR3ZWVuIHRoZSBQcmVzaWRlbnQgYW5kIGhpcyBDaGllZiBvZiBTdGFmZiwgSC4gUi4gSGFsZGVtYW4sIGluIHdoaWNoIE5peG9uIGFza2VkLCAiV2hvIHdhcyB0aGUgYXNzaG9sZSB3aG8gb3JkZXJlZCBpdD8iIE5vbmV0aGVsZXNzLCBOaXhvbiBzdWJzZXF1ZW50bHkgb3JkZXJlZCBIYWxkZW1hbiB0byBoYXZlIHRoZSBDSUEgYmxvY2sgdGhlIEZCSSdzIGludmVzdGlnYXRpb24gaW50byB0aGUgc291cmNlIG9mIHRoZSBmdW5kaW5nIGZvciB0aGUgYnVyZ2xhcnkuPC9wPgoKPHA+QSBmZXcgZGF5cyBsYXRlciwgTml4b24ncyBQcmVzcyBTZWNyZXRhcnksIFJvbiBaaWVnbGVyLCBkZXNjcmliZWQgdGhlIGV2ZW50IGFzICJhIHRoaXJkLXJhdGUgYnVyZ2xhcnkgYXR0ZW1wdCIuIE9uIEF1Z3VzdCAyOSwgYXQgYSBuZXdzIGNvbmZlcmVuY2UsIFByZXNpZGVudCBOaXhvbiBzdGF0ZWQgRGVhbiBoYWQgY29uZHVjdGVkIGEgdGhvcm91Z2ggaW52ZXN0aWdhdGlvbiBvZiB0aGUgbWF0dGVyLCB3aGVuIGluIGZhY3QgRGVhbiBoYWQgbm90IGNvbmR1Y3RlZCBhbnkgaW52ZXN0aWdhdGlvbiBhdCBhbGwuIE5peG9uIGFsc28gc2FpZCwgIkkgY2FuIHNheSBjYXRlZ29yaWNhbGx5IHRoYXQuLi4gbm8gb25lIGluIHRoZSBXaGl0ZSBIb3VzZSBzdGFmZiwgbm8gb25lIGluIHRoaXMgQWRtaW5pc3RyYXRpb24sIHByZXNlbnRseSBlbXBsb3llZCwgd2FzIGludm9sdmVkIGluIHRoaXMgdmVyeSBiaXphcnJlIGluY2lkZW50Ii4gT24gU2VwdGVtYmVyIDE1LCBOaXhvbiBjb25ncmF0dWxhdGVkIERlYW4sIHNheWluZywgIlRoZSB3YXkgeW91J3ZlIGhhbmRsZWQgaXQsIGl0IHNlZW1zIHRvIG1lLCBoYXMgYmVlbiB2ZXJ5IHNraWxsZnVsLCBiZWNhdXNlIHlvdeKAlHB1dHRpbmcgeW91ciBmaW5nZXJzIGluIHRoZSBkaWtlcyBldmVyeSB0aW1lIHRoYXQgbGVha3MgaGF2ZSBzcHJ1bmcgaGVyZSBhbmQgc3BydW5nIHRoZXJlLiJbMTRdPC9wPgoKPGgyPk1vbmV5IHRyYWlsPC9oMj4KCjxwPk9uIEp1bmUgMTksIDE5NzIsIGl0IHdhcyBwdWJsaWNseSByZXZlYWxlZCB0aGF0IG9uZSBvZiB0aGUgV2F0ZXJnYXRlIGJ1cmdsYXJzIHdhcyBhIFJlcHVibGljYW4gUGFydHkgc2VjdXJpdHkgYWlkZS5bMThdIEZvcm1lciBBdHRvcm5leSBHZW5lcmFsIEpvaG4gTWl0Y2hlbGwsIHdobyBhdCB0aGUgdGltZSB3YXMgdGhlIGhlYWQgb2YgdGhlIE5peG9uIHJlLWVsZWN0aW9uIGNhbXBhaWduIChDUlApLCBkZW5pZWQgYW55IGludm9sdmVtZW50IHdpdGggdGhlIFdhdGVyZ2F0ZSBicmVhay1pbiBvciBrbm93bGVkZ2Ugb2YgdGhlIGZpdmUgYnVyZ2xhcnMuIE9uIEF1Z3VzdCAxLCBhICQyNSwwMDAgY2FzaGllcidzIGNoZWNrIGVhcm1hcmtlZCBmb3IgdGhlIE5peG9uIHJlLWVsZWN0aW9uIGNhbXBhaWduIHdhcyBmb3VuZCBpbiB0aGUgYmFuayBhY2NvdW50IG9mIG9uZSBvZiB0aGUgV2F0ZXJnYXRlIGJ1cmdsYXJzLiBGdXJ0aGVyIGludmVzdGlnYXRpb24gYnkgdGhlIEZCSSB3b3VsZCByZXZlYWwgc3RpbGwgbW9yZSB0aG91c2FuZHMgaGFkIHN1cHBvcnRlZCB0aGVpciB0cmF2ZWwgYW5kIGV4cGVuc2VzIGluIHRoZSBtb250aHMgbGVhZGluZyB1cCB0byB0aGVpciBhcnJlc3RzLiBFeGFtaW5hdGlvbiBzaG93ZWQgbGlua3MgdG8gdGhlIGZpbmFuY2UgY29tbWl0dGVlIG9mIENSUC48L3A+Cgo8cD5TZXZlcmFsIGRvbmF0aW9ucyAodG90YWxpbmcgJDg2LDAwMCkgd2VyZSBtYWRlIGJ5IGluZGl2aWR1YWxzIHdobyB0aG91Z2h0IHRoZXkgd2VyZSBtYWtpbmcgcHJpdmF0ZSBkb25hdGlvbnMgYnkgY2VydGlmaWVkIGFuZCBjYXNoaWVyJ3MgY2hlY2tzIGZvciB0aGUgUHJlc2lkZW50J3MgcmUtZWxlY3Rpb24uIEludmVzdGlnYXRvcnMnIGV4YW1pbmF0aW9uIG9mIHRoZSBiYW5rIHJlY29yZHMgb2YgYSBNaWFtaSBjb21wYW55IHJ1biBieSBXYXRlcmdhdGUgYnVyZ2xhciBCYXJrZXIgcmV2ZWFsZWQgYW4gYWNjb3VudCBjb250cm9sbGVkIGJ5IGhpbSBwZXJzb25hbGx5IGhhZCBkZXBvc2l0ZWQgYSBjaGVjayBhbmQgdGhlbiB0cmFuc2ZlcnJlZCBpdCAodGhyb3VnaCB0aGUgRmVkZXJhbCBSZXNlcnZlIENoZWNrIENsZWFyaW5nIFN5c3RlbSkuPC9wPgoKPHA+VGhlIGJhbmtzIHRoYXQgaGFkIG9yaWdpbmF0ZWQgdGhlIGNoZWNrcyB3ZXJlIGtlZW4gdG8gZW5zdXJlIHRoZSBkZXBvc2l0b3J5IGluc3RpdHV0aW9uIHVzZWQgYnkgQmFya2VyIGhhZCBhY3RlZCBwcm9wZXJseSBpbiBlbnN1cmluZyB0aGUgY2hlY2tzIGhhZCBiZWVuIHJlY2VpdmVkIGFuZCBlbmRvcnNlZCBieSB0aGUgY2hlY2vigJlzIHBheWVlLCBiZWZvcmUgaXRzIGFjY2VwdGFuY2UgZm9yIGRlcG9zaXQgaW4gQmVybmFyZCBCYXJrZXIncyBhY2NvdW50LiBPbmx5IGluIHRoaXMgd2F5IHdvdWxkIHRoZSBpc3N1aW5nIGJhbmtzIG5vdCBiZSBoZWxkIGxpYWJsZSBmb3IgdGhlIHVuYXV0aG9yaXplZCBhbmQgaW1wcm9wZXIgcmVsZWFzZSBvZiBmdW5kcyBmcm9tIHRoZWlyIGN1c3RvbWVy4oCZcyBhY2NvdW50cy48L3A+Cgo8cD5UaGUgaW52ZXN0aWdhdGlvbiBieSB0aGUgRkJJLCB3aGljaCBjbGVhcmVkIEJhcmtlcuKAmXMgYmFuayBvZiBmaWR1Y2lhcnkgbWFsZmVhc2FuY2UsIGxlZCB0byB0aGUgZGlyZWN0IGltcGxpY2F0aW9uIG9mIG1lbWJlcnMgb2YgdGhlIENSUCwgdG8gd2hvbSB0aGUgY2hlY2tzIGhhZCBiZWVuIGRlbGl2ZXJlZC4gVGhvc2UgaW5kaXZpZHVhbHMgd2VyZSB0aGUgQ29tbWl0dGVlIGJvb2trZWVwZXIgYW5kIGl0cyB0cmVhc3VyZXIsIEh1Z2ggU2xvYW4uPC9wPgoKPHA+VGhlIENvbW1pdHRlZSwgYXMgYSBwcml2YXRlIG9yZ2FuaXphdGlvbiwgZm9sbG93ZWQgbm9ybWFsIGJ1c2luZXNzIHByYWN0aWNlIGluIGFsbG93aW5nIG9ubHkgZHVseSBhdXRob3JpemVkIGluZGl2aWR1YWwocykgdG8gYWNjZXB0IGFuZCBlbmRvcnNlIG9uIGJlaGFsZiBvZiB0aGUgQ29tbWl0dGVlLiBUaGVyZWZvcmUsIG5vIGZpbmFuY2lhbCBpbnN0aXR1dGlvbiBjb3VsZCBhY2NlcHQgb3IgcHJvY2VzcyBhIGNoZWNrIG9uIGJlaGFsZiBvZiB0aGUgQ29tbWl0dGVlIHVubGVzcyBpdCBoYWQgYmVlbiBlbmRvcnNlZCBhbmQgYnkgYSBkdWx5IGF1dGhvcml6ZWQgaW5kaXZpZHVhbC4gT24gdGhlIGNoZWNrcyBkZXBvc2l0ZWQgaW50byBCYXJrZXLigJlzIGJhbmsgYWNjb3VudCB3YXMgdGhlIGVuZG9yc2VtZW50IG9mIENvbW1pdHRlZSB0cmVhc3VyZXIgSHVnaCBTbG9hbiwgd2hvIHdhcyBhdXRob3JpemVkIGJ5IHRoZSBGaW5hbmNlIENvbW1pdHRlZS4gQnV0IG9uY2UgU2xvYW4gaGFkIGVuZG9yc2VkIGEgY2hlY2sgbWFkZSBwYXlhYmxlIHRvIHRoZSBDb21taXR0ZWUsIGhlIGhhZCBhIGxlZ2FsIGFuZCBmaWR1Y2lhcnkgcmVzcG9uc2liaWxpdHkgdG8gc2VlIHRoYXQgdGhlIGNoZWNrIHdhcyBkZXBvc2l0ZWQgaW50byB0aGUgYWNjb3VudHMgd2hpY2ggd2VyZSBuYW1lZCBvbiB0aGUgY2hlY2sgYW5kIG9ubHkgdGhlIGFjY291bnRzIHNvIG5hbWVkLiBTbG9hbiBmYWlsZWQgdG8gZG8gdGhhdC4gV2hlbiBoZSB3YXMgY29uZnJvbnRlZCB3aXRoIHRoZSBwb3RlbnRpYWwgY2hhcmdlIG9mIGZlZGVyYWwgYmFuayBmcmF1ZCwgaGUgcmV2ZWFsZWQgaGUgaGFkIGJlZW4gZGlyZWN0ZWQgYnkgQ29tbWl0dGVlIGRlcHV0eSBkaXJlY3RvciBKZWIgTWFncnVkZXIgYW5kIGZpbmFuY2UgZGlyZWN0b3IgTWF1cmljZSBTdGFucyB0byBnaXZlIHRoZSBtb25leSB0byBHLiBHb3Jkb24gTGlkZHkuPC9wPgoKPHA+TGlkZHkgZ2F2ZSB0aGUgbW9uZXkgdG8gQmFya2VyIGFuZCBhdHRlbXB0ZWQgdG8gaGlkZSBpdHMgb3JpZ2luLiBCYXJrZXIgaGFkIGF0dGVtcHRlZCB0byBkaXNndWlzZSB0aGUgZnVuZHMgYnkgZGVwb3NpdGluZyB0aGVtIGludG8gYmFuayBhY2NvdW50cyB3aGljaCB3ZXJlIGxvY2F0ZWQgaW4gYmFua3Mgb3V0c2lkZSBvZiB0aGUgVW5pdGVkIFN0YXRlcy4gV2hhdCBCYXJrZXIsIExpZGR5LCBhbmQgU2xvYW4gZGlkIG5vdCBrbm93IHdhcyB0aGF0IHRoZSBjb21wbGV0ZSByZWNvcmQgb2YgYWxsIHN1Y2ggdHJhbnNhY3Rpb25zIHdlcmUgaGVsZCBmb3Igcm91Z2hseSBzaXggbW9udGhzLiBCYXJrZXLigJlzIHVzZSBvZiBmb3JlaWduIGJhbmtzIHRvIGRlcG9zaXQgY2hlY2tzIGFuZCB3aXRoZHJhdyB0aGUgZnVuZHMgdmlhIGNhc2hpZXIncyBjaGVja3MgYW5kIG1vbmV5IG9yZGVycyBpbiBBcHJpbCBhbmQgTWF5IDE5NzIgZ3VhcmFudGVlZCB0aGUgYmFua3Mgd291bGQga2VlcCB0aGUgZW50aXJlIHRyYW5zYWN0aW9uIHJlY29yZHMgdW50aWwgT2N0b2JlciBhbmQgTm92ZW1iZXIgMTk3Mi48L3A+Cgo8cD5BbGwgZml2ZSBvZiB0aGUgV2F0ZXJnYXRlIGJ1cmdsYXJzIHdlcmUgZGlyZWN0bHkgb3IgaW5kaXJlY3RseSB0aWVkIHRvIHRoZSAxOTcyIENSUCwgdGh1cyBjYXVzaW5nIEp1ZGdlIFNpcmljYSB0byBzdXNwZWN0IGEgY29uc3BpcmFjeSBpbnZvbHZpbmcgaGlnaGVyLWVjaGVsb24gZ292ZXJubWVudCBvZmZpY2lhbHMuWzE5XTwvcD4KCjxwPk9uIFNlcHRlbWJlciAyOSwgMTk3MiwgaXQgd2FzIHJldmVhbGVkIHRoYXQgSm9obiBNaXRjaGVsbCwgd2hpbGUgc2VydmluZyBhcyBBdHRvcm5leSBHZW5lcmFsLCBjb250cm9sbGVkIGEgc2VjcmV0IFJlcHVibGljYW4gZnVuZCB1c2VkIHRvIGZpbmFuY2UgaW50ZWxsaWdlbmNlLWdhdGhlcmluZyBhZ2FpbnN0IHRoZSBEZW1vY3JhdHMuIE9uIE9jdG9iZXIgMTAsIHRoZSBGQkkgcmVwb3J0ZWQgdGhlIFdhdGVyZ2F0ZSBicmVhay1pbiB3YXMgb25seSBwYXJ0IG9mIGEgbWFzc2l2ZSBjYW1wYWlnbiBvZiBwb2xpdGljYWwgc3B5aW5nIGFuZCBzYWJvdGFnZSBvbiBiZWhhbGYgb2YgdGhlIE5peG9uIHJlLWVsZWN0aW9uIGNvbW1pdHRlZS4gRGVzcGl0ZSB0aGVzZSByZXZlbGF0aW9ucywgTml4b24ncyBjYW1wYWlnbiB3YXMgbmV2ZXIgc2VyaW91c2x5IGplb3BhcmRpemVkLCBhbmQgb24gTm92ZW1iZXIgNywgdGhlIFByZXNpZGVudCB3YXMgcmUtZWxlY3RlZCBpbiBvbmUgb2YgdGhlIGJpZ2dlc3QgbGFuZHNsaWRlcyBpbiBBbWVyaWNhbiBwb2xpdGljYWwgaGlzdG9yeS48L3A+Cgo8aDI+Um9sZSBvZiB0aGUgbWVkaWE8L2gyPgoKPHA+VGhlIGNvbm5lY3Rpb24gYmV0d2VlbiB0aGUgYnJlYWstaW4gYW5kIHRoZSByZS1lbGVjdGlvbiBjb21taXR0ZWUgd2FzIGhpZ2hsaWdodGVkIGJ5IG1lZGlhIGNvdmVyYWdl4oCUaW4gcGFydGljdWxhciwgaW52ZXN0aWdhdGl2ZSBjb3ZlcmFnZSBieSBUaGUgV2FzaGluZ3RvbiBQb3N0LCBUaW1lLCBhbmQgVGhlIE5ldyBZb3JrIFRpbWVzLiBUaGUgY292ZXJhZ2UgZHJhbWF0aWNhbGx5IGluY3JlYXNlZCBwdWJsaWNpdHkgYW5kIGNvbnNlcXVlbnQgcG9saXRpY2FsIHJlcGVyY3Vzc2lvbnMuIFJlbHlpbmcgaGVhdmlseSB1cG9uIGFub255bW91cyBzb3VyY2VzLCBQb3N0IHJlcG9ydGVycyBCb2IgV29vZHdhcmQgYW5kIENhcmwgQmVybnN0ZWluIHVuY292ZXJlZCBpbmZvcm1hdGlvbiBzdWdnZXN0aW5nIHRoYXQga25vd2xlZGdlIG9mIHRoZSBicmVhay1pbiwgYW5kIGF0dGVtcHRzIHRvIGNvdmVyIGl0IHVwLCBsZWQgZGVlcGx5IGludG8gdGhlIEp1c3RpY2UgRGVwYXJ0bWVudCwgdGhlIEZCSSwgdGhlIENJQSwgYW5kIHRoZSBXaGl0ZSBIb3VzZS48L3A+Cgo8cD5DaGllZiBhbW9uZyB0aGUgUG9zdCdzIGFub255bW91cyBzb3VyY2VzIHdhcyBhbiBpbmRpdmlkdWFsIHdob20gV29vZHdhcmQgYW5kIEJlcm5zdGVpbiBoYWQgbmlja25hbWVkIERlZXAgVGhyb2F0OyAzMyB5ZWFycyBsYXRlciwgaW4gMjAwNSwgdGhlIGluZm9ybWFudCB3YXMgY29uZmlybWVkIHRvIGJlIFdpbGxpYW0gTWFyayBGZWx0LCBTci4sIHdobyB3YXMgdGhlbiB0aGUgZGVwdXR5IGRpcmVjdG9yIG9mIHRoZSBGQkkuIEZlbHQgbWV0IHNlY3JldGx5IHdpdGggV29vZHdhcmQgc2V2ZXJhbCB0aW1lcywgdGVsbGluZyBoaW0gb2YgSG93YXJkIEh1bnTigJlzIGludm9sdmVtZW50IHdpdGggdGhlIFdhdGVyZ2F0ZSBicmVhay1pbiwgYW5kIHRoYXQgdGhlIFdoaXRlIEhvdXNlIHN0YWZmIHJlZ2FyZGVkIHRoZSBzdGFrZXMgaW4gV2F0ZXJnYXRlIGV4dHJlbWVseSBoaWdoLiBGZWx0IHdhcm5lZCBXb29kd2FyZCB0aGF0IHRoZSBGQkkgd2FudGVkIHRvIGtub3cgd2hlcmUgaGUgYW5kIG90aGVyIHJlcG9ydGVycyB3ZXJlIGdldHRpbmcgdGhlaXIgaW5mb3JtYXRpb24sIGFzIHRoZXkgd2VyZSB1bmNvdmVyaW5nIGEgd2lkZXIgd2ViIG9mIGNyaW1lcyB0aGFuIGZpcnN0IGRpc2Nsb3NlZC4gSW4gb25lIG9mIHRoZWlyIGxhc3QgbWVldGluZ3MsIGFsbCBvZiB3aGljaCB0b29rIHBsYWNlIGF0IGFuIHVuZGVyZ3JvdW5kIHBhcmtpbmcgZ2FyYWdlIHNvbWV3aGVyZSBpbiBSb3NzbHluLCBWaXJnaW5pYSwgYXQgMiBhLm0uLCBGZWx0IGNhdXRpb25lZCBXb29kd2FyZCB0aGF0IGhlIG1pZ2h0IGJlIGZvbGxvd2VkIGFuZCBub3QgdG8gdHJ1c3QgdGhlaXIgcGhvbmUgY29udmVyc2F0aW9ucyB0byBiZSBzZWN1cmUuIFByaW9yIHRvIGhpcyByZXNpZ25hdGlvbiBmcm9tIHRoZSBGQkkgb24gSnVuZSAyMiwgMTk3MywgRmVsdCBhbHNvIHBsYW50ZWQgbGVha3MgYWJvdXQgV2F0ZXJnYXRlIHRvIFRpbWUgbWFnYXppbmUsIHRoZSBXYXNoaW5ndG9uIERhaWx5IE5ld3MgYW5kIG90aGVyIHB1YmxpY2F0aW9ucy5bMjBdPC9wPgoKPHA+RHVyaW5nIHRoaXMgZWFybHkgcGVyaW9kLCBtb3N0IG9mIHRoZSBtZWRpYSBmYWlsZWQgdG8gZ3Jhc3AgdGhlIGZ1bGwgaW1wbGljYXRpb25zIG9mIHRoZSBzY2FuZGFsLCBhbmQgY29uY2VudHJhdGVkIHJlcG9ydGluZyBvbiBvdGhlciB0b3BpY3MgcmVsYXRlZCB0byB0aGUgMTk3MiBwcmVzaWRlbnRpYWwgZWxlY3Rpb24uWzIxXSBBZnRlciB0aGUgcmV2ZWxhdGlvbiB0aGF0IG9uZSBvZiB0aGUgY29udmljdGVkIGJ1cmdsYXJzIHdyb3RlIHRvIEp1ZGdlIFNpcmljYSBhbGxlZ2luZyBhIGhpZ2gtbGV2ZWwgY292ZXJ1cCwgdGhlIG1lZGlhIHNoaWZ0ZWQgaXRzIGZvY3VzLiBUaW1lIG1hZ2F6aW5lIGRlc2NyaWJlZCBOaXhvbiBhcyB1bmRlcmdvaW5nICJkYWlseSBoZWxsIGFuZCB2ZXJ5IGxpdHRsZSB0cnVzdCIuIFRoZSBkaXN0cnVzdCBiZXR3ZWVuIHRoZSBwcmVzcyBhbmQgdGhlIE5peG9uIGFkbWluaXN0cmF0aW9uIHdhcyBtdXR1YWwgYW5kIGdyZWF0ZXIgdGhhbiB1c3VhbCBkdWUgdG8gbGluZ2VyaW5nIGRpc3NhdGlzZmFjdGlvbiB3aXRoIGV2ZW50cyBmcm9tIHRoZSBWaWV0bmFtIFdhci4gUHVibGljIGRpc3RydXN0IG9mIHRoZSBtZWRpYSByZWFjaGVkIG92ZXIgNDAlLlsyMV08L3A+Cgo8cD5OaXhvbiBhbmQgdG9wIGFkbWluaXN0cmF0aW9uIG9mZmljaWFscyBkaXNjdXNzZWQgdXNpbmcgZ292ZXJubWVudCBhZ2VuY2llcyB0byAiZ2V0IiB3aGF0IHRoZXkgcGVyY2VpdmVkIGFzIGhvc3RpbGUgbWVkaWEgb3JnYW5pemF0aW9ucy5bMjFdIFRoZSBkaXNjdXNzaW9ucyBoYWQgcHJlY2VkZW50LiBBdCB0aGUgcmVxdWVzdCBvZiBOaXhvbidzIFdoaXRlIEhvdXNlIGluIDE5NjksIHRoZSBGQkkgdGFwcGVkIHRoZSBwaG9uZXMgb2YgZml2ZSByZXBvcnRlcnMuIEluIDE5NzEsIHRoZSBXaGl0ZSBIb3VzZSByZXF1ZXN0ZWQgYW4gYXVkaXQgb2YgdGhlIHRheCByZXR1cm4gb2YgdGhlIGVkaXRvciBvZiBOZXdzZGF5LCBhZnRlciBoZSB3cm90ZSBhIHNlcmllcyBvZiBhcnRpY2xlcyBhYm91dCB0aGUgZmluYW5jaWFsIGRlYWxpbmdzIG9mIENoYXJsZXMgUmVib3pvLCBhIGZyaWVuZCBvZiBOaXhvbidzLlsyMl08L3A+Cgo8cD5UaGUgYWRtaW5pc3RyYXRpb24gYW5kIGl0cyBzdXBwb3J0ZXJzIGFjY3VzZWQgdGhlIG1lZGlhIG9mIG1ha2luZyAid2lsZCBhY2N1c2F0aW9ucyIsIHB1dHRpbmcgdG9vIG11Y2ggZW1waGFzaXMgb24gdGhlIHN0b3J5LCBhbmQgb2YgaGF2aW5nIGEgbGliZXJhbCBiaWFzIGFnYWluc3QgdGhlIEFkbWluaXN0cmF0aW9uLlsyMV0gTml4b24gc2FpZCBpbiBhIE1heSAxOTc0IGludGVydmlldyB3aXRoIHN1cHBvcnRlciBCYXJ1Y2ggS29yZmYgdGhhdCBpZiBoZSBoYWQgZm9sbG93ZWQgdGhlIGxpYmVyYWwgcG9saWNpZXMgdGhhdCBoZSB0aG91Z2h0IHRoZSBtZWRpYSBwcmVmZXJyZWQsICJXYXRlcmdhdGUgd291bGQgaGF2ZSBiZWVuIGEgYmxpcCIuWzIzXSBUaGUgbWVkaWEgbm90ZWQgdGhhdCBtb3N0IG9mIHRoZSByZXBvcnRpbmcgdHVybmVkIG91dCB0byBiZSBhY2N1cmF0ZSBhbmQgdGhlIGNvbXBldGl0aXZlIG5hdHVyZSBvZiB0aGUgbWVkaWEgZ3VhcmFudGVlZCBtYXNzaXZlIGNvdmVyYWdlIG9mIHRoZSBwb2xpdGljYWwgc2NhbmRhbC5bMjFdIEFwcGxpY2F0aW9ucyB0byBqb3VybmFsaXNtIHNjaG9vbHMgcmVhY2hlZCBhbiBhbGwtdGltZSBoaWdoIGluIDE5NzQuWzIxXTwvcD4KCjxoMj5TY2FuZGFsIGJsb3dzIHdpZGUgb3BlbjwvaDI+Cgo8cD5OaXhvbuKAmXMgY29udmVyc2F0aW9ucyBpbiBsYXRlIE1hcmNoIDE5NzMgYW5kIGFsbCBvZiBBcHJpbCByZXZlYWwgdGhhdCBub3Qgb25seSBkaWQgaGUga25vdyBoZSBuZWVkZWQgdG8gcmVtb3ZlIEhhbGRlbWFuLCBFaHJsaWNobWFuLCBhbmQgRGVhbiwgYnV0IGhlIGhhZCB0byBkbyBzbyBpbiBhIHdheSB0aGF0IGhlIHdhcyBsZWFzdCBsaWtlbHkgdG8gaW5jcmltaW5hdGUgaGltc2VsZiBhbmQgaGlzIHByZXNpZGVuY3kuIE5peG9uIGNyZWF0ZWQgYSBuZXcgY29uc3BpcmFjeeKAlHRvIGVmZmVjdCBhIGNvdmVyLXVwIG9mIHRoZSBjb3Zlci11cOKAlHdoaWNoIGJlZ2FuIGluIGxhdGUgTWFyY2ggMTk3MyBhbmQgYmVjYW1lIGZ1bGx5IGZvcm1lZCBpbiBNYXkgYW5kIEp1bmUgMTk3Mywgb3BlcmF0aW5nIHVudGlsIGhpcyBwcmVzaWRlbmN5IGVuZGVkIGluIEF1Z3VzdCA5LCAxOTc0LlsyNF0gT24gTWFyY2ggMjMsIDE5NzMsIEp1ZGdlIFNpcmljYSByZWFkIHRoZSBjb3VydCBhIGxldHRlciBmcm9tIFdhdGVyZ2F0ZSBidXJnbGFyIEphbWVzIE1jQ29yZCBhbGxlZ2luZyBwZXJqdXJ5IGhhZCBiZWVuIGNvbW1pdHRlZCBpbiB0aGUgV2F0ZXJnYXRlIHRyaWFsLCBhbmQgZGVmZW5kYW50cyBoYWQgYmVlbiBwcmVzc3VyZWQgdG8gcmVtYWluIHNpbGVudC4gVHJ5aW5nIHRvIG1ha2UgdGhlbSB0YWxrLCBTaXJpY2EgZ2F2ZSBIdW50IGFuZCB0d28gYnVyZ2xhcnMgcHJvdmlzaW9uYWwgc2VudGVuY2VzIG9mIHVwIHRvIDQwIHllYXJzLiBPbiBNYXJjaCAyOCwgb24gTml4b24ncyBvcmRlcnMsIGFpZGUgSm9obiBFaHJsaWNobWFuIHRvbGQgYXR0b3JuZXkgZ2VuZXJhbCBSaWNoYXJkIEtsZWluZGllbnN0IHRoYXQgbm9ib2R5IGluIHRoZSBXaGl0ZSBIb3VzZSBoYWQgcHJpb3Iga25vd2xlZGdlIG9mIHRoZSBidXJnbGFyeS4gT24gQXByaWwgMTMsIE1hZ3J1ZGVyIHRvbGQgVS5TLiBhdHRvcm5leXMgdGhhdCBoZSBoYWQgcGVyanVyZWQgaGltc2VsZiBkdXJpbmcgdGhlIGJ1cmdsYXJzJyB0cmlhbCwgYW5kIGltcGxpY2F0ZWQgSm9obiBEZWFuIGFuZCBKb2huIE1pdGNoZWxsLlsxNF08L3A+Cgo8cD5Kb2huIERlYW7igJlzIGJlbGllZiB3YXMgdGhhdCBoZSwgTWl0Y2hlbGwsIEVocmxpY2htYW4gYW5kIEhhbGRlbWFuIGNvdWxkIGdvIHRvIHRoZSBwcm9zZWN1dG9ycywgdGVsbCB0aGUgdHJ1dGggYW5kIHNhdmUgdGhlIHByZXNpZGVuY3kuIERlYW4gd2FudGVkIHRvIHByb3RlY3QgdGhlIHByZXNpZGVuY3kgYW5kIGhhdmUgaGlzIGZvdXIgY2xvc2VzdCBtZW4gdGFrZSB0aGUgZmFsbCBmb3IgdGVsbGluZyB0aGUgdHJ1dGguIER1cmluZyB0aGUgY3JpdGljYWwgbWVldGluZyB3aXRoIERlYW4gYW5kIE5peG9uIG9uIEFwcmlsIDE1LCAxOTczLCBEZWFuIHdhcyB0b3RhbGx5IHVuYXdhcmUgb2YgdGhlIHByZXNpZGVudCdzIGRlcHRoIG9mIGtub3dsZWRnZSBhbmQgaW52b2x2ZW1lbnQgaW4gdGhlIFdhdGVyZ2F0ZSBjb3Zlci11cCBjYWxhbWl0eS4gSXQgd2FzIGR1cmluZyB0aGlzIG1lZXRpbmcgdGhhdCBKb2huIERlYW4gZ290IHRoZSBmZWVsaW5nIGhlIHdhcyBiZWluZyByZWNvcmRlZC4gSGUgd29uZGVyZWQgdGhpcyBkdWUgdG8gdGhlIHdheSBOaXhvbiB3YXMgc3BlYWtpbmcgYW5kIHRyeWluZyB0byBwcm9kIHJlY29sbGVjdGlvbnMgb2YgZWFybGllciB0cm91Ymxlc29tZSBjb252ZXJzYXRpb25zIGFib3V0IGZ1bmRyYWlzaW5nLiBEZWFu4oCZcyBtZW50aW9uIG9mIHRoaXMgY3VyaW9zaXR5IHdoaWxlIGJlZm9yZSB0aGUgU2VuYXRlIENvbW1pdHRlZSBvbiBXYXRlcmdhdGUsIHdvdWxkIGV4cG9zZSB0aGUgdGhyZWFkIHRoYXQgd291bGQgdW5yYXZlbCB0aGUgZmFicmljIG9mIFdhdGVyZ2F0ZS5bMjVdPC9wPgoKPHA+VHdvIGRheXMgbGF0ZXIsIERlYW4gdG9sZCBOaXhvbiB0aGF0IGhlIGhhZCBiZWVuIGNvb3BlcmF0aW5nIHdpdGggdGhlIFUuUy4gYXR0b3JuZXlzLiBPbiB0aGF0IHNhbWUgZGF5LCBVLlMuIGF0dG9ybmV5cyB0b2xkIE5peG9uIHRoYXQgSGFsZGVtYW4sIEVocmxpY2htYW4sIERlYW4gYW5kIG90aGVyIFdoaXRlIEhvdXNlIG9mZmljaWFscyB3ZXJlIGltcGxpY2F0ZWQgaW4gdGhlIGNvdmVydXAuWzE0XVsyNl1bMjddPC9wPgoKPHA+T24gQXByaWwgMzAsIE5peG9uIGFza2VkIGZvciB0aGUgcmVzaWduYXRpb24gb2YgSC4gUi4gSGFsZGVtYW4gYW5kIEpvaG4gRWhybGljaG1hbiwgdHdvIG9mIGhpcyBtb3N0IGluZmx1ZW50aWFsIGFpZGVzLCBib3RoIG9mIHdob20gd2VyZSBpbmRpY3RlZCwgY29udmljdGVkLCBhbmQgdWx0aW1hdGVseSBzZW50ZW5jZWQgdG8gcHJpc29uLiBIZSBhc2tlZCBmb3IgdGhlIHJlc2lnbmF0aW9uIG9mIEF0dG9ybmV5IEdlbmVyYWwgS2xlaW5kaWVuc3QsIHRvIGVuc3VyZSBubyBvbmUgY291bGQgY2xhaW0gdGhhdCBoaXMgaW5ub2NlbnQgZnJpZW5kc2hpcCB3aXRoIEhhbGRlbWFuIGFuZCBFaHJsaWNobWFuIGNvdWxkIGJlIGNvbnN0cnVlZCBhcyBhIGNvbmZsaWN0LiBIZSBmaXJlZCBXaGl0ZSBIb3VzZSBDb3Vuc2VsIEpvaG4gRGVhbiwgd2hvIHdlbnQgb24gdG8gdGVzdGlmeSBiZWZvcmUgdGhlIFNlbmF0ZSBXYXRlcmdhdGUgQ29tbWl0dGVlIGFuZCBjbGVhcmx5IHN0YXRlZCB0aGF0IGhlIGJlbGlldmVkIGFuZCBzdXNwZWN0ZWQgdGhlIGNvbnZlcnNhdGlvbnMgaW4gdGhlIE92YWwgT2ZmaWNlIHdlcmUgYmVpbmcgdGFwZWQuIFRoaXMgaW5mb3JtYXRpb24gYmVjYW1lIHRoZSBib21ic2hlbGwgdGhhdCBoZWxwZWQgZm9yY2UgUmljaGFyZCBOaXhvbiB0byBldmVudHVhbGx5IHJlc2lnbiByYXRoZXIgdGhhbiBiZSBpbXBlYWNoZWQuWzI4XTwvcD4KCjxwPldyaXRpbmcgZnJvbSBwcmlzb24gZm9yIE5ldyBXZXN0IGFuZCBOZXcgWW9yayBtYWdhemluZXMgaW4gMTk3NywgRWhybGljaG1hbiBjbGFpbWVkIE5peG9uIGhhZCBvZmZlcmVkIGhpbSBhIGxhcmdlIHN1bSBvZiBtb25leSwgd2hpY2ggaGUgZGVjbGluZWQuWzI5XTwvcD4KCjxwPlRoZSBQcmVzaWRlbnQgYW5ub3VuY2VkIHRoZSByZXNpZ25hdGlvbnMgaW4gYW4gYWRkcmVzcyB0byB0aGUgQW1lcmljYW4gcGVvcGxlOjwvcD4KCjxwPkluIG9uZSBvZiB0aGUgbW9zdCBkaWZmaWN1bHQgZGVjaXNpb25zIG9mIG15IFByZXNpZGVuY3ksIEkgYWNjZXB0ZWQgdGhlIHJlc2lnbmF0aW9ucyBvZiB0d28gb2YgbXkgY2xvc2VzdCBhc3NvY2lhdGVzIGluIHRoZSBXaGl0ZSBIb3VzZSwgQm9iIEhhbGRlbWFuLCBKb2huIEVocmxpY2htYW4sIHR3byBvZiB0aGUgZmluZXN0IHB1YmxpYyBzZXJ2YW50cyBpdCBoYXMgYmVlbiBteSBwcml2aWxlZ2UgdG8ga25vdy4gQmVjYXVzZSBBdHRvcm5leSBHZW5lcmFsIEtsZWluZGllbnN0LCB0aG91Z2ggYSBkaXN0aW5ndWlzaGVkIHB1YmxpYyBzZXJ2YW50LCBteSBwZXJzb25hbCBmcmllbmQgZm9yIDIwIHllYXJzLCB3aXRoIG5vIHBlcnNvbmFsIGludm9sdmVtZW50IHdoYXRzb2V2ZXIgaW4gdGhpcyBtYXR0ZXIgaGFzIGJlZW4gYSBjbG9zZSBwZXJzb25hbCBhbmQgcHJvZmVzc2lvbmFsIGFzc29jaWF0ZSBvZiBzb21lIG9mIHRob3NlIHdobyBhcmUgaW52b2x2ZWQgaW4gdGhpcyBjYXNlLCBoZSBhbmQgSSBib3RoIGZlbHQgdGhhdCBpdCB3YXMgYWxzbyBuZWNlc3NhcnkgdG8gbmFtZSBhIG5ldyBBdHRvcm5leSBHZW5lcmFsLiBUaGUgQ291bnNlbCB0byB0aGUgUHJlc2lkZW50LCBKb2huIERlYW4sIGhhcyBhbHNvIHJlc2lnbmVkLiDigJQgUmljaGFyZCBOaXhvbiwgWzMwXTwvcD4KCjxwPk9uIHRoZSBzYW1lIGRheSwgTml4b24gYXBwb2ludGVkIGEgbmV3IGF0dG9ybmV5IGdlbmVyYWwsIEVsbGlvdCBSaWNoYXJkc29uLCBhbmQgZ2F2ZSBoaW0gYXV0aG9yaXR5IHRvIGRlc2lnbmF0ZSBhIHNwZWNpYWwgY291bnNlbCBmb3IgdGhlIFdhdGVyZ2F0ZSBpbnZlc3RpZ2F0aW9uIHdobyB3b3VsZCBiZSBpbmRlcGVuZGVudCBvZiB0aGUgcmVndWxhciBKdXN0aWNlIERlcGFydG1lbnQgaGllcmFyY2h5LiBJbiBNYXkgMTk3MywgUmljaGFyZHNvbiBuYW1lZCBBcmNoaWJhbGQgQ294IHRvIHRoZSBwb3NpdGlvbi5bMTRdPC9wPgoKPGgyPlNlbmF0ZSBXYXRlcmdhdGUgaGVhcmluZ3MgYW5kIHJldmVsYXRpb24gb2YgdGhlIFdhdGVyZ2F0ZSB0YXBlczwvaDI+Cgo8cD5PbiBGZWJydWFyeSA3LCAxOTczLCB0aGUgVW5pdGVkIFN0YXRlcyBTZW5hdGUgdm90ZWQgNzfigJMwIHRvIGFwcHJvdmUgU2VuYXRlIFJlc29sdXRpb24gUy5SZXMuIDYwIGFuZCBlc3RhYmxpc2ggYSBzZWxlY3QgY29tbWl0dGVlIHRvIGludmVzdGlnYXRlIFdhdGVyZ2F0ZSwgd2l0aCBTYW0gRXJ2aW4gbmFtZWQgY2hhaXJtYW4gdGhlIG5leHQgZGF5LlsxNF0gVGhlIGhlYXJpbmdzIGhlbGQgYnkgdGhlIFNlbmF0ZSBjb21taXR0ZWUsIGluIHdoaWNoIERlYW4gYW5kIG90aGVyIGZvcm1lciBhZG1pbmlzdHJhdGlvbiBvZmZpY2lhbHMgdGVzdGlmaWVkLCB3ZXJlIGJyb2FkY2FzdCBmcm9tIE1heSAxNyB0byBBdWd1c3QgNywgMTk3My4gVGhlIHRocmVlIG1ham9yIG5ldHdvcmtzIG9mIHRoZSB0aW1lIGFncmVlZCB0byB0YWtlIHR1cm5zIGNvdmVyaW5nIHRoZSBoZWFyaW5ncyBsaXZlLCBlYWNoIG5ldHdvcmsgdGh1cyBtYWludGFpbmluZyBjb3ZlcmFnZSBvZiB0aGUgaGVhcmluZ3MgZXZlcnkgdGhpcmQgZGF5LCBzdGFydGluZyB3aXRoIEFCQyBvbiBNYXkgMTcgYW5kIGVuZGluZyB3aXRoIE5CQyBvbiBBdWd1c3QgNy4gQW4gZXN0aW1hdGVkIDg1JSBvZiBBbWVyaWNhbnMgd2l0aCB0ZWxldmlzaW9uIHNldHMgdHVuZWQgaW50byBhdCBsZWFzdCBvbmUgcG9ydGlvbiBvZiB0aGUgaGVhcmluZ3MuWzMxXTwvcD4KCjxwPk9uIEZyaWRheSwgSnVseSAxMywgMTk3MywgZHVyaW5nIGEgcHJlbGltaW5hcnkgaW50ZXJ2aWV3LCBkZXB1dHkgbWlub3JpdHkgY291bnNlbCBEb25hbGQgU2FuZGVycyBhc2tlZCBXaGl0ZSBIb3VzZSBhc3Npc3RhbnQgQWxleGFuZGVyIEJ1dHRlcmZpZWxkIGlmIHRoZXJlIHdhcyBhbnkgdHlwZSBvZiByZWNvcmRpbmcgc3lzdGVtIGluIHRoZSBXaGl0ZSBIb3VzZS5bMzJdIEJ1dHRlcmZpZWxkIHNhaWQgaGUgd2FzIHJlbHVjdGFudCB0byBhbnN3ZXIsIGJ1dCBmaW5hbGx5IHN0YXRlZCB0aGVyZSB3YXMgYSBuZXcgc3lzdGVtIGluIHRoZSBXaGl0ZSBIb3VzZSB0aGF0IGF1dG9tYXRpY2FsbHkgcmVjb3JkZWQgZXZlcnl0aGluZyBpbiB0aGUgT3ZhbCBPZmZpY2UsIHRoZSBDYWJpbmV0IFJvb20gYW5kIG90aGVycywgYXMgd2VsbCBhcyBOaXhvbidzIHByaXZhdGUgb2ZmaWNlIGluIHRoZSBPbGQgRXhlY3V0aXZlIE9mZmljZSBCdWlsZGluZy48L3A+Cgo8cD5PbiBNb25kYXksIEp1bHkgMTYsIDE5NzMsIGluIGZyb250IG9mIGEgbGl2ZSwgdGVsZXZpc2VkIGF1ZGllbmNlLCBjaGllZiBtaW5vcml0eSBjb3Vuc2VsIEZyZWQgVGhvbXBzb24gYXNrZWQgQnV0dGVyZmllbGQgd2hldGhlciBoZSB3YXMgImF3YXJlIG9mIHRoZSBpbnN0YWxsYXRpb24gb2YgYW55IGxpc3RlbmluZyBkZXZpY2VzIGluIHRoZSBPdmFsIE9mZmljZSBvZiB0aGUgUHJlc2lkZW50Ii4gQnV0dGVyZmllbGQncyByZXZlbGF0aW9uIG9mIHRoZSB0YXBpbmcgc3lzdGVtIHRyYW5zZm9ybWVkIHRoZSBXYXRlcmdhdGUgaW52ZXN0aWdhdGlvbiB5ZXQgYWdhaW4uIENveCBpbW1lZGlhdGVseSBzdWJwb2VuYWVkIHRoZSB0YXBlcywgYXMgZGlkIHRoZSBTZW5hdGUsIGJ1dCBOaXhvbiByZWZ1c2VkIHRvIHJlbGVhc2UgdGhlbSwgY2l0aW5nIGhpcyBleGVjdXRpdmUgcHJpdmlsZWdlIGFzIHByZXNpZGVudCwgYW5kIG9yZGVyZWQgQ294IHRvIGRyb3AgaGlzIHN1YnBvZW5hLiBDb3ggcmVmdXNlZC5bMzNdPC9wPgoKPGgyPiJTYXR1cmRheSBOaWdodCBNYXNzYWNyZSI8L2gyPgoKPHA+T24gT2N0b2JlciAyMCwgMTk3MywgYWZ0ZXIgQ294IHJlZnVzZWQgdG8gZHJvcCB0aGUgc3VicG9lbmEsIE5peG9uIGRlbWFuZGVkIHRoZSByZXNpZ25hdGlvbnMgb2YgYXR0b3JuZXkgZ2VuZXJhbCBSaWNoYXJkc29uIGFuZCBoaXMgZGVwdXR5IFdpbGxpYW0gUnVja2Vsc2hhdXMgZm9yIHJlZnVzaW5nIHRvIGZpcmUgdGhlIHNwZWNpYWwgcHJvc2VjdXRvci4gTml4b24ncyBzZWFyY2ggZm9yIHNvbWVvbmUgaW4gdGhlIEp1c3RpY2UgRGVwYXJ0bWVudCB3aWxsaW5nIHRvIGZpcmUgQ294IGVuZGVkIHdpdGggdGhlIFNvbGljaXRvciBHZW5lcmFsIFJvYmVydCBCb3JrLiBUaG91Z2ggQm9yayBjbGFpbXMgdG8gYmVsaWV2ZSBOaXhvbidzIG9yZGVyIHRvIGJlIHZhbGlkIGFuZCBhcHByb3ByaWF0ZSwgaGUgY29uc2lkZXJlZCByZXNpZ25pbmcgdG8gYXZvaWQgYmVpbmcgInBlcmNlaXZlZCBhcyBhIG1hbiB3aG8gZGlkIHRoZSBQcmVzaWRlbnQncyBiaWRkaW5nIHRvIHNhdmUgbXkgam9iIi5bMzRdIEJvcmsgY2FycmllZCBvdXQgdGhlIHByZXNpZGVudGlhbCBvcmRlciBhbmQgZGlzbWlzc2VkIHRoZSBzcGVjaWFsIHByb3NlY3V0b3IuPC9wPgoKPHA+VGhlc2UgYWN0aW9ucyBtZXQgY29uc2lkZXJhYmxlIHB1YmxpYyBjcml0aWNpc20uIFJlc3BvbmRpbmcgdG8gdGhlIGFsbGVnYXRpb25zIG9mIHBvc3NpYmxlIHdyb25nZG9pbmcsIGluIGZyb250IG9mIDQwMCBBc3NvY2lhdGVkIFByZXNzIG1hbmFnaW5nIGVkaXRvcnMgb24gTm92ZW1iZXIgMTcsIDE5NzMsIE5peG9uIHN0YXRlZCBlbXBoYXRpY2FsbHksICJJJ20gbm90IGEgY3Jvb2siLlszNV1bMzZdIEhlIG5lZWRlZCB0byBhbGxvdyBCb3JrIHRvIGFwcG9pbnQgYSBuZXcgc3BlY2lhbCBwcm9zZWN1dG9yOyBCb3JrIGNob3NlIExlb24gSmF3b3Jza2kgdG8gY29udGludWUgdGhlIGludmVzdGlnYXRpb24uPC9wPgoKPGgyPkxlZ2FsIGFjdGlvbiBhZ2FpbnN0IE5peG9uIEFkbWluaXN0cmF0aW9uIG1lbWJlcnM8L2gyPgoKPHA+T24gTWFyY2ggMSwgMTk3NCwgYSBncmFuZCBqdXJ5IGluIFdhc2hpbmd0b24sIEQuQy4sIGluZGljdGVkIHNldmVyYWwgZm9ybWVyIGFpZGVzIG9mIFByZXNpZGVudCBOaXhvbiwgd2hvIGJlY2FtZSBrbm93biBhcyB0aGUgIldhdGVyZ2F0ZSBTZXZlbiI6IEhhbGRlbWFuLCBFaHJsaWNobWFuLCBNaXRjaGVsbCwgQ2hhcmxlcyBDb2xzb24sIEdvcmRvbiBDLiBTdHJhY2hhbiwgUm9iZXJ0IE1hcmRpYW4gYW5kIEtlbm5ldGggUGFya2luc29uLCBmb3IgY29uc3BpcmluZyB0byBoaW5kZXIgdGhlIFdhdGVyZ2F0ZSBpbnZlc3RpZ2F0aW9uLiBUaGUgZ3JhbmQganVyeSBzZWNyZXRseSBuYW1lZCBQcmVzaWRlbnQgTml4b24gYXMgYW4gdW5pbmRpY3RlZCBjby1jb25zcGlyYXRvci4gVGhlIHNwZWNpYWwgcHJvc2VjdXRvciBkaXNzdWFkZWQgdGhlbSBmcm9tIGFuIGluZGljdG1lbnQgb2YgTml4b24sIGFyZ3VpbmcgdGhhdCBhIFByZXNpZGVudCBjYW4gb25seSBiZSBpbmRpY3RlZCBhZnRlciBoZSBsZWF2ZXMgb2ZmaWNlLlszN10gSm9obiBEZWFuLCBKZWIgU3R1YXJ0IE1hZ3J1ZGVyLCBhbmQgb3RoZXIgZmlndXJlcyBhbHJlYWR5IGhhZCBwbGVhZGVkIGd1aWx0eS4gT24gQXByaWwgNSwgMTk3NCwgRHdpZ2h0IENoYXBpbiwgdGhlIGZvcm1lciBOaXhvbiBhcHBvaW50bWVudHMgc2VjcmV0YXJ5LCB3YXMgY29udmljdGVkIG9mIGx5aW5nIHRvIHRoZSBncmFuZCBqdXJ5LiBUd28gZGF5cyBsYXRlciwgdGhlIHNhbWUgZ3JhbmQganVyeSBpbmRpY3RlZCBFZCBSZWluZWNrZSwgdGhlIFJlcHVibGljYW4gbGlldXRlbmFudCBnb3Zlcm5vciBvZiBDYWxpZm9ybmlhLCBvbiB0aHJlZSBjaGFyZ2VzIG9mIHBlcmp1cnkgYmVmb3JlIHRoZSBTZW5hdGUgY29tbWl0dGVlLjwvcD4KCjxoMj5SZWxlYXNlIG9mIHRoZSB0cmFuc2NyaXB0czwvaDI+Cgo8cD5UaGUgTml4b24gYWRtaW5pc3RyYXRpb24gc3RydWdnbGVkIHRvIGRlY2lkZSB3aGF0IG1hdGVyaWFscyB0byByZWxlYXNlLiBBbGwgcGFydGllcyBpbnZvbHZlZCBhZ3JlZWQgdGhhdCBhbGwgcGVydGluZW50IGluZm9ybWF0aW9uIHNob3VsZCBiZSByZWxlYXNlZC4gV2hldGhlciB0byByZWxlYXNlIHByb2Zhbml0eSBhbmQgdnVsZ2FyaXR5IHVuZWRpdGVkIGRpdmlkZWQgaGlzIGFkdmlzZXJzLiBIaXMgbGVnYWwgdGVhbSBmYXZvcmVkIHJlbGVhc2luZyB0aGUgdGFwZXMgdW5lZGl0ZWQsIHdoaWxlIFByZXNzIFNlY3JldGFyeSBSb24gWmllZ2xlciBwcmVmZXJyZWQgdXNpbmcgYW4gZWRpdGVkIHZlcnNpb24gd2hlcmUgImV4cGxldGl2ZSBkZWxldGVkIiB3b3VsZCByZXBsYWNlIHRoZSByYXcgbWF0ZXJpYWwuIEFmdGVyIHNldmVyYWwgd2Vla3Mgb2YgZGViYXRlLCB0aGV5IGRlY2lkZWQgdG8gcmVsZWFzZSBhbiBlZGl0ZWQgdmVyc2lvbi4gTml4b24gYW5ub3VuY2VkIHRoZSByZWxlYXNlIG9mIHRoZSB0cmFuc2NyaXB0cyBpbiBhIHNwZWVjaCB0byB0aGUgbmF0aW9uIG9uIEFwcmlsIDI5LCAxOTc0LiBOaXhvbiBub3RlZCB0aGF0IGFueSBhdWRpbyBwZXJ0aW5lbnQgdG8gbmF0aW9uYWwgc2VjdXJpdHkgaW5mb3JtYXRpb24gY291bGQgYmUgcmVkYWN0ZWQgZnJvbSB0aGUgcmVsZWFzZWQgdGFwZXMuWzM4XTwvcD4KCjxwPkluaXRpYWxseSwgTml4b24gd2FzIGdpdmVuIGEgcG9zaXRpdmUgcmVhY3Rpb24gZm9yIGhpcyBzcGVlY2guIEFzIHBlb3BsZSByZWFkIHRoZSB0cmFuc2NyaXB0cyBvdmVyIHRoZSBuZXh0IGNvdXBsZSBvZiB3ZWVrcywgaG93ZXZlciwgZm9ybWVyIHN1cHBvcnRlcnMgYW1vbmcgdGhlIHB1YmxpYywgbWVkaWEgYW5kIHBvbGl0aWNhbCBjb21tdW5pdHkgY2FsbGVkIGZvciBOaXhvbidzIHJlc2lnbmF0aW9uIG9yIGltcGVhY2htZW50LiBWaWNlIFByZXNpZGVudCBHZXJhbGQgRm9yZCBzYWlkLCAiV2hpbGUgaXQgbWF5IGJlIGVhc3kgdG8gZGVsZXRlIGNoYXJhY3Rlcml6YXRpb24gZnJvbSB0aGUgcHJpbnRlZCBwYWdlLCB3ZSBjYW5ub3QgZGVsZXRlIGNoYXJhY3Rlcml6YXRpb24gZnJvbSBwZW9wbGUncyBtaW5kcyB3aXRoIGEgd2F2ZSBvZiB0aGUgaGFuZC4iIFRoZSBTZW5hdGUgUmVwdWJsaWNhbiBMZWFkZXIgSHVnaCBTY290dCBzYWlkIHRoZSB0cmFuc2NyaXB0cyByZXZlYWxlZCBhICJkZXBsb3JhYmxlLCBkaXNndXN0aW5nLCBzaGFiYnksIGFuZCBpbW1vcmFsIiBwZXJmb3JtYW5jZSBvbiB0aGUgcGFydCBvZiB0aGUgUHJlc2lkZW50IGFuZCBoaXMgZm9ybWVyIGFpZGVzLiBUaGUgSG91c2UgUmVwdWJsaWNhbiBMZWFkZXIgSm9obiBKYWNvYiBSaG9kZXMgYWdyZWVkIHdpdGggU2NvdHQsIGFuZCBSaG9kZXMgcmVjb21tZW5kZWQgdGhhdCBpZiBOaXhvbidzIHBvc2l0aW9uIGNvbnRpbnVlZCB0byBkZXRlcmlvcmF0ZSwgaGUgIm91Z2h0IHRvIGNvbnNpZGVyIHJlc2lnbmluZyBhcyBhIHBvc3NpYmxlIG9wdGlvbi4iIFRoZSBlZGl0b3JzIG9mIHRoZSBuZXdzcGFwZXIgVGhlIENoaWNhZ28gVHJpYnVuZSwgYSBwdWJsaWNhdGlvbiB0aGF0IGhhZCBzdXBwb3J0ZWQgTml4b24sIHdyb3RlLCAiSGUgaXMgaHVtb3JsZXNzIHRvIHRoZSBwb2ludCBvZiBiZWluZyBpbmh1bWFuZS4gSGUgaXMgZGV2aW91cy4gSGUgaXMgdmFjaWxsYXRpbmcuIEhlIGlzIHByb2ZhbmUuIEhlIGlzIHdpbGxpbmcgdG8gYmUgbGVkLiBIZSBkaXNwbGF5cyBkaXNtYXlpbmcgZ2FwcyBpbiBrbm93bGVkZ2UuIEhlIGlzIHN1c3BpY2lvdXMgb2YgaGlzIHN0YWZmLiBIaXMgbG95YWx0eSBpcyBtaW5pbWFsIi4gVGhlIFByb3ZpZGVuY2UgSm91cm5hbCB3cm90ZSwgIlJlYWRpbmcgdGhlIHRyYW5zY3JpcHRzIGlzIGFuIGVtZXRpYyBleHBlcmllbmNlOyBvbmUgY29tZXMgYXdheSBmZWVsaW5nIHVuY2xlYW4uIiBUaGlzIG5ld3NwYXBlciBjb250aW51ZWQsIHRoYXQsIHdoaWxlIHRoZSB0cmFuc2NyaXB0cyBtYXkgbm90IGhhdmUgcmV2ZWFsZWQgYW4gaW5kaWN0YWJsZSBvZmZlbnNlLCB0aGV5IHNob3dlZCBOaXhvbiBjb250ZW1wdHVvdXMgb2YgdGhlIFVuaXRlZCBTdGF0ZXMsIGl0cyBpbnN0aXR1dGlvbnMsIGFuZCBpdHMgcGVvcGxlLiBBY2NvcmRpbmcgdG8gVGltZSBtYWdhemluZSwgdGhlIFJlcHVibGljYW4gUGFydHkgbGVhZGVycyBpbiB0aGUgV2VzdGVybiBVbml0ZWQgU3RhdGVzIGZlbHQgdGhhdCB3aGlsZSB0aGVyZSByZW1haW5lZCBhIHNpZ25pZmljYW50IG51bWJlciBvZiBOaXhvbiBsb3lhbGlzdHMgaW4gdGhlIHBhcnR5LCB0aGUgbWFqb3JpdHkgYmVsaWV2ZWQgdGhhdCBOaXhvbiBzaG91bGQgc3RlcCBkb3duIGFzIHF1aWNrbHkgYXMgcG9zc2libGUuIFRoZXkgd2VyZSBkaXN0dXJiZWQgYnkgdGhlIGJhZCBsYW5ndWFnZSBhbmQgdGhlIGNvYXJzZSwgdmluZGljdGl2ZSB0b25lIG9mIHRoZSBjb252ZXJzYXRpb25zIGluIHRoZSB0cmFuc2NyaXB0cy5bMzldWzQwXTwvcD4KCjxoMj5TdXByZW1lIENvdXJ0PC9oMj4KCjxwPlRoZSBpc3N1ZSBvZiBhY2Nlc3MgdG8gdGhlIHRhcGVzIHdlbnQgdG8gdGhlIFN1cHJlbWUgQ291cnQuIE9uIEp1bHkgMjQsIDE5NzQsIGluIFVuaXRlZCBTdGF0ZXMgdi4gTml4b24sIHRoZSBDb3VydCwgd2hpY2ggZGlkIG5vdCBpbmNsdWRlIHRoZSByZWN1c2VkIEp1c3RpY2UgV2lsbGlhbSBSZWhucXVpc3QgKHdobyBoYWQgcmVjZW50bHkgYmVlbiBhcHBvaW50ZWQgYnkgTml4b24gYW5kIGhhZCBzZXJ2ZWQgYXMgQXNzaXN0YW50IEF0dG9ybmV5IEdlbmVyYWwgb2YgdGhlIE9mZmljZSBvZiBMZWdhbCBDb3Vuc2VsIGluIHRoZSBOaXhvbiBKdXN0aWNlIERlcGFydG1lbnQpLCBydWxlZCB1bmFuaW1vdXNseSB0aGF0IGNsYWltcyBvZiBleGVjdXRpdmUgcHJpdmlsZWdlIG92ZXIgdGhlIHRhcGVzIHdlcmUgdm9pZC4gVGhleSBvcmRlcmVkIHRoZSBwcmVzaWRlbnQgdG8gcmVsZWFzZSB0aGVtIHRvIHRoZSBzcGVjaWFsIHByb3NlY3V0b3IuIE9uIEp1bHkgMzAsIDE5NzQsIFByZXNpZGVudCBOaXhvbiBjb21wbGllZCB3aXRoIHRoZSBvcmRlciBhbmQgcmVsZWFzZWQgdGhlIHN1YnBvZW5hZWQgdGFwZXMgZm9yIHRoZSBwdWJsaWMuPC9wPgoKPGgyPlJlbGVhc2Ugb2YgdGhlIHRhcGVzPC9oMj4KCjxwPlRoZSB0YXBlcyByZXZlYWxlZCBzZXZlcmFsIGNydWNpYWwgY29udmVyc2F0aW9uc1s0MV0gdGhhdCB0b29rIHBsYWNlIGJldHdlZW4gdGhlIFByZXNpZGVudCBhbmQgaGlzIGNvdW5zZWwsIEpvaG4gRGVhbiwgb24gTWFyY2ggMjEsIDE5NzMuIEluIHRoaXMgY29udmVyc2F0aW9uLCBEZWFuIHN1bW1hcml6ZWQgbWFueSBhc3BlY3RzIG9mIHRoZSBXYXRlcmdhdGUgY2FzZSwgYW5kIGZvY3VzZWQgb24gdGhlIHN1YnNlcXVlbnQgY292ZXJ1cCwgZGVzY3JpYmluZyBpdCBhcyBhICJjYW5jZXIgb24gdGhlIHByZXNpZGVuY3kiLiBUaGUgYnVyZ2xhcnkgdGVhbSB3YXMgYmVpbmcgcGFpZCBodXNoIG1vbmV5IGZvciB0aGVpciBzaWxlbmNlIGFuZCBEZWFuIHN0YXRlZDogIlRoYXQncyB0aGUgbW9zdCB0cm91Ymxlc29tZSBwb3N0LXRoaW5nLCBiZWNhdXNlIEJvYiBbSGFsZGVtYW5dIGlzIGludm9sdmVkIGluIHRoYXQ7IEpvaG4gW0VocmxpY2htYW5dIGlzIGludm9sdmVkIGluIHRoYXQ7IEkgYW0gaW52b2x2ZWQgaW4gdGhhdDsgTWl0Y2hlbGwgaXMgaW52b2x2ZWQgaW4gdGhhdC4gQW5kIHRoYXQncyBhbiBvYnN0cnVjdGlvbiBvZiBqdXN0aWNlLiJbNDJdIERlYW4gY29udGludWVkIGFuZCBzdGF0ZWQgdGhhdCBIb3dhcmQgSHVudCBpcyBibGFja21haWxpbmcgdGhlIFdoaXRlIEhvdXNlLCBkZW1hbmRpbmcgbW9uZXkgaW1tZWRpYXRlbHk7IFByZXNpZGVudCBOaXhvbiByZXBsaWVkIHRoYXQgdGhlIGJsYWNrbWFpbCBtb25leSBzaG91bGQgYmUgcGFpZDogIuKApmp1c3QgbG9va2luZyBhdCB0aGUgaW1tZWRpYXRlIHByb2JsZW0sIGRvbid0IHlvdSBoYXZlIHRvIGhhdmUg4oCTIGhhbmRsZSBIdW50J3MgZmluYW5jaWFsIHNpdHVhdGlvbiBkYW1uIHNvb24/IFvigKZdIHlvdSd2ZSBnb3QgdG8ga2VlcCB0aGUgY2FwIG9uIHRoZSBib3R0bGUgdGhhdCBtdWNoLCBpbiBvcmRlciB0byBoYXZlIGFueSBvcHRpb25zLiJbNDJdPC9wPgoKPHA+QXQgdGhlIHRpbWUgb2YgdGhlIGluaXRpYWwgY29uZ3Jlc3Npb25hbCBpbXBlYWNobWVudCwgaXQgd2FzIG5vdCBrbm93biBpZiBOaXhvbiBoYWQga25vd24gYW5kIGFwcHJvdmVkIG9mIHRoZSBwYXltZW50cyB0byB0aGUgV2F0ZXJnYXRlIGRlZmVuZGFudHMgZWFybGllciB0aGFuIHRoaXMgY29udmVyc2F0aW9uLiBOaXhvbidzIGNvbnZlcnNhdGlvbiB3aXRoIEhhbGRlbWFuIG9uIEF1Z3VzdCAxLCAxOTcyLCBpcyBvbmUgb2Ygc2V2ZXJhbCB0aGF0IGVzdGFibGlzaGVzIHRoaXMuIE5peG9uIHN0YXRlczogIldlbGzigKZ0aGV5IGhhdmUgdG8gYmUgcGFpZC4gVGhhdCdzIGFsbCB0aGVyZSBpcyB0byB0aGF0LiBUaGV5IGhhdmUgdG8gYmUgcGFpZC4iWzQzXSBEdXJpbmcgdGhlIGNvbmdyZXNzaW9uYWwgZGViYXRlIG9uIGltcGVhY2htZW50LCBzb21lIGJlbGlldmVkIHRoYXQgaW1wZWFjaG1lbnQgcmVxdWlyZWQgYSBjcmltaW5hbGx5IGluZGljdGFibGUgb2ZmZW5zZS4gUHJlc2lkZW50IE5peG9uJ3MgYWdyZWVtZW50IHRvIG1ha2UgdGhlIGJsYWNrbWFpbCBwYXltZW50cyB3YXMgcmVnYXJkZWQgYXMgYW4gYWZmaXJtYXRpdmUgYWN0IHRvIG9ic3RydWN0IGp1c3RpY2UuWzQ0XTwvcD4KCjxwPk9uIERlY2VtYmVyIDcsIDE5NzMsIGl0IHdhcyBmb3VuZCB0aGF0IGFuIDE4wr0gbWludXRlIHBvcnRpb24gb2Ygb25lIHJlY29yZGVkIHRhcGUgaGFkIGJlZW4gZXJhc2VkLiBOaXhvbidzIGxvbmd0aW1lIHBlcnNvbmFsIHNlY3JldGFyeSwgUm9zZSBNYXJ5IFdvb2RzLCBzYWlkIHNoZSBoYWQgYWNjaWRlbnRhbGx5IGVyYXNlZCB0aGUgdGFwZSBieSBwdXNoaW5nIHRoZSB3cm9uZyBwZWRhbCBvbiBoZXIgdGFwZSBwbGF5ZXIgd2hlbiBhbnN3ZXJpbmcgdGhlIHBob25lLiBUaGUgcHJlc3MgcmFuIHBob3RvcyBzaG93aW5nIHRoYXQgaXQgd2FzIHVubGlrZWx5IGZvciBXb29kcyB0byBhbnN3ZXIgdGhlIHBob25lIGFuZCBrZWVwIGhlciBmb290IG9uIHRoZSBwZWRhbC4gTGF0ZXIgZm9yZW5zaWMgYW5hbHlzaXMgZGV0ZXJtaW5lZCB0aGF0IHRoZSB0YXBlIGhhZCBiZWVuIGVyYXNlZCBpbiBzZXZlcmFsIHNlZ21lbnRzIOKAkyBhdCBsZWFzdCBmaXZlLCBhbmQgcGVyaGFwcyBhcyBtYW55IGFzIG5pbmUuWzQ1XTwvcD4KCjxoMT5GaW5hbCBpbnZlc3RpZ2F0aW9ucyBhbmQgcmVzaWduYXRpb248L2gxPgoKPHA+Tml4b24ncyBwb3NpdGlvbiB3YXMgYmVjb21pbmcgaW5jcmVhc2luZ2x5IHByZWNhcmlvdXMuIE9uIEZlYnJ1YXJ5IDYsIDE5NzQsIHRoZSBIb3VzZSBvZiBSZXByZXNlbnRhdGl2ZXMgYXBwcm92ZWQgSC5SZXMuIDgwMyBnaXZpbmcgdGhlIEp1ZGljaWFyeSBDb21taXR0ZWUgYXV0aG9yaXR5IHRvIGludmVzdGlnYXRlIGltcGVhY2htZW50IG9mIHRoZSBQcmVzaWRlbnQuWzQ2XVs0N10gVGhlIEhvdXNlIEp1ZGljaWFyeSBDb21taXR0ZWUgdm90ZWQgMjfigJMxMSBvbiBKdWx5IDI3LCAxOTc0LCB0byByZWNvbW1lbmQgdGhlIGZpcnN0IGFydGljbGUgb2YgaW1wZWFjaG1lbnQgYWdhaW5zdCB0aGUgcHJlc2lkZW50OiBvYnN0cnVjdGlvbiBvZiBqdXN0aWNlLiBUaGUgc2Vjb25kOiBhYnVzZSBvZiBwb3dlciwgYW5kIHRoaXJkOiBjb250ZW1wdCBvZiBDb25ncmVzcyBhcnRpY2xlcyB3ZXJlIHBhc3NlZCBvbiBKdWx5IDI5LCAxOTc0LCBhbmQgSnVseSAzMCwgMTk3NCwgcmVzcGVjdGl2ZWx5LiAoT24gQXVndXN0IDIwLCAxOTc0LCB0aGUgQ29tbWl0dGVlIHdvdWxkIGZvcm1hbGx5IHN1Ym1pdCBILiBSZXB0LiA5My0xMzA1IHdoaWNoIGluY2x1ZGVkIHRoZSB0ZXh0IG9mIHRoZSByZXNvbHV0aW9uIGltcGVhY2hpbmcgUHJlc2lkZW50IE5peG9uIGFuZCBzZXR0aW5nIGZvcnRoIGFydGljbGVzIG9mIGltcGVhY2htZW50IGFnYWluc3QgaGltLilbNDhdWzQ5XTwvcD4KCjxoMj4iU21va2luZyBHdW4iIHRhcGU8L2gyPgoKPHA+T24gQXVndXN0IDUsIDE5NzQsIHRoZSBXaGl0ZSBIb3VzZSByZWxlYXNlZCBhIHByZXZpb3VzbHkgdW5rbm93biBhdWRpbyB0YXBlIGZyb20gSnVuZSAyMywgMTk3Mi4gUmVjb3JkZWQgb25seSBhIGZldyBkYXlzIGFmdGVyIHRoZSBicmVhay1pbiwgaXQgZG9jdW1lbnRlZCB0aGUgaW5pdGlhbCBzdGFnZXMgb2YgdGhlIGNvdmVydXA6IGl0IHJldmVhbGVkIE5peG9uIGFuZCBIYWxkZW1hbiBtZWV0aW5nIGluIHRoZSBPdmFsIE9mZmljZSBhbmQgZm9ybXVsYXRpbmcgYSBwbGFuIHRvIGJsb2NrIGludmVzdGlnYXRpb25zIGJ5IGhhdmluZyB0aGUgQ0lBIGZhbHNlbHkgY2xhaW0gdG8gdGhlIEZCSSB0aGF0IG5hdGlvbmFsIHNlY3VyaXR5IHdhcyBpbnZvbHZlZC4gSGFsZGVtYW4gaW50cm9kdWNlZCB0aGUgdG9waWMgYXMgZm9sbG93czo8L3A+Cgo8Y2l0ZT4i4oCmdGhlIERlbW9jcmF0aWMgYnJlYWstaW4gdGhpbmcsIHdlJ3JlIGJhY2sgdG8gdGhl4oCTaW4gdGhlLCB0aGUgcHJvYmxlbSBhcmVhIGJlY2F1c2UgdGhlIEZCSSBpcyBub3QgdW5kZXIgY29udHJvbCwgYmVjYXVzZSBHcmF5IGRvZXNuJ3QgZXhhY3RseSBrbm93IGhvdyB0byBjb250cm9sIHRoZW0sIGFuZCB0aGV5IGhhdmXigKYgdGhlaXIgaW52ZXN0aWdhdGlvbiBpcyBub3cgbGVhZGluZyBpbnRvIHNvbWUgcHJvZHVjdGl2ZSBhcmVhcyBb4oCmXSBhbmQgaXQgZ29lcyBpbiBzb21lIGRpcmVjdGlvbnMgd2UgZG9uJ3Qgd2FudCBpdCB0byBnby4iPC9jaXRlPgoKPHA+QWZ0ZXIgZXhwbGFpbmluZyBob3cgdGhlIG1vbmV5IGZyb20gQ1JQIHdhcyB0cmFjZWQgdG8gdGhlIGJ1cmdsYXJzLCBIYWxkZW1hbiBleHBsYWluZWQgdG8gTml4b24gdGhlIGNvdmVydXAgcGxhbjogInRoZSB3YXkgdG8gaGFuZGxlIHRoaXMgbm93IGlzIGZvciB1cyB0byBoYXZlIFdhbHRlcnMgW0NJQV0gY2FsbCBQYXQgR3JheSBbRkJJXSBhbmQganVzdCBzYXksICdTdGF5IHRoZSBoZWxsIG91dCBvZiB0aGlzIOKApnRoaXMgaXMgYWgsIGJ1c2luZXNzIGhlcmUgd2UgZG9uJ3Qgd2FudCB5b3UgdG8gZ28gYW55IGZ1cnRoZXIgb24gaXQuJyIgUHJlc2lkZW50IE5peG9uIGFwcHJvdmVkIHRoZSBwbGFuLCBhbmQgYWZ0ZXIgaGUgd2FzIGdpdmVuIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGludm9sdmVtZW50IG9mIGhpcyBjYW1wYWlnbiBpbiB0aGUgYnJlYWstaW4sIGhlIHRvbGQgSGFsZGVtYW46ICJBbGwgcmlnaHQsIGZpbmUsIEkgdW5kZXJzdGFuZCBpdCBhbGwuIFdlIHdvbid0IHNlY29uZC1ndWVzcyBNaXRjaGVsbCBhbmQgdGhlIHJlc3QuIiBSZXR1cm5pbmcgdG8gdGhlIHVzZSBvZiB0aGUgQ0lBIHRvIG9ic3RydWN0IHRoZSBGQkksIGhlIGluc3RydWN0ZWQgSGFsZGVtYW46ICJZb3UgY2FsbCB0aGVtIGluLiBHb29kLiBHb29kIGRlYWwuIFBsYXkgaXQgdG91Z2guIFRoYXQncyB0aGUgd2F5IHRoZXkgcGxheSBpdCBhbmQgdGhhdCdzIHRoZSB3YXkgd2UgYXJlIGdvaW5nIHRvIHBsYXkgaXQuIls1MF1bNTFdPC9wPgoKPHA+Tml4b24gZGVuaWVkIHRoaXMgY29uc3RpdHV0ZWQgYW4gb2JzdHJ1Y3Rpb24gb2YganVzdGljZSwgYXMgaGlzIGluc3RydWN0aW9ucyB1bHRpbWF0ZWx5IHJlc3VsdGVkIGluIHRoZSBDSUEgdHJ1dGhmdWxseSByZXBvcnRpbmcgdG8gdGhlIEZCSSB0aGF0IHRoZXJlIHdlcmUgbm8gbmF0aW9uYWwgc2VjdXJpdHkgaXNzdWVzLiBOaXhvbiB1cmdlZCB0aGUgRkJJIHRvIHByZXNzIGZvcndhcmQgd2l0aCB0aGUgaW52ZXN0aWdhdGlvbiB3aGVuIHRoZXkgZXhwcmVzc2VkIGNvbmNlcm4gYWJvdXQgaW50ZXJmZXJlbmNlLls1Ml08L3A+Cgo8cD5CZWZvcmUgdGhlIHJlbGVhc2Ugb2YgdGhpcyB0YXBlLCBQcmVzaWRlbnQgTml4b24gaGFkIGRlbmllZCBhbnkgaW52b2x2ZW1lbnQgaW4gdGhlIHNjYW5kYWwuIEhlIGNsYWltZWQgdGhlcmUgd2VyZSBubyBwb2xpdGljYWwgbW90aXZhdGlvbnMgaW4gaGlzIGluc3RydWN0aW9ucyB0byB0aGUgQ0lBLCBhbmQgY2xhaW1lZCBoZSBoYWQgbm8ga25vd2xlZGdlIGJlZm9yZSBNYXJjaCAyMSwgMTk3Mywgb2YgaW52b2x2ZW1lbnQgYnkgc2VuaW9yIGNhbXBhaWduIG9mZmljaWFscyBzdWNoIGFzIEpvaG4gTWl0Y2hlbGwuIFRoZSBjb250ZW50cyBvZiB0aGlzIHRhcGUgcGVyc3VhZGVkIE5peG9uJ3Mgb3duIGxhd3llcnMsIEZyZWQgQnV6aGFyZHQgYW5kIEphbWVzIFN0LiBDbGFpciwgdGhhdCAiVGhlIHRhcGUgcHJvdmVkIHRoYXQgdGhlIFByZXNpZGVudCBoYWQgbGllZCB0byB0aGUgbmF0aW9uLCB0byBoaXMgY2xvc2VzdCBhaWRlcywgYW5kIHRvIGhpcyBvd24gbGF3eWVycyDigJMgZm9yIG1vcmUgdGhhbiB0d28geWVhcnMiLls1M10gVGhlIHRhcGUsIHdoaWNoIHdhcyByZWZlcnJlZCB0byBhcyBhICJzbW9raW5nIGd1biIgYnkgQmFyYmVyIENvbmFibGUsIHByb3ZlZCB0aGF0IE5peG9uIGhhZCBiZWVuIGludm9sdmVkIGluIHRoZSBjb3ZlcnVwIGZyb20gdGhlIGJlZ2lubmluZy48L3A+Cgo8cD5JbiB0aGUgd2VlayBiZWZvcmUgTml4b24ncyByZXNpZ25hdGlvbiwgRWhybGljaG1hbiBhbmQgSGFsZGVtYW4gdW5zdWNjZXNzZnVsbHkgdHJpZWQgdG8gZ2V0IE5peG9uIHRvIGdyYW50IHRoZW0gdGhlIHBhcmRvbnMgd2hpY2ggTml4b24gaGFkIHByb21pc2VkIHRoZW0gYmVmb3JlIHRoZWlyIEFwcmlsIDE5NzMgcmVzaWduYXRpb25zLls1NF08L3A+Cgo8aDI+UmVzaWduYXRpb248L2gyPgoKPHA+VGhlIHJlbGVhc2Ugb2YgdGhlICJzbW9raW5nIGd1biIgdGFwZSBkZXN0cm95ZWQgTml4b24gcG9saXRpY2FsbHkuIFRoZSB0ZW4gY29uZ3Jlc3NtZW4gd2hvIHZvdGVkIGFnYWluc3QgYWxsIHRocmVlIGFydGljbGVzIG9mIGltcGVhY2htZW50IGluIHRoZSBIb3VzZSBKdWRpY2lhcnkgQ29tbWl0dGVlIGFubm91bmNlZCB0aGV5IHdvdWxkIGFsbCBzdXBwb3J0IGltcGVhY2htZW50IHdoZW4gdGhlIHZvdGUgd2FzIHRha2VuIGluIHRoZSBmdWxsIEhvdXNlLjwvcD4KCjxwPk9uIHRoZSBuaWdodCBvZiBBdWd1c3QgNywgMTk3NCwgU2VuYXRvcnMgQmFycnkgR29sZHdhdGVyIGFuZCBIdWdoIFNjb3R0IGFuZCBDb25ncmVzc21hbiBKb2huIEphY29iIFJob2RlcyBtZXQgd2l0aCBOaXhvbiBpbiB0aGUgT3ZhbCBPZmZpY2UgYW5kIHRvbGQgaGltIHRoYXQgaGlzIHN1cHBvcnQgaW4gQ29uZ3Jlc3MgaGFkIGFsbCBidXQgZGlzYXBwZWFyZWQuIFJob2RlcyB0b2xkIE5peG9uIHRoYXQgaGUgd291bGQgZmFjZSBjZXJ0YWluIGltcGVhY2htZW50IHdoZW4gdGhlIGFydGljbGVzIGNhbWUgdXAgZm9yIHZvdGUgaW4gdGhlIGZ1bGwgSG91c2UuIEdvbGR3YXRlciBhbmQgU2NvdHQgdG9sZCB0aGUgcHJlc2lkZW50IHRoYXQgdGhlcmUgd2VyZSBub3Qgb25seSBlbm91Z2ggdm90ZXMgaW4gdGhlIFNlbmF0ZSB0byBjb252aWN0IGhpbSwgYnV0IHRoYXQgbm8gbW9yZSB0aGFuIDE1IFNlbmF0b3JzIHdlcmUgd2lsbGluZyB0byB2b3RlIGZvciBhY3F1aXR0YWwuIFJlYWxpemluZyB0aGF0IGhlIGhhZCBubyBjaGFuY2Ugb2Ygc3RheWluZyBpbiBvZmZpY2UsIE5peG9uIGRlY2lkZWQgdG8gcmVzaWduLiBJbiBhIG5hdGlvbmFsbHkgdGVsZXZpc2VkIGFkZHJlc3MgZnJvbSB0aGUgT3ZhbCBPZmZpY2Ugb24gdGhlIGV2ZW5pbmcgb2YgQXVndXN0IDgsIDE5NzQsIHRoZSBwcmVzaWRlbnQgc2FpZCwgaW4gcGFydDo8L3A+Cgo8cD5JbiBhbGwgdGhlIGRlY2lzaW9ucyBJIGhhdmUgbWFkZSBpbiBteSBwdWJsaWMgbGlmZSwgSSBoYXZlIGFsd2F5cyB0cmllZCB0byBkbyB3aGF0IHdhcyBiZXN0IGZvciB0aGUgTmF0aW9uLiBUaHJvdWdob3V0IHRoZSBsb25nIGFuZCBkaWZmaWN1bHQgcGVyaW9kIG9mIFdhdGVyZ2F0ZSwgSSBoYXZlIGZlbHQgaXQgd2FzIG15IGR1dHkgdG8gcGVyc2V2ZXJlLCB0byBtYWtlIGV2ZXJ5IHBvc3NpYmxlIGVmZm9ydCB0byBjb21wbGV0ZSB0aGUgdGVybSBvZiBvZmZpY2UgdG8gd2hpY2ggeW91IGVsZWN0ZWQgbWUuIEluIHRoZSBwYXN0IGZldyBkYXlzLCBob3dldmVyLCBpdCBoYXMgYmVjb21lIGV2aWRlbnQgdG8gbWUgdGhhdCBJIG5vIGxvbmdlciBoYXZlIGEgc3Ryb25nIGVub3VnaCBwb2xpdGljYWwgYmFzZSBpbiB0aGUgQ29uZ3Jlc3MgdG8ganVzdGlmeSBjb250aW51aW5nIHRoYXQgZWZmb3J0LiBBcyBsb25nIGFzIHRoZXJlIHdhcyBzdWNoIGEgYmFzZSwgSSBmZWx0IHN0cm9uZ2x5IHRoYXQgaXQgd2FzIG5lY2Vzc2FyeSB0byBzZWUgdGhlIGNvbnN0aXR1dGlvbmFsIHByb2Nlc3MgdGhyb3VnaCB0byBpdHMgY29uY2x1c2lvbiwgdGhhdCB0byBkbyBvdGhlcndpc2Ugd291bGQgYmUgdW5mYWl0aGZ1bCB0byB0aGUgc3Bpcml0IG9mIHRoYXQgZGVsaWJlcmF0ZWx5IGRpZmZpY3VsdCBwcm9jZXNzIGFuZCBhIGRhbmdlcm91c2x5IGRlc3RhYmlsaXppbmcgcHJlY2VkZW50IGZvciB0aGUgZnV0dXJl4oCmLjwvcD4KCjxwPkkgd291bGQgaGF2ZSBwcmVmZXJyZWQgdG8gY2FycnkgdGhyb3VnaCB0byB0aGUgZmluaXNoIHdoYXRldmVyIHRoZSBwZXJzb25hbCBhZ29ueSBpdCB3b3VsZCBoYXZlIGludm9sdmVkLCBhbmQgbXkgZmFtaWx5IHVuYW5pbW91c2x5IHVyZ2VkIG1lIHRvIGRvIHNvLiBCdXQgdGhlIGludGVyZXN0IG9mIHRoZSBOYXRpb24gbXVzdCBhbHdheXMgY29tZSBiZWZvcmUgYW55IHBlcnNvbmFsIGNvbnNpZGVyYXRpb25zLiBGcm9tIHRoZSBkaXNjdXNzaW9ucyBJIGhhdmUgaGFkIHdpdGggQ29uZ3Jlc3Npb25hbCBhbmQgb3RoZXIgbGVhZGVycywgSSBoYXZlIGNvbmNsdWRlZCB0aGF0IGJlY2F1c2Ugb2YgdGhlIFdhdGVyZ2F0ZSBtYXR0ZXIgSSBtaWdodCBub3QgaGF2ZSB0aGUgc3VwcG9ydCBvZiB0aGUgQ29uZ3Jlc3MgdGhhdCBJIHdvdWxkIGNvbnNpZGVyIG5lY2Vzc2FyeSB0byBiYWNrIHRoZSB2ZXJ5IGRpZmZpY3VsdCBkZWNpc2lvbnMgYW5kIGNhcnJ5IG91dCB0aGUgZHV0aWVzIG9mIHRoaXMgb2ZmaWNlIGluIHRoZSB3YXkgdGhlIGludGVyZXN0cyBvZiB0aGUgTmF0aW9uIHdvdWxkIHJlcXVpcmUuPC9wPgoKPHA+SSBoYXZlIG5ldmVyIGJlZW4gYSBxdWl0dGVyLiBUbyBsZWF2ZSBvZmZpY2UgYmVmb3JlIG15IHRlcm0gaXMgY29tcGxldGVkIGlzIGFiaG9ycmVudCB0byBldmVyeSBpbnN0aW5jdCBpbiBteSBib2R5LiBCdXQgYXMgUHJlc2lkZW50LCBJIG11c3QgcHV0IHRoZSBpbnRlcmVzdCBvZiBBbWVyaWNhIGZpcnN0LiBBbWVyaWNhIG5lZWRzIGEgZnVsbC10aW1lIFByZXNpZGVudCBhbmQgYSBmdWxsLXRpbWUgQ29uZ3Jlc3MsIHBhcnRpY3VsYXJseSBhdCB0aGlzIHRpbWUgd2l0aCBwcm9ibGVtcyB3ZSBmYWNlIGF0IGhvbWUgYW5kIGFicm9hZC4gVG8gY29udGludWUgdG8gZmlnaHQgdGhyb3VnaCB0aGUgbW9udGhzIGFoZWFkIGZvciBteSBwZXJzb25hbCB2aW5kaWNhdGlvbiB3b3VsZCBhbG1vc3QgdG90YWxseSBhYnNvcmIgdGhlIHRpbWUgYW5kIGF0dGVudGlvbiBvZiBib3RoIHRoZSBQcmVzaWRlbnQgYW5kIHRoZSBDb25ncmVzcyBpbiBhIHBlcmlvZCB3aGVuIG91ciBlbnRpcmUgZm9jdXMgc2hvdWxkIGJlIG9uIHRoZSBncmVhdCBpc3N1ZXMgb2YgcGVhY2UgYWJyb2FkIGFuZCBwcm9zcGVyaXR5IHdpdGhvdXQgaW5mbGF0aW9uIGF0IGhvbWUuIFRoZXJlZm9yZSwgSSBzaGFsbCByZXNpZ24gdGhlIFByZXNpZGVuY3kgZWZmZWN0aXZlIGF0IG5vb24gdG9tb3Jyb3cuIFZpY2UgUHJlc2lkZW50IEZvcmQgd2lsbCBiZSBzd29ybiBpbiBhcyBQcmVzaWRlbnQgYXQgdGhhdCBob3VyIGluIHRoaXMgb2ZmaWNlLiDigJQgUmljaGFyZCBOaXhvbiwgWzU2XTwvcD4KCjxwPlRoZSBtb3JuaW5nIHRoYXQgaGlzIHJlc2lnbmF0aW9uIHdhcyB0byB0YWtlIGVmZmVjdCwgdGhlIFByZXNpZGVudCwgd2l0aCBNcnMuIE5peG9uIGFuZCB0aGVpciBmYW1pbHksIHNhaWQgZmFyZXdlbGwgdG8gdGhlIFdoaXRlIEhvdXNlIHN0YWZmIGluIHRoZSBFYXN0IFJvb20uWzU3XSBBIGhlbGljb3B0ZXIgY2FycmllZCB0aGVtIGZyb20gdGhlIFdoaXRlIEhvdXNlIHRvIEFuZHJld3MgQWlyIEZvcmNlIEJhc2UgaW4gTWFyeWxhbmQuIE5peG9uIGxhdGVyIHdyb3RlIHRoYXQgaGUgdGhvdWdodCwgIkFzIHRoZSBoZWxpY29wdGVyIG1vdmVkIG9uIHRvIEFuZHJld3MsIEkgZm91bmQgbXlzZWxmIHRoaW5raW5nIG5vdCBvZiB0aGUgcGFzdCwgYnV0IG9mIHRoZSBmdXR1cmUuIFdoYXQgY291bGQgSSBkbyBub3c/IiBBdCBBbmRyZXdzLCBoZSBhbmQgaGlzIGZhbWlseSBib2FyZGVkIEFpciBGb3JjZSBPbmUgdG8gRWwgVG9ybyBNYXJpbmUgQ29ycHMgQWlyIFN0YXRpb24gaW4gQ2FsaWZvcm5pYSwgYW5kIHRoZW4gd2VyZSB0cmFuc3BvcnRlZCB0byBoaXMgaG9tZSBpbiBTYW4gQ2xlbWVudGUuPC9wPgoKPGgxPlByZXNpZGVudCBGb3JkJ3MgcGFyZG9uIG9mIE5peG9uPC9oMT4KCjxwPldpdGggUHJlc2lkZW50IE5peG9uJ3MgcmVzaWduYXRpb24sIENvbmdyZXNzIGRyb3BwZWQgaXRzIGltcGVhY2htZW50IHByb2NlZWRpbmdzLiBDcmltaW5hbCBwcm9zZWN1dGlvbiB3YXMgc3RpbGwgYSBwb3NzaWJpbGl0eSBib3RoIG9uIHRoZSBmZWRlcmFsIGFuZCBzdGF0ZSBsZXZlbC5bMzddIE5peG9uIHdhcyBzdWNjZWVkZWQgYnkgVmljZSBQcmVzaWRlbnQgR2VyYWxkIEZvcmQgYXMgUHJlc2lkZW50LCB3aG8gb24gU2VwdGVtYmVyIDgsIDE5NzQsIGlzc3VlZCBhIGZ1bGwgYW5kIHVuY29uZGl0aW9uYWwgcGFyZG9uIG9mIE5peG9uLCBpbW11bml6aW5nIGhpbSBmcm9tIHByb3NlY3V0aW9uIGZvciBhbnkgY3JpbWVzIGhlIGhhZCAiY29tbWl0dGVkIG9yIG1heSBoYXZlIGNvbW1pdHRlZCBvciB0YWtlbiBwYXJ0IGluIiBhcyBwcmVzaWRlbnQuWzU4XSBJbiBhIHRlbGV2aXNlZCBicm9hZGNhc3QgdG8gdGhlIG5hdGlvbiwgRm9yZCBleHBsYWluZWQgdGhhdCBoZSBmZWx0IHRoZSBwYXJkb24gd2FzIGluIHRoZSBiZXN0IGludGVyZXN0IG9mIHRoZSBjb3VudHJ5LiBIZSBzYWlkIHRoYXQgdGhlIE5peG9uIGZhbWlseSdzIHNpdHVhdGlvbiAiaXMgYW4gQW1lcmljYW4gdHJhZ2VkeSBpbiB3aGljaCB3ZSBhbGwgaGF2ZSBwbGF5ZWQgYSBwYXJ0LiBJdCBjb3VsZCBnbyBvbiBhbmQgb24gYW5kIG9uLCBvciBzb21lb25lIG11c3Qgd3JpdGUgdGhlIGVuZCB0byBpdC4gSSBoYXZlIGNvbmNsdWRlZCB0aGF0IG9ubHkgSSBjYW4gZG8gdGhhdCwgYW5kIGlmIEkgY2FuLCBJIG11c3QuIls1OV08L3A+Cgo8cD5OaXhvbiBwcm9jbGFpbWVkIGhpcyBpbm5vY2VuY2UgdW50aWwgaGlzIGRlYXRoIGluIDE5OTQuIEluIGhpcyBvZmZpY2lhbCByZXNwb25zZSB0byB0aGUgcGFyZG9uLCBoZSBzYWlkIHRoYXQgaGUgIndhcyB3cm9uZyBpbiBub3QgYWN0aW5nIG1vcmUgZGVjaXNpdmVseSBhbmQgbW9yZSBmb3J0aHJpZ2h0bHkgaW4gZGVhbGluZyB3aXRoIFdhdGVyZ2F0ZSwgcGFydGljdWxhcmx5IHdoZW4gaXQgcmVhY2hlZCB0aGUgc3RhZ2Ugb2YganVkaWNpYWwgcHJvY2VlZGluZ3MgYW5kIGdyZXcgZnJvbSBhIHBvbGl0aWNhbCBzY2FuZGFsIGludG8gYSBuYXRpb25hbCB0cmFnZWR5Ii5bNjBdPC9wPgoKPHA+U29tZSBjb21tZW50YXRvcnMgaGF2ZSBhcmd1ZWQgdGhhdCBwYXJkb25pbmcgTml4b24gY29udHJpYnV0ZWQgdG8gUHJlc2lkZW50IEZvcmQncyBsb3NzIG9mIHRoZSBwcmVzaWRlbnRpYWwgZWxlY3Rpb24gb2YgMTk3Ni5bNjFdIEFsbGVnYXRpb25zIG9mIGEgc2VjcmV0IGRlYWwgbWFkZSB3aXRoIEZvcmQsIHByb21pc2luZyBhIHBhcmRvbiBpbiByZXR1cm4gZm9yIE5peG9uJ3MgcmVzaWduYXRpb24sIGxlZCBGb3JkIHRvIHRlc3RpZnkgYmVmb3JlIHRoZSBIb3VzZSBKdWRpY2lhcnkgQ29tbWl0dGVlIG9uIE9jdG9iZXIgMTcsIDE5NzQuWzYyXVs2M108L3A+Cgo8cD5JbiBoaXMgYXV0b2Jpb2dyYXBoeSBBIFRpbWUgdG8gSGVhbCwgRm9yZCB3cm90ZSBhYm91dCBhIG1lZXRpbmcgaGUgaGFkIHdpdGggTml4b24ncyBDaGllZiBvZiBTdGFmZiwgQWxleGFuZGVyIEhhaWcuIEhhaWcgd2FzIGV4cGxhaW5pbmcgd2hhdCBoZSBhbmQgTml4b24ncyBzdGFmZiB0aG91Z2h0IHdlcmUgTml4b24ncyBvbmx5IG9wdGlvbnMuIEhlIGNvdWxkIHRyeSB0byByaWRlIG91dCB0aGUgaW1wZWFjaG1lbnQgYW5kIGZpZ2h0IGFnYWluc3QgY29udmljdGlvbiBpbiB0aGUgU2VuYXRlIGFsbCB0aGUgd2F5LCBvciBoZSBjb3VsZCByZXNpZ24uIEhpcyBvcHRpb25zIGZvciByZXNpZ25pbmcgd2VyZSB0byBkZWxheSBoaXMgcmVzaWduYXRpb24gdW50aWwgZnVydGhlciBhbG9uZyBpbiB0aGUgaW1wZWFjaG1lbnQgcHJvY2VzcyB0byB0cnkgYW5kIHNldHRsZSBmb3IgYSBjZW5zdXJlIHZvdGUgaW4gQ29uZ3Jlc3MsIG9yIHRvIHBhcmRvbiBoaW1zZWxmIGFuZCB0aGVuIHJlc2lnbi4gSGFpZyB0b2xkIEZvcmQgdGhhdCBzb21lIG9mIE5peG9uJ3Mgc3RhZmYgc3VnZ2VzdGVkIHRoYXQgTml4b24gY291bGQgYWdyZWUgdG8gcmVzaWduIGluIHJldHVybiBmb3IgYW4gYWdyZWVtZW50IHRoYXQgRm9yZCB3b3VsZCBwYXJkb24gaGltLjwvcD4KCjxwPkhhaWcgZW1waGFzaXplZCB0aGF0IHRoZXNlIHdlcmVuJ3QgaGlzIHN1Z2dlc3Rpb25zLiBIZSBkaWRuJ3QgaWRlbnRpZnkgdGhlIHN0YWZmIG1lbWJlcnMgYW5kIGhlIG1hZGUgaXQgdmVyeSBjbGVhciB0aGF0IGhlIHdhc24ndCByZWNvbW1lbmRpbmcgYW55IG9uZSBvcHRpb24gb3ZlciBhbm90aGVyLiBXaGF0IGhlIHdhbnRlZCB0byBrbm93IHdhcyB3aGV0aGVyIG9yIG5vdCBteSBvdmVyYWxsIGFzc2Vzc21lbnQgb2YgdGhlIHNpdHVhdGlvbiBhZ3JlZWQgd2l0aCBoaXMuW2VtcGhhc2lzIGluIG9yaWdpbmFsXS4uLiBOZXh0IGhlIGFza2VkIGlmIEkgaGFkIGFueSBzdWdnZXN0aW9ucyBhcyB0byBjb3Vyc2VzIG9mIGFjdGlvbnMgZm9yIHRoZSBQcmVzaWRlbnQuIEkgZGlkbid0IHRoaW5rIGl0IHdvdWxkIGJlIHByb3BlciBmb3IgbWUgdG8gbWFrZSBhbnkgcmVjb21tZW5kYXRpb25zIGF0IGFsbCwgYW5kIEkgdG9sZCBoaW0gc28uIOKAlCBHZXJhbGQgRm9yZCwgQSBUaW1lIDwvcD50byBIZWFsWzY0XQoKPGgxPkFmdGVybWF0aDwvaDE+Cgo8aDI+RmluYWwgbGVnYWwgYWN0aW9ucyBhbmQgZWZmZWN0IG9uIHRoZSBsYXcgcHJvZmVzc2lvbjwvaDI+Cgo8cD5DaGFybGVzIENvbHNvbiBwbGVhZGVkIGd1aWx0eSB0byBjaGFyZ2VzIGNvbmNlcm5pbmcgdGhlIERhbmllbCBFbGxzYmVyZyBjYXNlOyBpbiBleGNoYW5nZSwgdGhlIGluZGljdG1lbnQgYWdhaW5zdCBoaW0gZm9yIGNvdmVyaW5nIHVwIHRoZSBhY3Rpdml0aWVzIG9mIHRoZSBDb21taXR0ZWUgdG8gUmUtZWxlY3QgdGhlIFByZXNpZGVudCB3YXMgZHJvcHBlZCwgYXMgaXQgd2FzIGFnYWluc3QgU3RyYWNoYW4uIFRoZSByZW1haW5pbmcgZml2ZSBtZW1iZXJzIG9mIHRoZSBXYXRlcmdhdGUgU2V2ZW4gaW5kaWN0ZWQgaW4gTWFyY2ggd2VudCBvbiB0cmlhbCBpbiBPY3RvYmVyIDE5NzQuIE9uIEphbnVhcnkgMSwgMTk3NSwgYWxsIGJ1dCBQYXJraW5zb24gd2VyZSBmb3VuZCBndWlsdHkuIEluIDE5NzYsIHRoZSBVLlMuIENvdXJ0IG9mIEFwcGVhbHMgb3JkZXJlZCBhIG5ldyB0cmlhbCBmb3IgTWFyZGlhbjsgc3Vic2VxdWVudGx5LCBhbGwgY2hhcmdlcyBhZ2FpbnN0IGhpbSB3ZXJlIGRyb3BwZWQuIEhhbGRlbWFuLCBFaHJsaWNobWFuLCBhbmQgTWl0Y2hlbGwgZXhoYXVzdGVkIHRoZWlyIGFwcGVhbHMgaW4gMTk3Ny4gRWhybGljaG1hbiBlbnRlcmVkIHByaXNvbiBpbiAxOTc2LCBmb2xsb3dlZCBieSB0aGUgb3RoZXIgdHdvIGluIDE5NzcuIFNpbmNlIE5peG9uIGFuZCBtYW55IHNlbmlvciBvZmZpY2lhbHMgaW52b2x2ZWQgaW4gV2F0ZXJnYXRlIHdlcmUgbGF3eWVycywgdGhlIHNjYW5kYWwgc2V2ZXJlbHkgdGFybmlzaGVkIHRoZSBwdWJsaWMgaW1hZ2Ugb2YgdGhlIGxlZ2FsIHByb2Zlc3Npb24uWzY1XVs2Nl1bNjddPC9wPgoKPHA+VGhlIFdhdGVyZ2F0ZSBzY2FuZGFsIHJlc3VsdGVkIGluIDY5IGdvdmVybm1lbnQgb2ZmaWNpYWxzIGJlaW5nIGNoYXJnZWQgYW5kIDQ4IGJlaW5nIGZvdW5kIGd1aWx0eSwgaW5jbHVkaW5nOlszXTwvcD4KCjx1bD4KICAgIDxsaT5Kb2huIE4uIE1pdGNoZWxsLCBBdHRvcm5leSBHZW5lcmFsIG9mIHRoZSBVbml0ZWQgU3RhdGVzLCBjb252aWN0ZWQgb2YgcGVyanVyeS4gU2VydmVkIDE5IG1vbnRocyBvZiBhIG9uZS0gdG8gZm91ci15ZWFyIHNlbnRlbmNlLls2OF08L2xpPgogICAgPGxpPlJpY2hhcmQgS2xlaW5kaWVuc3QsIEF0dG9ybmV5IEdlbmVyYWwsIGNvbnZpY3RlZCBvZiAicmVmdXNpbmcgdG8gYW5zd2VyIHF1ZXN0aW9ucyIgZ2l2ZW4gb25lIG1vbnRoIGluIGphaWwuWzY5XTwvbGk+CiAgICA8bGk+SmViIFN0dWFydCBNYWdydWRlciwgSGVhZCBvZiBDb21taXR0ZWUgdG8gUmUtZWxlY3QgdGhlIFByZXNpZGVudCwgcGxlYWRlZCBndWlsdHkgdG8gb25lIGNvdW50IG9mIGNvbnNwaXJhY3ksIEF1Z3VzdCAxOTczWzcwXTwvbGk+CiAgICA8bGk+RnJlZGVyaWNrIEMuIExhUnVlLCBBZHZpc29yIHRvIEpvaG4gTWl0Y2hlbGwsIGNvbnZpY3RlZCBvZiBvYnN0cnVjdGlvbiBvZiBqdXN0aWNlLls3MF08L2xpPgogICAgPGxpPkguIFIuIEhhbGRlbWFuLCBDaGllZiBvZiBTdGFmZiBmb3IgTml4b24sIGNvbnZpY3RlZCBvZiBjb25zcGlyYWN5LCBvYnN0cnVjdGlvbiBvZiBqdXN0aWNlLCBhbmQgcGVyanVyeS4gU2VydmVkIDE4IG1vbnRocyBpbiBwcmlzb24uWzcxXTwvbGk+CiAgICA8bGk+Sm9obiBFaHJsaWNobWFuLCBDb3Vuc2VsIHRvIE5peG9uLCBjb252aWN0ZWQgb2YgY29uc3BpcmFjeSwgb2JzdHJ1Y3Rpb24gb2YganVzdGljZSwgYW5kIHBlcmp1cnkuIFNlcnZlZCAxOCBtb250aHMgaW4gcHJpc29uLls3Ml08L2xpPgogICAgPGxpPkVnaWwgS3JvZ2gsIGFpZGUgdG8gSm9obiBFaHJsaWNobWFuLCBzZW50ZW5jZWQgdG8gc2l4IG1vbnRocy5bNzBdPC9saT4KICAgIDxsaT5Kb2huIFcuIERlYW4gSUlJLCBjb3Vuc2VsIHRvIE5peG9uLCBjb252aWN0ZWQgb2Ygb2JzdHJ1Y3Rpb24gb2YganVzdGljZSwgbGF0ZXIgcmVkdWNlZCB0byBmZWxvbnkgb2ZmZW5zZXMgYW5kIHNlbnRlbmNlZCB0byB0aW1lIGFscmVhZHkgc2VydmVkLCB3aGljaCB0b3RhbGVkIDQgbW9udGhzLls3MF08L2xpPgogICAgPGxpPkR3aWdodCBMLiBDaGFwaW4sIGRlcHV0eSBhc3Npc3RhbnQgdG8gTml4b24sIGNvbnZpY3RlZCBvZiBwZXJqdXJ5Lls3MF08L2xpPgogICAgPGxpPkhlcmJlcnQgVy4gS2FsbWJhY2gsIHBlcnNvbmFsIGF0dG9ybmV5IHRvIE5peG9uLCBjb252aWN0ZWQgb2YgaWxsZWdhbCBjYW1wYWlnbmluZy5bNzBdPC9saT4KICAgIDxsaT5DaGFybGVzIFcuIENvbHNvbiwgc3BlY2lhbCBjb3Vuc2VsIHRvIE5peG9uLCBjb252aWN0ZWQgb2Ygb2JzdHJ1Y3Rpb24gb2YganVzdGljZS4gU2VydmVkIDcgbW9udGhzIGluIEZlZGVyYWwgTWF4d2VsbCBQcmlzb24uWzY5XTwvbGk+CiAgICA8bGk+SGVyYmVydCBMLiBQb3J0ZXIsIGFpZGUgdG8gdGhlIENvbW1pdHRlZSB0byBSZS1lbGVjdCB0aGUgUHJlc2lkZW50LiBDb252aWN0ZWQgb2YgcGVyanVyeS5bNzBdCiAgICAuLi4gYW5kIHRoZSBhY3R1YWwgV2F0ZXJnYXRlICJCdXJnbGFyeSIgdGVhbS4uLjwvbGk+CiAgICA8bGk+Ry4gR29yZG9uIExpZGR5LCBTcGVjaWFsIEludmVzdGlnYXRpb25zIEdyb3VwLCBjb252aWN0ZWQgb2YgYnVyZ2xhcnksIG9yaWdpbmFsIHNlbnRlbmNlIG9mIHVwIHRvIDIwIHllYXJzIGluIHByaXNvbi5bNzBdWzczXSBTZXJ2ZWQgNMK9IHllYXJzIGluIGZlZGVyYWwgcHJpc29uLls3NF08L2xpPgogICAgPGxpPkUuIEhvd2FyZCBIdW50LCBTZWN1cml0eSBjb25zdWx0YW50LCBjb252aWN0ZWQgb2YgYnVyZ2xhcnksIG9yaWdpbmFsIHNlbnRlbmNlIG9mIHVwIHRvIDM1IHllYXJzIGluIHByaXNvbi5bNzBdWzczXSBTZXJ2ZWQgMzMgbW9udGhzIGluIHByaXNvbi5bNzVdPC9saT4KICAgIDxsaT5KYW1lcyBXLiBNY0NvcmQgSnIuLCBjb252aWN0ZWQgb2Ygc2l4IGNoYXJnZXMgb2YgYnVyZ2xhcnksIGNvbnNwaXJhY3kgYW5kIHdpcmV0YXBwaW5nLls3MF0gU2VydmVkIDIgbW9udGhzIGluIHByaXNvbi5bNzRdPC9saT4KICAgIDxsaT5WaXJnaWxpbyBHb256YWxleiwgY29udmljdGVkIG9mIGJ1cmdsYXJ5LCBvcmlnaW5hbCBzZW50ZW5jZSBvZiB1cCB0byA0MCB5ZWFycyBpbiBwcmlzb24uWzcwXVs3M10gU2VydmVkIDEzIG1vbnRocyBpbiBwcmlzb24uWzc0XTwvbGk+CiAgICA8bGk+QmVybmFyZCBCYXJrZXIsIGNvbnZpY3RlZCBvZiBidXJnbGFyeSwgb3JpZ2luYWwgc2VudGVuY2Ugb2YgdXAgdG8gNDAgeWVhcnMgaW4gcHJpc29uLls3MF1bNzNdIFNlcnZlZCAxOCBtb250aHMgaW4gcHJpc29uLls3Nl08L2xpPgogICAgPGxpPkV1Z2VuaW8gTWFydGluZXosIGNvbnZpY3RlZCBvZiBidXJnbGFyeSwgb3JpZ2luYWwgc2VudGVuY2Ugb2YgdXAgdG8gNDAgeWVhcnMgaW4gcHJpc29uLls3MF1bNzNdIFNlcnZlZCAxNSBtb250aHMgaW4gcHJpc29uLls3N108L2xpPgogICAgPGxpPkZyYW5rIFN0dXJnaXMsIGNvbnZpY3RlZCBvZiBidXJnbGFyeSwgb3JpZ2luYWwgc2VudGVuY2Ugb2YgdXAgdG8gNDAgeWVhcnMgaW4gcHJpc29uLls3MF1bNzNdIFNlcnZlZCAxMCBtb250aHMgaW4gcHJpc29uLls3N108L2xpPgo8L3VsPgoKPHA+VG8gZGVmdXNlIHB1YmxpYyBkZW1hbmQgZm9yIGRpcmVjdCBmZWRlcmFsIHJlZ3VsYXRpb24gb2YgbGF3eWVycyAoYXMgb3Bwb3NlZCB0byBsZWF2aW5nIGl0IGluIHRoZSBoYW5kcyBvZiBzdGF0ZSBiYXIgYXNzb2NpYXRpb25zIG9yIGNvdXJ0cyksIHRoZSBBbWVyaWNhbiBCYXIgQXNzb2NpYXRpb24gKEFCQSkgbGF1bmNoZWQgdHdvIG1ham9yIHJlZm9ybXMuIEZpcnN0LCB0aGUgQUJBIGRlY2lkZWQgdGhhdCBpdHMgZXhpc3RpbmcgTW9kZWwgQ29kZSBvZiBQcm9mZXNzaW9uYWwgUmVzcG9uc2liaWxpdHkgKHByb211bGdhdGVkIDE5NjkpIHdhcyBhIGZhaWx1cmUuIEluIDE5ODMgaXQgcmVwbGFjZWQgaXQgd2l0aCB0aGUgTW9kZWwgUnVsZXMgb2YgUHJvZmVzc2lvbmFsIENvbmR1Y3QuWzc4XSBUaGUgTVJQQyBoYXZlIGJlZW4gYWRvcHRlZCBpbiBwYXJ0IG9yIGluIHdob2xlIGJ5IDQ5IHN0YXRlcyAoYW5kIGlzIGJlaW5nIGNvbnNpZGVyZWQgYnkgdGhlIGxhc3Qgb25lLCBDYWxpZm9ybmlhKS4gSXRzIHByZWFtYmxlIGNvbnRhaW5zIGFuIGVtcGhhdGljIHJlbWluZGVyIHRoYXQgdGhlIGxlZ2FsIHByb2Zlc3Npb24gY2FuIHJlbWFpbiBzZWxmLWdvdmVybmluZyBvbmx5IGlmIGxhd3llcnMgYmVoYXZlIHByb3Blcmx5LiBTZWNvbmQsIHRoZSBBQkEgcHJvbXVsZ2F0ZWQgYSByZXF1aXJlbWVudCB0aGF0IGxhdyBzdHVkZW50cyBhdCBBQkEtYXBwcm92ZWQgbGF3IHNjaG9vbHMgdGFrZSBhIGNvdXJzZSBpbiBwcm9mZXNzaW9uYWwgcmVzcG9uc2liaWxpdHkgKHdoaWNoIG1lYW5zIHRoZXkgbXVzdCBzdHVkeSB0aGUgTVJQQykuIFRoZSByZXF1aXJlbWVudCByZW1haW5zIGluIGVmZmVjdC48L3A+Cgo8cD5PbiBKdW5lIDI0IGFuZCAyNSwgMTk3NSwgTml4b24gZ2F2ZSBzZWNyZXQgdGVzdGltb255IHRvIGEgZ3JhbmQganVyeS4gQWNjb3JkaW5nIHRvIG5ld3MgcmVwb3J0cyBhdCB0aGUgdGltZSwgTml4b24gYW5zd2VyZWQgcXVlc3Rpb25zIGFib3V0IHRoZSAxOC0xLzItbWludXRlIHRhcGUgZ2FwLCBhbHRlcmluZyBXaGl0ZSBIb3VzZSB0YXBlIHRyYW5zY3JpcHRzIHR1cm5lZCBvdmVyIHRvIHRoZSBIb3VzZSBKdWRpY2lhcnkgQ29tbWl0dGVlLCB1c2luZyB0aGUgSW50ZXJuYWwgUmV2ZW51ZSBTZXJ2aWNlIHRvIGhhcmFzcyBwb2xpdGljYWwgZW5lbWllcywgYW5kIGEgJDEwMCwwMDAgY29udHJpYnV0aW9uIGZyb20gYmlsbGlvbmFpcmUgSG93YXJkIEh1Z2hlcy4gQWlkZWQgYnkgdGhlIFB1YmxpYyBDaXRpemVuIExpdGlnYXRpb24gR3JvdXAsIHRoZSBoaXN0b3JpYW4gU3RhbmxleSBLdXRsZXIsIHdobyBoYXMgd3JpdHRlbiBzZXZlcmFsIGJvb2tzIGFib3V0IE5peG9uIGFuZCBXYXRlcmdhdGUgYW5kIGhhZCBzdWNjZXNzZnVsbHkgc3VlZCBmb3IgdGhlIDE5OTYgcHVibGljIHJlbGVhc2Ugb2YgdGhlIE5peG9uIFdoaXRlIEhvdXNlIHRhcGVzLFs3OV0gc3VlZCBmb3IgcmVsZWFzZSBvZiB0aGUgdHJhbnNjcmlwdHMgb2YgdGhlIE5peG9uIGdyYW5kIGp1cnkgdGVzdGltb255Lls4MF0gUHJlc2lkZW50IE9iYW1hJ3MganVzdGljZSBkZXBhcnRtZW50IG9wcG9zZWQgdGhlIHJlbGVhc2Ugb2YgdGhlIHRyYW5zY3JpcHRzIG9uIHByaXZhY3kgZ3JvdW5kcy4gT24gSnVseSAyOSwgMjAxMSwgVS5TLiBEaXN0cmljdCBKdWRnZSBSb3ljZSBMYW1iZXJ0aCBncmFudGVkIEt1dGxlcidzIHJlcXVlc3QgYXMgaGlzdG9yaWNhbCBpbnRlcmVzdHMgdHJ1bXBlZCBwcml2YWN5LCBlc3BlY2lhbGx5IGNvbnNpZGVyaW5nIHRoYXQgTml4b24gYW5kIG90aGVyIGtleSBmaWd1cmVzIHdlcmUgZGVjZWFzZWQgYW5kIG1vc3Qgb2YgdGhlIHN1cnZpdmluZyBmaWd1cmVzIGhhZCB0ZXN0aWZpZWQgdW5kZXIgb2F0aCwgaGF2ZSBiZWVuIHdyaXR0ZW4gYWJvdXQsIG9yIHdlcmUgaW50ZXJ2aWV3ZWQuIFRoZSB0cmFuc2NyaXB0cyB3ZXJlIG5vdCBpbW1lZGlhdGVseSByZWxlYXNlZCBwZW5kaW5nIHRoZSBnb3Zlcm5tZW50J3MgZGVjaXNpb24gb24gd2hldGhlciB0byBhcHBlYWwuWzgwXSBUaGV5IHdlcmUgcmVsZWFzZWQgaW4gdGhlaXIgZW50aXJldHkgb24gTm92ZW1iZXIgMTAsIDIwMTEsIGFsdGhvdWdoIHRoZSBuYW1lcyBvZiBwZW9wbGUgc3RpbGwgYWxpdmUgd2VyZSByZWRhY3RlZC5bODFdPC9wPgoKPHA+VGV4YXMgQSZNIFVuaXZlcnNpdHktQ2VudHJhbCBUZXhhcyBwcm9mZXNzb3IgTHVrZSBOaWNodGVyIHdyb3RlIHRoZSBjaGllZiBqdWRnZSBvZiB0aGUgZmVkZXJhbCBjb3VydCBpbiBXYXNoaW5ndG9uIHRvIHJlbGVhc2UgaHVuZHJlZHMgb2YgcGFnZXMgb2Ygc2VhbGVkIHJlY29yZHMgb2YgdGhlIFdhdGVyZ2F0ZSBTZXZlbi4gSW4gSnVuZSAyMDEyIFRoZSBVLlMuIERlcGFydG1lbnQgb2YgSnVzdGljZSB3cm90ZSB0aGUgY291cnQgdGhhdCBpdCB3b3VsZCBub3Qgb2JqZWN0IHRvIHRoZWlyIHJlbGVhc2Ugd2l0aCBzb21lIGV4Y2VwdGlvbnMuWzgyXTwvcD4KCjxwPk9uIE5vdmVtYmVyIDIsIDIwMTIsIFdhdGVyZ2F0ZSBUcmlhbCBSZWNvcmRzIGZvciBHLiBHb3Jkb24gTGlkZHkgYW5kIEphbWVzIE1jQ29yZCB3ZXJlIG9yZGVyZWQgdW5zZWFsZWQgYnkgRmVkZXJhbCBKdWRnZSBSb3ljZSBMYW1iZXJ0aC5bODNdPC9wPgoKPGgyPlBvbGl0aWNhbCBhbmQgY3VsdHVyYWwgcmV2ZXJiZXJhdGlvbnM8L2gyPgoKPHA+QWNjb3JkaW5nIHRvIFRob21hcyBKLiBKb2huc29uLCBhIHByb2Zlc3NvciBvZiBqb3VybmFsaXNtIGF0IFVuaXZlcnNpdHkgb2YgVGV4YXMgYXQgQXVzdGluLCBTZWNyZXRhcnkgb2YgU3RhdGUgSGVucnkgS2lzc2luZ2VyIHByZWRpY3RlZCBkdXJpbmcgTml4b24ncyBmaW5hbCBkYXlzIHRoYXQgaGlzdG9yeSB3b3VsZCByZW1lbWJlciBOaXhvbiBhcyBhIGdyZWF0IHByZXNpZGVudCBhbmQgdGhhdCBXYXRlcmdhdGUgd291bGQgYmUgcmVsZWdhdGVkIHRvIGEgIm1pbm9yIGZvb3Rub3RlIi5bODRdPC9wPgoKPHA+V2hlbiBDb25ncmVzcyBpbnZlc3RpZ2F0ZWQgdGhlIHNjb3BlIG9mIHRoZSBwcmVzaWRlbnQncyBsZWdhbCBwb3dlcnMsIGl0IGJlbGF0ZWRseSBmb3VuZCB0aGF0IHRoZSBVbml0ZWQgU3RhdGVzIGhhZCBiZWVuIGRlY2xhcmVkIGJ5IHByZXNpZGVudGlhbCBhZG1pbmlzdHJhdGlvbnMgdG8gYmUgaW4gYSBjb250aW51b3VzIG9wZW4tZW5kZWQgc3RhdGUgb2YgZW1lcmdlbmN5IHNpbmNlIDE5NTAuIENvbmdyZXNzIGVuYWN0ZWQgdGhlIE5hdGlvbmFsIEVtZXJnZW5jaWVzIEFjdCBpbiAxOTc2IHRvIHJlZ3VsYXRlIHN1Y2ggZGVjbGFyYXRpb25zLjwvcD4KCjxwPlRoZSBXYXRlcmdhdGUgc2NhbmRhbCBsZWZ0IHN1Y2ggYW4gaW1wcmVzc2lvbiBvbiB0aGUgbmF0aW9uYWwgYW5kIGludGVybmF0aW9uYWwgY29uc2Npb3VzbmVzcyB0aGF0IG1hbnkgc2NhbmRhbHMgc2luY2UgdGhlbiBoYXZlIGJlZW4gbGFiZWxlZCB3aXRoIHRoZSBzdWZmaXggIi1nYXRlIi48L3A+Cgo8cD5UaGUgcmFtaWZpY2F0aW9ucyBmb3IgdGhlIE5vdmVtYmVyIDE5NzQgU2VuYXRlIGFuZCBIb3VzZSBlbGVjdGlvbnMsIHdoaWNoIHRvb2sgcGxhY2UgdGhyZWUgbW9udGhzIGFmdGVyIE5peG9uJ3MgcmVzaWduYXRpb24sIHdlcmUgc2lnbmlmaWNhbnQsIHdpdGggdGhlIERlbW9jcmF0cyBnYWluaW5nIGZpdmUgc2VhdHMgaW4gdGhlIFNlbmF0ZSBhbmQgZm9ydHktbmluZSBpbiB0aGUgSG91c2UgKHRoZSBuZXdjb21lcnMgd2VyZSBuaWNrbmFtZWQgIldhdGVyZ2F0ZSBCYWJpZXMiKS4gV2F0ZXJnYXRlIGxlZCBDb25ncmVzcyB0byBwYXNzIGxlZ2lzbGF0aW9uIHRoYXQgY2hhbmdlZCBjYW1wYWlnbiBmaW5hbmNpbmcsIHRvIGFtZW5kIHRoZSBGcmVlZG9tIG9mIEluZm9ybWF0aW9uIEFjdCwgYXMgd2VsbCBhcyB0byByZXF1aXJlIGZpbmFuY2lhbCBkaXNjbG9zdXJlcyBieSBrZXkgZ292ZXJubWVudCBvZmZpY2lhbHMgKHZpYSB0aGUgRXRoaWNzIGluIEdvdmVybm1lbnQgQWN0KS4gT3RoZXIgdHlwZXMgb2YgZGlzY2xvc3VyZXMsIHN1Y2ggYXMgcmVsZWFzaW5nIHJlY2VudCBpbmNvbWUgdGF4IGZvcm1zLCBiZWNhbWUgZXhwZWN0ZWQgYWxiZWl0IG5vdCBsZWdhbGx5IHJlcXVpcmVkLiBQcmVzaWRlbnRzIHNpbmNlIEZyYW5rbGluIEQuIFJvb3NldmVsdCBoYWQgcmVjb3JkZWQgbWFueSBvZiB0aGVpciBjb252ZXJzYXRpb25zIGJ1dCB0aGUgcHJhY3RpY2UgcHVycG9ydGVkbHkgZW5kZWQgYWZ0ZXIgV2F0ZXJnYXRlLjwvcD4KCjxwPkZvcmQncyBwYXJkb24gb2YgTml4b24gcGxheWVkIGEgbWFqb3Igcm9sZSBpbiBoaXMgZGVmZWF0IGluIHRoZSAxOTc2IHByZXNpZGVudGlhbCBlbGVjdGlvbiBhZ2FpbnN0IEppbW15IENhcnRlci5bNjFdPC9wPgoKPHA+SW4gMTk3NywgTml4b24gYXJyYW5nZWQgYW4gaW50ZXJ2aWV3IHdpdGggQnJpdGlzaCBqb3VybmFsaXN0IERhdmlkIEZyb3N0IGluIHRoZSBob3BlcyBvZiBpbXByb3ZpbmcgaGlzIGxlZ2FjeS4gQmFzZWQgb24gYSBwcmV2aW91cyBpbnRlcnZpZXcgaW4gMTk2OCxbODVdIGhlIGhhZCBhc3N1bWVkIEZyb3N0IHdvdWxkIGJlIGFuIGVhc3kgaW50ZXJ2aWV3ZXIgYW5kIHdhcyB0YWtlbiBhYmFjayBieSBGcm9zdCdzIGluY2lzaXZlIHF1ZXN0aW9ucy4gVGhlIGludGVydmlldyBkaXNwbGF5ZWQgdGhlIGVudGlyZSBzY2FuZGFsIHRvIHRoZSBBbWVyaWNhbiBwZW9wbGUsIGV2ZW4gZ2V0dGluZyBhbiBhcG9sb2d5IGZyb20gTml4b24sIGJ1dCBoaXMgbGVnYWN5IHJlbWFpbmVkIHRhcm5pc2hlZC5bODZdPC9wPgoKPHA+SW4gMjAxMCwgQ29uZ3Jlc3NtYW4gUm9uIFBhdWwgcXVlc3Rpb25lZCB3aGV0aGVyIHRoZSBGZWRlcmFsIFJlc2VydmUgQmFuayBoYWQgYmVlbiB1c2VkIHRvIGZ1bm5lbCBpbGxlZ2FsIG1vbmV5IGR1cmluZyBXYXRlcmdhdGUgYW5kIG90aGVyIHNjYW5kYWxzLiBUaGlzIGxlZCBIb3VzZSBGaW5hbmNpYWwgU2VydmljZXMgQ29tbWl0dGVlIENoYWlybWFuIEJhcm5leSBGcmFuayB0byBhc2sgdGhlIGFnZW5jeSB0byBpbnZlc3RpZ2F0ZSB0aGUgY2hhcmdlcy4gSW4gQXByaWwgMjAxMiwgdGhlIEZlZGVyYWwgUmVzZXJ2ZSBiYW5rIGluc3BlY3RvciBnZW5lcmFsIHJlbGVhc2VkIGEgcmVwb3J0IHN0YXRpbmcgIndlIGRpZCBub3QgZmluZCBhbnkgZXZpZGVuY2Ugb2YgdW5kdWUgcG9saXRpY2FsIGludGVyZmVyZW5jZSB3aXRoIG9yIGltcHJvcGVyIGFjdGlvbnMgYnkgRmVkZXJhbCBSZXNlcnZlIG9mZmljaWFscyByZWxhdGVkIHRvIHRoZSBjYXNoIGZvdW5kIG9uIHRoZSBXYXRlcmdhdGUgYnVyZ2xhcnMiLls4N108L3A+Cgo8cD5JbiB0aGUgYWZ0ZXJtYXRoIG9mIFdhdGVyZ2F0ZSwgImZvbGxvdyB0aGUgbW9uZXkiIGJlY2FtZSBwYXJ0IG9mIHRoZSBBbWVyaWNhbiBsZXhpY29uIGFuZCBpcyB3aWRlbHkgYmVsaWV2ZWQgdG8gaGF2ZSBiZWVuIHV0dGVyZWQgYnkgTWFyayBGZWx0IHRvIFdvb2R3YXJkIGFuZCBCZXJuc3RlaW4uIFRoZSBwaHJhc2Ugd2FzIG5ldmVyIHVzZWQgaW4gdGhlIDE5NzQgYm9vayBBbGwgVGhlIFByZXNpZGVudCdzIE1lbiBhbmQgZGlkIG5vdCBiZWNvbWUgYXNzb2NpYXRlZCB3aXRoIGl0IHVudGlsIHRoZSBtb3ZpZSBvZiB0aGUgc2FtZSBuYW1lIHdhcyByZWxlYXNlZCBpbiAxOTc2Lls4OF08L3A+Cgo8aDE+UHVycG9zZSBvZiB0aGUgYnJlYWstaW48L2gxPgoKPHA+RGVzcGl0ZSB0aGUgZW5vcm1vdXMgaW1wYWN0IG9mIHRoZSBXYXRlcmdhdGUgc2NhbmRhbCwgdGhlIGFjdHVhbCBwdXJwb3NlIG9mIHRoZSBicmVhay1pbiBvZiB0aGUgRE5DIG9mZmljZXMgaGFzIG5ldmVyIGJlZW4gY29uY2x1c2l2ZWx5IGVzdGFibGlzaGVkLCB0aG91Z2ggcmVjb3JkcyBmcm9tIHRoZSBVbml0ZWQgU3RhdGVzIHYuIExpZGR5IHRyaWFsIHdoaWNoIHdlcmUgbWFkZSBwdWJsaWMgaW4gMjAxMyBzaG93ZWQgdGhhdCBmb3VyIG9mIHRoZSBmaXZlIGJ1cmdsYXJzIHRlc3RpZmllZCB0aGF0IHRoZXkgd2VyZSB0b2xkIHRvIHRha2UgcGFydCBpbiB0aGUgb3BlcmF0aW9uIHdpdGggdGhlIGhvcGVzIG9mIGZpbmRpbmcgZXZpZGVuY2UgbGlua2luZyBDdWJhbiBmdW5kaW5nIHRvIERlbW9jcmF0aWMgY2FtcGFpZ25zLls4OV0gVGhlIGxpa2VsaWVzdCBoeXBvdGhlc2lzIHN1Z2dlc3RzIHRoYXQgdGhlIHRhcmdldCBvZiB0aGUgYnJlYWstaW4gd2FzIHRoZSBvZmZpY2VzIG9mIExhcnJ5IE8nQnJpZW4sIHRoZSBETkMgQ2hhaXJtYW4uWzkwXSBIb3dldmVyLCBPIEJyaWVuJ3MgbmFtZSB3YXMgbm90IG9uIEFsZnJlZCBDLiBCYWxkd2luIElJSSdzIGxpc3Qgb2YgdGFyZ2V0cyB0aGF0IHdhcyByZWxlYXNlZCBpbiAyMDEzLls5MV0gQW1vbmcgdGhvc2UgbGlzdGVkIHdlcmUgc2VuaW9yIEROQyBvZmZpY2lhbCBSLiBTcGVuY2VyIE9saXZlciwgT2xpdmVyJ3Mgc2VjcmV0YXJ5IElkYSAiTWF4aW5lIiBXZWxscywgY28td29ya2VyIFJvYmVydCBBbGxlbiBhbmQgc2VjcmV0YXJ5IEJhcmJhcmEgS2VubmVkeS5bODldIEJhc2VkIG9uIHRoZXNlIHJldmVsYXRpb25zLCBUZXhhcyBBJk0gaGlzdG9yeSBwcm9mZXNzb3IgTHVrZSBOaWNodGVyLCB3aG8gaGFkIHN1Y2Nlc3NmdWxseSBwZXRpdGlvbmVkIGZvciB0aGUgcmVsZWFzZSBvZiB0aGUgaW5mb3JtYXRpb24sWzkyXSBhcmd1ZWQgdGhhdCBXb29kd2FyZCBhbmQgQmVybnN0ZWluIHdlcmUgaW5jb3JyZWN0IGluIGNvbmNsdWRpbmcsIGJhc2VkIGxhcmdlbHkgb24gV2F0ZXJnYXRlIGJ1cmdsYXIgSmFtZXMgTWNDb3JkJ3Mgd29yZCwgdGhhdCB0aGUgcHVycG9zZSBvZiB0aGUgYnJlYWstaW4gd2FzIHRvIGJ1ZyBPJ0JyaWVuJ3MgcGhvbmUgdG8gZ2F0aGVyIHBvbGl0aWNhbCBhbmQgZmluYW5jaWFsIGludGVsbGlnZW5jZSBvbiB0aGUgRGVtb2NyYXRzLls5MV0gSW5zdGVhZCwgTmljaHRlciBzaWRlZCB3aXRoIGxhdGUgTmV3IFlvcmsgVGltZXMgam91cm5hbGlzdCBKLiBBbnRob255IEx1a2FzJyBjb25jbHVzaW9uIHRoYXQgaXRzIHB1cnBvc2Ugd2FzIHRvIGZpbmQgZXZpZGVuY2UgbGlua2luZyB0aGUgRGVtb2NyYXRzIHRvIHByb3N0aXR1dGlvbiwgYXMgT2xpdmVyJ3Mgb2ZmaWNlIGhhZCBmcmVxdWVudGx5IGJlZW4gdXNlZCB0byBhcnJhbmdlIHN1Y2ggbWVldGluZ3MuIEhvd2V2ZXIsIGhlIGFja25vd2xlZGdlZCB0aGF0IFdvb2R3YXJkIGFuZCBCZXJuc3RlaW4ncyB0aGVvcnkgb2YgTydCcmllbiBhcyB0aGUgdGFyZ2V0IGNvdWxkIG5vdCBiZSBkZWJ1bmtlZCB1bmxlc3MgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBCYWxkd2luIGhlYXJkIHdhcyByZWxlYXNlZC5bOTFdPC9wPgoKPHA+SW4gMTk2OCwgTydCcmllbiB3YXMgYXBwb2ludGVkIGJ5IFZpY2UgUHJlc2lkZW50IEh1YmVydCBIdW1waHJleSB0byBzZXJ2ZSBhcyB0aGUgbmF0aW9uYWwgZGlyZWN0b3Igb2YgSHVtcGhyZXkncyBwcmVzaWRlbnRpYWwgY2FtcGFpZ24gYW5kLCBzZXBhcmF0ZWx5LCBieSBIb3dhcmQgSHVnaGVzIHRvIHNlcnZlIGFzIEh1Z2hlcycgcHVibGljLXBvbGljeSBsb2JieWlzdCBpbiBXYXNoaW5ndG9uLiBPJ0JyaWVuIHdhcyBlbGVjdGVkIG5hdGlvbmFsIGNoYWlybWFuIG9mIHRoZSBETkMgaW4gMTk2OCBhbmQgMTk3MC4gSW4gbGF0ZSAxOTcxLCB0aGUgcHJlc2lkZW504oCZcyBicm90aGVyLCBEb25hbGQgTml4b24sIHdhcyBjb2xsZWN0aW5nIGludGVsbGlnZW5jZSBmb3IgaGlzIGJyb3RoZXIgYXQgdGhlIHRpbWUgYW5kIGFza2VkIEpvaG4gSC4gTWVpZXIsIGFuIGFkdmlzb3IgdG8gSG93YXJkIEh1Z2hlcywgYWJvdXQgTydCcmllbi4gSW4gMTk1NiwgRG9uYWxkIE5peG9uIGhhZCBib3Jyb3dlZCAkMjA1LDAwMCBmcm9tIEhvd2FyZCBIdWdoZXMgYW5kIGhhZCBuZXZlciByZXBhaWQgdGhlIGxvYW4uIFRoZSBsb2FuJ3MgZXhpc3RlbmNlIHN1cmZhY2VkIGR1cmluZyB0aGUgMTk2MCBwcmVzaWRlbnRpYWwgZWxlY3Rpb24gY2FtcGFpZ24sIGVtYmFycmFzc2luZyBSaWNoYXJkIE5peG9uIGFuZCBiZWNvbWluZyBhIHBvbGl0aWNhbCBsaWFiaWxpdHkuIEFjY29yZGluZyB0byBhdXRob3IgRG9uYWxkIE0uIEJhcnRsZXR0LCBSaWNoYXJkIE5peG9uIHdvdWxkIGRvIHdoYXRldmVyIHdhcyBuZWNlc3NhcnkgdG8gcHJldmVudCBhbm90aGVyIGZhbWlseSBlbWJhcnJhc3NtZW50Lls5M10gRnJvbSAxOTY4IHRvIDE5NzAsIEh1Z2hlcyB3aXRoZHJldyBuZWFybHkgaGFsZiBhIG1pbGxpb24gZG9sbGFycyBmcm9tIHRoZSBUZXhhcyBOYXRpb25hbCBCYW5rIG9mIENvbW1lcmNlIGZvciBjb250cmlidXRpb25zIHRvIGJvdGggRGVtb2NyYXRzIGFuZCBSZXB1YmxpY2FucywgaW5jbHVkaW5nIHByZXNpZGVudGlhbCBjYW5kaWRhdGVzIEh1bXBocmV5IGFuZCBOaXhvbi4gSHVnaGVzIHdhbnRlZCBEb25hbGQgTml4b24gYW5kIE1laWVyIGludm9sdmVkIGJ1dCBOaXhvbiBvcHBvc2VkIHRoaXMuWzk0XTwvcD4KCjxwPk1laWVyIHRvbGQgRG9uYWxkIHRoYXQgaGUgd2FzIHN1cmUgdGhlIERlbW9jcmF0cyB3b3VsZCB3aW4gdGhlIGVsZWN0aW9uIGJlY2F1c2UgdGhleSBoYWQgY29uc2lkZXJhYmxlIGluZm9ybWF0aW9uIG9uIFJpY2hhcmQgTml4b27igJlzIGlsbGljaXQgZGVhbGluZ3Mgd2l0aCBIdWdoZXMgdGhhdCBoYWQgbmV2ZXIgYmVlbiByZWxlYXNlZCwgYW5kIHRoYXQgaXQgcmVzaWRlZCB3aXRoIExhcnJ5IE/igJlCcmllbi5bOTVdIE/igJlCcmllbiwgd2hvIGhhZCByZWNlaXZlZCAkMjUsMDAwIGZyb20gSHVnaGVzLCBkaWQgbm90IGFjdHVhbGx5IGhhdmUgYW55IGRvY3VtZW50cyBidXQgTWVpZXIgY2xhaW1zIHRvIGhhdmUgd2FudGVkIFJpY2hhcmQgTml4b24gdG8gdGhpbmsgdGhhdCBoZSBkaWQuIEl0IGlzIG9ubHkgYSBxdWVzdGlvbiBvZiBjb25qZWN0dXJlIHRoZW4gdGhhdCBEb25hbGQgdG9sZCBoaXMgYnJvdGhlciB0aGF0IE1laWVyIGhhZCBnaXZlbiB0aGUgRGVtb2NyYXRzIGFsbCB0aGUgZGFtYWdpbmcgSHVnaGVzIGluZm9ybWF0aW9uIGFuZCB0aGF0IE/igJlCcmllbiBoYWQgdGhlIHByb29mLls5Nl0gQXMgYSBtYXR0ZXIgb2YgZmFjdCBPJ0JyaWVuIGhhZCBhbHNvIGJlZW4gYSBsb2JieWlzdCBmb3IgSHVnaGVzIGluIGEgRGVtb2NyYXQtY29udHJvbGxlZCBDb25ncmVzcyBhbmQgdGhlIHBvc3NpYmlsaXR5IG9mIGhpcyBmaW5kaW5nIG91dCBhYm91dCBIdWdoZXMnIGlsbGVnYWwgY29udHJpYnV0aW9ucyB0byB0aGUgTml4b24gY2FtcGFpZ24gd2FzIHRvbyBtdWNoIG9mIGEgZGFuZ2VyIGZvciBOaXhvbiB0byBpZ25vcmUuWzk3XTwvcD4KCjxwPk51bWVyb3VzIGh5cG90aGVzZXMgaGF2ZSBwZXJzaXN0ZWQgaW4gY2xhaW1pbmcgZGVlcGVyIHNpZ25pZmljYW5jZSB0byB0aGUgV2F0ZXJnYXRlIHNjYW5kYWwgdGhhbiB0aGF0IGFja25vd2xlZGdlZCBieSBtZWRpYSBhbmQgaGlzdG9yaWFuczo8L3A+Cgo8dWw+CiAgICA8bGk+SW4gdGhlIGJvb2sgVGhlIEVuZHMgb2YgUG93ZXIsIE5peG9uJ3MgY2hpZWYgb2Ygc3RhZmYgSC4gUi4gSGFsZGVtYW4gY2xhaW1lZCB0aGF0IHRoZSB0ZXJtICJCYXkgb2YgUGlncyIsIG1lbnRpb25lZCBieSBOaXhvbiBpbiBhIHRhcGUtcmVjb3JkZWQgV2hpdGUgSG91c2UgY29udmVyc2F0aW9uIGFzIHRoZSByZWFzb24gdGhlIENJQSBzaG91bGQgcHV0IGEgc3RvcCB0byB0aGUgV2F0ZXJnYXRlIGludmVzdGlnYXRpb25zLFs1XSB3YXMgdXNlZCBieSBOaXhvbiBhcyBhIGNvZGVkIHJlZmVyZW5jZSB0byBhIENJQSBwbG90IHRvIGFzc2Fzc2luYXRlIEZpZGVsIENhc3RybyBkdXJpbmcgdGhlIEpvaG4gRi4gS2VubmVkeSBhZG1pbmlzdHJhdGlvbi4gVGhlIENJQSBoYWQgbm90IGRpc2Nsb3NlZCB0aGlzIHBsb3QgdG8gdGhlIFdhcnJlbiBDb21taXNzaW9uLCB0aGUgY29tbWlzc2lvbiBpbnZlc3RpZ2F0aW5nIHRoZSBLZW5uZWR5IGFzc2Fzc2luYXRpb24sIGRlc3BpdGUgdGhlIGZhY3QgdGhhdCBpdCB3b3VsZCBhdHRyaWJ1dGUgYSBtb3RpdmUgdG8gQ2FzdHJvIGluIHRoZSBhc3Nhc3NpbmF0aW9uLls5OF0gQW55IHN1Y2ggcmV2ZWxhdGlvbiB3b3VsZCBhbHNvIGV4cG9zZSBDSUEvTWFmaWEgY29ubmVjdGlvbnMgdGhhdCBjb3VsZCBsZWFkIHRvIHVud2FudGVkIHNjcnV0aW55IG9mIHN1c3BlY3RlZCBDSUEvTWFmaWEgcGFydGljaXBhbnRzIGluIHRoZSBhc3Nhc3NpbmF0aW9uIG9mIHRoZSBwcmVzaWRlbnQuIEZ1cnRoZXJtb3JlLCBOaXhvbidzIGF3YXJlbmVzcyBhcyB2aWNlLXByZXNpZGVudCBvZiB0aGUgQmF5IG9mIFBpZ3MgcGxhbiBhbmQgaGlzIG93biB0aWVzIHRvIHRoZSB1bmRlcndvcmxkIGFuZCB1bnNhdm9yeSBpbnRlbGxpZ2VuY2Ugb3BlcmF0aW9ucyBtaWdodCBjb21lIHRvIGxpZ2h0LiBBIHRoZW9yZXRpY2FsIGNvbm5lY3Rpb24gYmV0d2VlbiB0aGUgS2VubmVkeSBhc3Nhc3NpbmF0aW9uIGFuZCB0aGUgV2F0ZXJnYXRlIHRhcGVzIHdhcyBsYXRlciByZWZlcnJlZCB0byBpbiB0aGUgZmlsbSBOaXhvbiwgZGlyZWN0ZWQgYnkgT2xpdmVyIFN0b25lLjwvbGk+CiAgICA8bGk+U2lsZW50IENvdXAgaXMgYSBiZXN0c2VsbGluZyAxOTkyIGJvb2sgYnkgTGVuIENvbG9kbnkgYW5kIFJvYmVydCBHZXR0bGluIGluIHdoaWNoIHRoZXkgY29udGVuZCB0aGF0IGZvcm1lciBOaXhvbiBXaGl0ZSBIb3VzZSBjb3Vuc2VsIEpvaG4gRGVhbiBvcmNoZXN0cmF0ZWQgdGhlIDE5NzIgV2F0ZXJnYXRlIGJ1cmdsYXJ5IHRvIHByb3RlY3QgaGlzIGZ1dHVyZSB3aWZlIE1hdXJlZW4gQmluZXIgYnkgcmVtb3ZpbmcgaW5mb3JtYXRpb24gbGlua2luZyBoZXIgdG8gYSBjYWxsLWdpcmwgKHByb3N0aXR1dGUpIHJpbmcgdGhhdCB3b3JrZWQgZm9yIHRoZSBETkMuIFRoZSBhdXRob3JzIGFsc28gYXJndWVkIHRoYXQgQWxleGFuZGVyIEhhaWcgd2FzIG5vdCBEZWVwIFRocm9hdCBidXQgd2FzIGEga2V5IHNvdXJjZSBmb3IgQm9iIFdvb2R3YXJkLCB3aG8gaGFkIGJyaWVmZWQgSGFpZyBhdCB0aGUgV2hpdGUgSG91c2UgaW4gMTk2OSBhbmQgMTk3MCBhcyBhIE5hdmFsIG9mZmljZXIuWzk5XVsxMDBdIFRpbWUgbWFnYXppbmUgY29uc2lkZXJlZCBidXQgZGVjaWRlZCBub3QgdG8gcHVibGlzaCBhbiBhcnRpY2xlIHRoYXQgbWFkZSBzaW1pbGFyIGNsYWltcy4gRGVhbiBzdWVkIHRoZSBwdWJsaXNoZXIgb2YgdGhlIGJvb2sgcmVzdWx0aW5nIGluIGEgOS15ZWFyIGxlZ2FsIGJhdHRsZS4gSW4gQXVndXN0IDIwMTQgRGVhbiBwdWJsaXNoZWQgYSBib29rIGNhbGxlZCBUaGUgTml4b24gRGVmZW5zZTogV2hhdCBIZSBLbmV3IGFuZCBXaGVuIEhlIEtuZXcgSXQsIGluIHdoaWNoIHRyYW5zY3JpcHRzIG9mIHByZXZpb3VzbHkgdW5oZWFyZCB0YXBlcyB3ZXJlIHB1Ymxpc2hlZCBhbmQgcHV0IGludG8gY29udGV4dC5bMTAxXVsxMDJdIE9uZSBub3RhYmxlIHRyYW5zY3JpcHQgcmVsZWFzZWQgd2FzIHRoYXQgb2YgYSBjb252ZXJzYXRpb24gYmV0d2VlbiBIYWxkZW1hbiBhbmQgTml4b24gaW4gTWFyY2ggMTk3MywgaW4gd2hpY2ggYm90aCBtZW4gYWdyZWVkIHRoYXQgRGVhbidzIHdvbWFuaXppbmcgd2FzIGFuIGVtYmFycmFzc21lbnQgdG8gdGhlIE5peG9uIEFkbWluaXN0cmF0aW9uLlsxMDJdPC9saT4KPC91bD4KCjxwPkphbWVzIEYuIE5lYWwsIHdobyBwcm9zZWN1dGVkIHRoZSBXYXRlcmdhdGUgNywgZGlkIG5vdCBiZWxpZXZlIE5peG9uIGhhZCBvcmRlcmVkIHRoZSBicmVhayBpbiBiZWNhdXNlIG9mIE5peG9uJ3Mgc3VycHJpc2VkIHJlYWN0aW9uIHdoZW4gaGUgd2FzIHRvbGQgYWJvdXQgaXQuIEhlIGNpdGVkIHRoZSBKdW5lIDIzLCAxOTcyIGNvbnZlcnNhdGlvbiB3aGVuIE5peG9uIGFza2VkIEhhbGRlbWFuLCAiV2hvIHdhcyB0aGUgYXNzaG9sZSB0aGF0IGRpZCBpdD8iWzEwM108L3A+Cgo8aDE+UmVhY3Rpb25zPC9oMT4KCjxwPkNoaW5hIOKAkyBJbiBKdWx5IDE5NzUsIGFjY29yZGluZyB0byB0aGVuLVByaW1lIE1pbmlzdGVyIEt1a3JpdCBQcmFtb2ogb2YgVGhhaWxhbmQsIENoYWlybWFuIE1hbyBaZWRvbmcgY2FsbGVkIHRoZSBXYXRlcmdhdGUgc2NhbmRhbCAidGhlIHJlc3VsdCBvZiAndG9vIG11Y2ggZnJlZWRvbSBvZiBwb2xpdGljYWwgZXhwcmVzc2lvbiBpbiB0aGUgVS5TLiciWzEwNF0gT24gTm92ZW1iZXIgMTk3NiwgTWFvIGNhbGxlZCBpdCAiYW4gaW5kaWNhdGlvbiBvZiBbQW1lcmljYW5dIGlzb2xhdGlvbmlzbVssXSB3aGljaCBoZSBzYXcgYXMgJ2Rpc2FzdHJvdXMnIGZvciBFdXJvcGUuIiBIZSBmdXJ0aGVyIHNhaWQsICJEbyBBbWVyaWNhbnMgcmVhbGx5IHdhbnQgdG8gZ28gaXNvbGF0aW9uaXN0PyAuLi4gSW4gdGhlIHR3byB3b3JsZCB3YXJzLCB0aGUgQW1lcmljYW5zIGNhbWUgW2luXSB2ZXJ5IGxhdGUsIGJ1dCBhbGwgdGhlIHNhbWUsIHRoZXkgZGlkIGNvbWUgaW4uIFRoZXkgaGF2ZW4ndCBiZWVuIGlzb2xhdGlvbmlzdCBpbiBwcmFjdGljZS4iWzEwNV08L3A+Cgo8cD5DdWJhIOKAkyBUaGVuLWxlYWRlciBGaWRlbCBDYXN0cm8gc2FpZCBpbiBoaXMgRGVjZW1iZXIgMTk3NCBpbnRlcnZpZXcgdGhhdCwgb2YgdGhlIGNyaW1lcyBjb21taXR0ZWQgYnkgdGhlIEN1YmFuIGV4aWxlcywgbGlrZSBraWxsaW5ncywgYXR0YWNrcyBvbiBDdWJhbiBwb3J0cywgYW5kIHNweWluZywgdGhlIFdhdGVyZ2F0ZSBidXJnbGFyaWVzIGFuZCB3aXJldGFwcGluZ3Mgd2VyZSAicHJvYmFibHkgdGhlIGxlYXN0IG9mIFt0aGVtXSIuWzEwNl08L3A+Cgo8cD5JcmFuIOKAkyBUaGVuLVNoYWggb2YgSXJhbiBNb2hhbW1hZCBSZXphIFBhaGxhdmkgdG9sZCB0aGUgcHJlc3MsICJJIHdhbnQgdG8gc2F5IHF1aXRlIGVtcGhhdGljYWxseSB0aGF0IGV2ZXJ5dGhpbmcgdGhhdCB3b3VsZCB3ZWFrZW4gb3IgamVvcGFyZGl6ZSB0aGUgUHJlc2lkZW50J3MgcG93ZXIgdG8gbWFrZSBkZWNpc2lvbnMgaW4gc3BsaXQgc2Vjb25kcyB3b3VsZCByZXByZXNlbnQgZ3JhdmUgZGFuZ2VyIGZvciB0aGUgd2hvbGUgd29ybGQuIlsxMDddPC9wPgoKPHA+SmFwYW4g4oCTIEluIEF1Z3VzdCAxOTczLCB0aGVuLVByaW1lIE1pbmlzdGVyIEtha3VlaSBUYW5ha2Egc2FpZCAiV2F0ZXJnYXRlIGhhZCAnbm8gY2FuY2VsbGluZyBpbmZsdWVuY2Ugb24gVS5TLiBsZWFkZXJzaGlwIGluIHRoZSB3b3JsZC4nIiBGdXJ0aGVybW9yZSwgVGFuYWthIHNhaWQsICJUaGUgcGl2b3RhbCByb2xlIG9mIHRoZSBVbml0ZWQgU3RhdGVzIGhhcyBub3QgY2hhbmdlZCwgc28gdGhpcyBpbnRlcm5hbCBhZmZhaXIgd2lsbCBub3QgYmUgcGVybWl0dGVkIHRvIGhhdmUgYW4gZWZmZWN0LiJbMTA3XSBJbiBNYXJjaCAxOTc1LCBUYW5ha2EncyBzdWNjZXNzb3IsIFRha2VvIE1pa2ksIHNhaWQgYXQgYSBjb252ZW50aW9uIG9mIHRoZSBMaWJlcmFsIERlbW9jcmF0aWMgUGFydHksICJBdCB0aGUgdGltZSBvZiB0aGUgV2F0ZXJnYXRlIGlzc3VlIGluIEFtZXJpY2EsIEkgd2FzIGRlZXBseSBtb3ZlZCBieSB0aGUgc2NlbmUgaW4gdGhlIEhvdXNlIEp1ZGljaWFyeSBDb21taXR0ZWUsIHdoZXJlIGVhY2ggbWVtYmVyIG9mIHRoZSBjb21taXR0ZWUgZXhwcmVzc2VkIGhpcyBvd24gb3IgaGVyIG93biBoZWFydCBiYXNlZCB1cG9uIHRoZSBzcGlyaXQgb2YgdGhlIEFtZXJpY2FuIENvbnN0aXR1dGlvbi4gSXQgd2FzIHRoaXMgYXR0aXR1ZGUsIEkgdGhpbmssIHRoYXQgcmVzY3VlZCBBbWVyaWNhbiBkZW1vY3JhY3kuIlsxMDhdPC9wPgoKPHA+U2luZ2Fwb3JlIOKAkyBUaGVuLVByaW1lIE1pbmlzdGVyIExlZSBLdWFuIFlldyBzYWlkIGluIEF1Z3VzdCAxOTczLCAiQXMgb25lIHN1cnByaXNpbmcgcmV2ZWxhdGlvbiBmb2xsb3dzIGFub3RoZXIgYXQgdGhlIFNlbmF0ZSBoZWFyaW5ncyBvbiBXYXRlcmdhdGUsIGl0IGJlY29tZXMgaW5jcmVhc2luZ2x5IGNsZWFyIHRoYXQgV2FzaGluZ3RvbiwgW0QuQy5dLCB0b2RheSBpcyBpbiBubyBwb3NpdGlvbiB0byBvZmZlciB0aGUgbW9yYWwgb3Igc3Ryb25nIHBvbGl0aWNhbCBhbmQgZWNvbm9taWMgbGVhZGVyc2hpcCBmb3Igd2hpY2ggaXRzIGZyaWVuZHMgYW5kIGFsbGllcyBhcmUgeWVhcm5pbmcuIlsxMDldIE1vcmVvdmVyLCBMZWUgc2FpZCB0aGF0IHRoZSBzY2FuZGFsIG1heSBoYXZlIGxlZCB0aGUgVW5pdGVkIFN0YXRlcyB0byBsZXNzZW4gaXRzIGludGVyZXN0cyBhbmQgY29tbWl0bWVudHMgaW4gd29ybGQgYWZmYWlycywgdG8gd2Vha2VuIGl0cyBhYmlsaXR5IHRvIGVuZm9yY2UgdGhlIFBhcmlzIFBlYWNlIEFjY29yZHMgb24gVmlldG5hbSwgYW5kIHRvIG5vdCByZWFjdCB0byB2aW9sYXRpb25zIG9mIHRoZSBBY2NvcmRzLiBMZWUgc2FpZCBmdXJ0aGVyIHRoYXQgdGhlIFVuaXRlZCBTdGF0ZXMgIm1ha2VzIHRoZSBmdXR1cmUgb2YgdGhpcyBwZWFjZSBpbiBJbmRvbmVzaWEgYW4gZXh0cmVtZWx5IGJsZWFrIG9uZSB3aXRoIGdyYXZlIGNvbnNlcXVlbmNlIGZvciB0aGUgY29udGlndW91cyBzdGF0ZXMiLiBMZWUgdGhlbiBibGFtZWQgdGhlIHNjYW5kYWwgZm9yIGVjb25vbWljIGluZmxhdGlvbiBpbiBTaW5nYXBvcmUgYmVjYXVzZSB0aGUgU2luZ2Fwb3JlIGRvbGxhciB3YXMgcGVnZ2VkIHRvIHRoZSBVbml0ZWQgU3RhdGVzIGRvbGxhciBhdCB0aGUgdGltZSwgYXNzdW1pbmcgdGhlIFUuUy4gZG9sbGFyIHdhcyBzdHJvbmdlciB0aGFuIHRoZSBCcml0aXNoIHBvdW5kIHN0ZXJsaW5nLlsxMTBdPC9wPgoKPHA+U292aWV0IFVuaW9uIOKAkyBJbiB0aGUgcHJlc3MgY29uZmVyZW5jZSBvZiBNYXkgMTk3MywgR2VuZXJhbCBTZWNyZXRhcnkgTGVvbmlkIEJyZXpobmV2IHRvbGQgU2VjcmV0YXJ5IG9mIFN0YXRlIEhlbnJ5IEtpc3NpbmdlciBob3cgdGhlIFVuaXRlZCBTdGF0ZXMgaGFuZGxlZCB0aGUgc2NhbmRhbCB3YXMgZGlmZmVyZW50IGZyb20gaG93IHRoZSBDb21tdW5pc3QgUGFydHkgb2YgdGhlIFNvdmlldCBVbmlvbiBoYWQgb3BlcmF0ZWQuIFRoZXJlLCB3aXRob3V0IGFueSBvcHBvc2l0aW9uIHBhcnR5IGJhY2sgdGhlbiwgbWVtYmVycyBvZiB0aGUgUGFydHkgaGFkIGJlZW4gd2lyZXRhcHBlZCBmb3IgYW55IHBvc3NpYmxlIHdyb25nZG9pbmcuWzExMV0gSW4gSnVuZSAxOTczLCB3aGVuIEJyZXpobmV2IGFycml2ZXMgdG8gdGhlIFVuaXRlZCBTdGF0ZXMgdG8gaGF2ZSBhIG9uZS13ZWVrIG1lZXRpbmcgd2l0aCBQcmVzaWRlbnQgTml4b24sWzExMl0gQnJlemhuZXYgdG9sZCB0aGUgcHJlc3MsICJJIGRvIG5vdCBpbnRlbnQgdG8gcmVmZXIgdG8gdGhhdCBtYXR0ZXLigJRbdGhlIFdhdGVyZ2F0ZV0uIEl0IHdvdWxkIGJlIGNvbXBsZXRlbHkgaW5kZWNlbnQgZm9yIG1lIHRvIHJlZmVyIHRvIGl0LiBbLi4uXSBNeSBhdHRpdHVkZSB0b3dhcmQgTXIuIE5peG9uIGlzIG9mIHZlcnkgZ3JlYXQgcmVzcGVjdC4iIFdoZW4gb25lIHJlcG9ydGVyIHN1Z2dlc3RlZCB0aGF0IFByZXNpZGVudCBOaXhvbiBhbmQgaGlzIHBvc2l0aW9uIHdpdGggQnJlemhuZXYgd2VyZSAid2Vha2VuZWQiIGJ5IHRoZSBzY2FuZGFsLCBCcmV6aG5ldiByZXBsaWVkLCAiSXQgZG9lcyBub3QgZW50ZXIgbXkgbWluZCB0byB0aGluayB3aGV0aGVyIE1yLiBOaXhvbiBoYXMgbG9zdCBvciBnYWluZWQgYW55IGluZmx1ZW5jZSBiZWNhdXNlIG9mIHRoZSBhZmZhaXIuIiBUaGVuIGhlIHNhaWQgZnVydGhlciB0aGF0IGhlIGhhZCByZXNwZWN0ZWQgTml4b24gYmVjYXVzZSBvZiBOaXhvbidzICJyZWFsaXN0aWMgYW5kIGNvbnN0cnVjdGl2ZSBhcHByb2FjaCB0byBbU292aWV0IFVuaW9u4oCTVW5pdGVkIFN0YXRlcyByZWxhdGlvbnMgWy4uLl0gcGFzc2luZyBmcm9tIGFuIGVyYSBvZiBjb25mcm9udGF0aW9uIHRvIGFuIGVyYSBvZiBuZWdvdGlhdGlvbnMgYmV0d2VlbiBuYXRpb25zLiJbMTEzXTwvcD4KCjxwPlVuaXRlZCBLaW5nZG9tIOKAkyBUYWxrcyBiZXR3ZWVuIE5peG9uIGFuZCBQcmltZSBNaW5pc3RlciBFZHdhcmQgSGVhdGggbWF5IGhhdmUgYmVlbiBidWdnZWQuIEhlYXRoIGRpZCBub3QgcHVibGljbHkgZGlzcGxheSBoaXMgYW5nZXIsIHdpdGggYWlkZXMgc2F5aW5nIHRoYXQgaGUgd2FzIHVuY29uY2VybmVkIGFib3V0IGhhdmluZyBiZWVuIGJ1Z2dlZCBhdCB0aGUgV2hpdGUgSG91c2UuIEFjY29yZGluZyB0byBvZmZpY2lhbHMsIEhlYXRoIGNvbW1vbmx5IGhhZCBub3RlcyB0YWtlbiBvZiBoaXMgcHVibGljIGRpc2N1c3Npb25zIHdpdGggTml4b24gc28gYSByZWNvcmRpbmcgd291bGQgbm90IGhhdmUgYm90aGVyZWQgaGltLiBIb3dldmVyLCBvZmZpY2lhbHMgcHJpdmF0ZWx5IHNhaWQgdGhhdCBpZiBwcml2YXRlIHRhbGtzIHdpdGggTml4b24gd2VyZSBidWdnZWQsIHRoZW4gSGVhdGggd291bGQgYmUgb3V0cmFnZWQuIEV2ZW4gc28sIEhlYXRoIHByaXZhdGVseSB3YXMgb3V0cmFnZWQgb3ZlciBiZWluZyB0YXBlZCB3aXRob3V0IGhpcyBwcmlvciBrbm93bGVkZ2UuWzExNF08L3A+Cgo8cD5Vbml0ZWQgU3RhdGVzIOKAkyBJbiBNYXkgMTk3NSwgYWZ0ZXIgdGhlIGZhbGwgb2YgU2FpZ29uLCB3aGljaCBlbmRlZCB0aGUgVmlldG5hbSBXYXIsIFNlY3JldGFyeSBvZiBTdGF0ZSBIZW5yeSBLaXNzaW5nZXIgc2FpZCBpZiB0aGUgc2NhbmRhbCBkaWQgbm90IGFmZmVjdCBSaWNoYXJkIE5peG9uIGFuZCB0aGUgQ29uZ3Jlc3MgZGlkIG5vdCBvdmVycmlkZSBOaXhvbidzIHZldG8gb2YgdGhlIFdhciBQb3dlcnMgUmVzb2x1dGlvbiwgTm9ydGggVmlldG5hbSB3b3VsZCBub3QgaGF2ZSBjYXB0dXJlZCBTb3V0aCBWaWV0bmFtLlsxMTVdPC9wPgo=",
      "origin_url": null,
      "content_type": "text/html"
    },
    "model": "documents.file",
    "pk": 4
  },
  {
    "fields": {
      "attached_file": 1,
      "updated": "2015-03-04T15:01:59.867Z",
      "created": "2015-03-04T15:01:59.867Z",
      "creator": "",
      "type": "text/html",
      "title": "John F. Kennedy - Wikipedia"
    },
    "model": "documents.document",
    "pk": "688cea47c27f11e494e4c42c0303b893"
  },
  {
    "fields": {
      "attached_file": 2,
      "updated": "2015-03-04T15:32:54.555Z",
      "created": "2015-03-04T15:32:54.555Z",
      "creator": "",
      "type": "text/html",
      "title": "Plato - Wikipedia"
    },
    "model": "documents.document",
    "pk": "ba07e20ac28311e4a5bec42c0303b893"
  },
  {
    "fields": {
      "attached_file": 3,
      "updated": "2015-03-04T15:15:34.747Z",
      "created": "2015-03-04T15:15:34.747Z",
      "creator": "",
      "type": "text/html",
      "title": "Max Planck - Wikipedia"
    },
    "model": "documents.document",
    "pk": "4e41bee6c28111e4b236c42c0303b893"
  },
  {
    "fields": {
      "attached_file": 4,
      "updated": "2015-03-04T15:55:05.164Z",
      "created": "2015-03-04T15:55:05.164Z",
      "creator": "",
      "type": "text/html",
      "title": "The Watergate scandal - Wikipedia"
    },
    "model": "documents.document",
    "pk": "ac93538cc28a11e4b948c42c0303b893"
  }
]